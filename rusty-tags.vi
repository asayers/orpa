!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
Abort	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    Abort = raw::GIT_EUSER,$/;"	e	enum:TreeWalkResult
Active	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    Active,$/;"	e	enum:FmtSpanInner
Added	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Added,$/;"	e	enum:Delta
AddingObjects	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    AddingObjects,$/;"	e	enum:PackBuilderStage
Adhoc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/kind.rs	/^impl Adhoc {$/;"	c
Adhoc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/kind.rs	/^pub struct Adhoc;$/;"	s
AdhocKind	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/kind.rs	/^pub trait AdhocKind: Sized {$/;"	i
AdjustTokenPrivileges	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn AdjustTokenPrivileges($/;"	f	function:inner::acquire_privileges
All	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    All,$/;"	e	enum:AutotagOption
All	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    All,$/;"	e	enum:SubmoduleIgnore
Alt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/debug.rs	/^impl<T, V> MakeVisitor<T> for Alt<V>$/;"	c
Alt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/debug.rs	/^impl<V, O> VisitOutput<O> for Alt<V>$/;"	c
Alt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/debug.rs	/^impl<V> Alt<V> {$/;"	c
Alt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/debug.rs	/^impl<V> Visit for Alt<V>$/;"	c
Alt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/debug.rs	/^impl<V> VisitFmt for Alt<V>$/;"	c
Alt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/debug.rs	/^impl<V> VisitWrite for Alt<V>$/;"	c
Alt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/debug.rs	/^pub struct Alt<V>(V);$/;"	s
Ambiguous	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    Ambiguous { timestamp: V, min: D, max: D },$/;"	e	enum:SerdeError
Ambiguous	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    Ambiguous(T \/*min*\/, T \/*max*\/),$/;"	e	enum:LocalResult
Ambiguous	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Ambiguous,$/;"	e	enum:ErrorCode
AnalyzeIndex	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    AnalyzeIndex,$/;"	e	enum:StashApplyProgress
AnalyzeModified	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    AnalyzeModified,$/;"	e	enum:StashApplyProgress
AnalyzeUntracked	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    AnalyzeUntracked,$/;"	e	enum:StashApplyProgress
AnnotatedCommit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^impl<'repo> AnnotatedCommit<'repo> {$/;"	c
AnnotatedCommit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^impl<'repo> Binding for AnnotatedCommit<'repo> {$/;"	c
AnnotatedCommit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^impl<'repo> Drop for AnnotatedCommit<'repo> {$/;"	c
AnnotatedCommit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^pub struct AnnotatedCommit<'repo> {$/;"	s
Any	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Any,$/;"	e	enum:ObjectType
AnyMap	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^type AnyMap = HashMap<TypeId, Box<dyn Any + Send + Sync>, BuildHasherDefault<IdHasher>>;$/;"	t
App	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    App,$/;"	e	enum:ConfigLevel
Applied	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Applied,$/;"	e	enum:ErrorCode
ApplyFail	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    ApplyFail,$/;"	e	enum:ErrorCode
ApplyLocation	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/apply.rs	/^impl Binding for ApplyLocation {$/;"	c
ApplyLocation	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/apply.rs	/^pub enum ApplyLocation {$/;"	g
ApplyMailbox	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    ApplyMailbox,$/;"	e	enum:RepositoryState
ApplyMailboxOrRebase	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    ApplyMailboxOrRebase,$/;"	e	enum:RepositoryState
ApplyOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/apply.rs	/^impl<'cb> ApplyOptions<'cb> {$/;"	c
ApplyOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/apply.rs	/^pub struct ApplyOptions<'cb> {$/;"	s
April	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    April = 3,$/;"	e	enum:Month
AsField	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/field.rs	/^pub trait AsField: crate::sealed::Sealed {$/;"	i
AsId	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^pub trait AsId: crate::sealed::Sealed {$/;"	i
AssertSend	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    trait AssertSend: Send {}$/;"	i	module:test
AssertSync	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    trait AssertSync: Sync {}$/;"	i	module:test
AssertionLayer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    impl<S> Layer<S> for AssertionLayer$/;"	c	module:tests
AssertionLayer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    struct AssertionLayer;$/;"	s	module:tests
AttrCheckFlags	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl Default for AttrCheckFlags {$/;"	c
Attributes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^impl<'a> RecordFields for Attributes<'a> {$/;"	c
Attributes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^impl<'a> crate::sealed::Sealed<RecordFieldsMarker> for Attributes<'a> {}$/;"	c
August	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    August = 7,$/;"	e	enum:Month
Auth	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Auth,$/;"	e	enum:ErrorCode
Auto	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    Auto = raw::GIT_CLONE_LOCAL_AUTO as isize,$/;"	e	enum:CloneLocal
Auto	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Auto,$/;"	e	enum:AutotagOption
AutoSi	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    AutoSi,$/;"	e	enum:SecondsFormat
AutotagOption	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^    impl Convert<raw::git_remote_autotag_option_t> for AutotagOption {$/;"	c	module:impls
AutotagOption	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^pub enum AutotagOption {$/;"	g
Backtrace	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/backtrace.rs	/^pub(crate) enum Backtrace {}$/;"	g
BadFormat	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    BadFormat,$/;"	e	enum:ParseErrorKind
BadName	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^impl Error for BadName {}$/;"	c
BadName	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^impl fmt::Display for BadName {$/;"	c
BadName	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^pub struct BadName {$/;"	s
BareRepo	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    BareRepo,$/;"	e	enum:ErrorCode
Batching	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^impl<B, F, I> Iterator for Batching<I, F>$/;"	c
Batching	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^impl<I, F> fmt::Debug for Batching<I, F> where I: fmt::Debug {$/;"	c
Batching	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub struct Batching<I, F> {$/;"	s
BinaryCb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^pub type BinaryCb<'a> = dyn FnMut(DiffDelta<'_>, DiffBinary<'_>) -> bool + 'a;$/;"	t
Binding	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^pub trait Binding: Sized {$/;"	i
Bisect	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Bisect,$/;"	e	enum:RepositoryState
Black	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    Black,$/;"	e	enum:Color
Blame	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^impl<'repo> Binding for Blame<'repo> {$/;"	c
Blame	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^impl<'repo> Blame<'repo> {$/;"	c
Blame	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^impl<'repo> Drop for Blame<'repo> {$/;"	c
Blame	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^pub struct Blame<'repo> {$/;"	s
BlameHunk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^impl<'blame> Binding for BlameHunk<'blame> {$/;"	c
BlameHunk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^impl<'blame> BlameHunk<'blame> {$/;"	c
BlameHunk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^pub struct BlameHunk<'blame> {$/;"	s
BlameIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^impl<'blame> DoubleEndedIterator for BlameIter<'blame> {$/;"	c
BlameIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^impl<'blame> ExactSizeIterator for BlameIter<'blame> {}$/;"	c
BlameIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^impl<'blame> Iterator for BlameIter<'blame> {$/;"	c
BlameIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^pub struct BlameIter<'blame> {$/;"	s
BlameOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^impl Binding for BlameOptions {$/;"	c
BlameOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^impl BlameOptions {$/;"	c
BlameOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^impl Default for BlameOptions {$/;"	c
BlameOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^pub struct BlameOptions {$/;"	s
Blink	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^    Blink,$/;"	e	enum:Styles
Blob	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^impl<'repo> Binding for Blob<'repo> {$/;"	c
Blob	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^impl<'repo> Blob<'repo> {$/;"	c
Blob	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^impl<'repo> Clone for Blob<'repo> {$/;"	c
Blob	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^impl<'repo> Drop for Blob<'repo> {$/;"	c
Blob	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^impl<'repo> std::fmt::Debug for Blob<'repo> {$/;"	c
Blob	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^pub struct Blob<'repo> {$/;"	s
Blob	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Blob,$/;"	e	enum:FileMode
Blob	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Blob,$/;"	e	enum:ObjectType
BlobExecutable	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    BlobExecutable,$/;"	e	enum:FileMode
BlobWriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^impl<'repo> Binding for BlobWriter<'repo> {$/;"	c
BlobWriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^impl<'repo> BlobWriter<'repo> {$/;"	c
BlobWriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^impl<'repo> Drop for BlobWriter<'repo> {$/;"	c
BlobWriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^impl<'repo> io::Write for BlobWriter<'repo> {$/;"	c
BlobWriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^pub struct BlobWriter<'repo> {$/;"	s
Blue	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    Blue,$/;"	e	enum:Color
Bold	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^    Bold,$/;"	e	enum:Styles
Bomb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^    impl<'a> Drop for Bomb<'a> {$/;"	c	function:transport_factory
Bomb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^    struct Bomb<'a> {$/;"	s	function:transport_factory
Bool	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    Bool(bool),$/;"	e	enum:ValueMatch
Borrowed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/indexer.rs	/^    Borrowed(*const raw::git_indexer_progress),$/;"	e	enum:ProgressState
Both	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/apply.rs	/^    Both,$/;"	e	enum:ApplyLocation
Both	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs	/^    Both(A, B),$/;"	e	enum:EitherOrBoth
Box	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^impl From<Error> for Box<dyn StdError + 'static> {$/;"	c
Box	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^impl From<Error> for Box<dyn StdError + Send + 'static> {$/;"	c
Box	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^impl From<Error> for Box<dyn StdError + Send + Sync + 'static> {$/;"	c
Box	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/kind.rs	/^impl BoxedKind for Box<dyn StdError + Send + Sync> {}$/;"	c
Box	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.21/src/lib.rs	/^impl<T: StructOpt> StructOpt for Box<T> {$/;"	c
Box	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.21/src/lib.rs	/^impl<T: StructOptInternal> StructOptInternal for Box<T> {$/;"	c
BoxMakeWriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^impl BoxMakeWriter {$/;"	c
BoxMakeWriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^impl Debug for BoxMakeWriter {$/;"	c
BoxMakeWriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^impl MakeWriter for BoxMakeWriter {$/;"	c
BoxMakeWriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^pub struct BoxMakeWriter {$/;"	s
Boxed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/kind.rs	/^impl Boxed {$/;"	c
Boxed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/kind.rs	/^pub struct Boxed;$/;"	s
Boxed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^impl<M> MakeWriter for Boxed<M>$/;"	c
Boxed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^struct Boxed<M>(M);$/;"	s
BoxedError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/wrapper.rs	/^impl Debug for BoxedError {$/;"	c
BoxedError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/wrapper.rs	/^impl Display for BoxedError {$/;"	c
BoxedError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/wrapper.rs	/^impl StdError for BoxedError {$/;"	c
BoxedError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/wrapper.rs	/^pub struct BoxedError(pub Box<dyn StdError + Send + Sync>);$/;"	s
BoxedKind	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/kind.rs	/^pub trait BoxedKind: Sized {$/;"	i
Branch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/branch.rs	/^impl<'repo> Branch<'repo> {$/;"	c
Branch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/branch.rs	/^pub struct Branch<'repo> {$/;"	s
BranchType	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^    impl Convert<raw::git_branch_t> for BranchType {$/;"	c	module:impls
BranchType	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^pub enum BranchType {$/;"	g
Branches	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/branch.rs	/^impl<'repo> Branches<'repo> {$/;"	c
Branches	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/branch.rs	/^impl<'repo> Drop for Branches<'repo> {$/;"	c
Branches	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/branch.rs	/^impl<'repo> Iterator for Branches<'repo> {$/;"	c
Branches	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/branch.rs	/^pub struct Branches<'repo> {$/;"	s
BrightBlack	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    BrightBlack,$/;"	e	enum:Color
BrightBlue	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    BrightBlue,$/;"	e	enum:Color
BrightCyan	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    BrightCyan,$/;"	e	enum:Color
BrightGreen	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    BrightGreen,$/;"	e	enum:Color
BrightMagenta	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    BrightMagenta,$/;"	e	enum:Color
BrightRed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    BrightRed,$/;"	e	enum:Color
BrightWhite	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    BrightWhite,$/;"	e	enum:Color
BrightYellow	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    BrightYellow,$/;"	e	enum:Color
Buf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/buf.rs	/^impl Binding for Buf {$/;"	c
Buf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/buf.rs	/^impl Buf {$/;"	c
Buf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/buf.rs	/^impl Default for Buf {$/;"	c
Buf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/buf.rs	/^impl Deref for Buf {$/;"	c
Buf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/buf.rs	/^impl DerefMut for Buf {$/;"	c
Buf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/buf.rs	/^impl Drop for Buf {$/;"	c
Buf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/buf.rs	/^pub struct Buf {$/;"	s
BufSize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    BufSize,$/;"	e	enum:ErrorCode
Buffer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^    type Buffer: Default + AsRef<[Option<Self::Item>]> + AsMut<[Option<Self::Item>]>;$/;"	t	interface:TupleCollect
Buffered	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/chain.rs	/^    Buffered {$/;"	e	enum:ChainState
CLEAR	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^pub static CLEAR: Style = Style(CLEARV);$/;"	v
CString	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^    impl Convert<*const libc::c_char> for CString {$/;"	c	module:impls
CString	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^impl IntoCString for CString {$/;"	c
Callback	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Callback,$/;"	e	enum:ErrorClass
CallsiteMatch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^impl CallsiteMatch {$/;"	c
CallsiteMatch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^pub(crate) struct CallsiteMatch {$/;"	s
CallsiteMatcher	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^impl CallsiteMatcher {$/;"	c
CallsiteMatcher	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^pub(crate) type CallsiteMatcher = MatchSet<field::CallsiteMatch>;$/;"	t
CastOrPanic	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^pub trait CastOrPanic {$/;"	i
Cert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cert.rs	/^impl<'a> Binding for Cert<'a> {$/;"	c
Cert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cert.rs	/^impl<'a> Cert<'a> {$/;"	c
Cert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cert.rs	/^pub struct Cert<'a> {$/;"	s
CertHostkey	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cert.rs	/^impl<'a> CertHostkey<'a> {$/;"	c
CertHostkey	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cert.rs	/^pub struct CertHostkey<'a> {$/;"	s
CertX509	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cert.rs	/^impl<'a> CertX509<'a> {$/;"	c
CertX509	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cert.rs	/^pub struct CertX509<'a> {$/;"	s
Certificate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Certificate,$/;"	e	enum:ErrorCode
CertificateCheck	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^pub type CertificateCheck<'a> = dyn FnMut(&Cert<'_>, &str) -> bool + 'a;$/;"	t
Chain	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/chain.rs	/^impl Default for Chain<'_> {$/;"	c
Chain	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/chain.rs	/^impl DoubleEndedIterator for Chain<'_> {$/;"	c
Chain	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/chain.rs	/^impl ExactSizeIterator for Chain<'_> {$/;"	c
Chain	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/chain.rs	/^impl<'a> Chain<'a> {$/;"	c
Chain	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/chain.rs	/^impl<'a> Iterator for Chain<'a> {$/;"	c
Chain	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/chain.rs	/^pub(crate) struct Chain<'a> {$/;"	s
Chain	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/lib.rs	/^pub struct Chain<'a> {$/;"	s
ChainState	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/chain.rs	/^pub(crate) enum ChainState<'a> {$/;"	g
Checkout	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Checkout,$/;"	e	enum:ErrorClass
CheckoutBuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^impl<'cb> CheckoutBuilder<'cb> {$/;"	c
CheckoutBuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^impl<'cb> Default for CheckoutBuilder<'cb> {$/;"	c
CheckoutBuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^pub struct CheckoutBuilder<'cb> {$/;"	s
CheckoutModified	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    CheckoutModified,$/;"	e	enum:StashApplyProgress
CheckoutNotificationType	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl CheckoutNotificationType {$/;"	c
CheckoutUntracked	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    CheckoutUntracked,$/;"	e	enum:StashApplyProgress
Checkpoint	/home/asayers/projects/orpa/src/main.rs	/^    Checkpoint { revspec: String },$/;"	e	enum:Cmd
Checkpoint	/home/asayers/projects/orpa/src/main.rs	/^    Checkpoint,$/;"	e	enum:Status
CherryPick	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    CherryPick,$/;"	e	enum:ErrorClass
CherryPick	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    CherryPick,$/;"	e	enum:RepositoryState
CherryPickSequence	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    CherryPickSequence,$/;"	e	enum:RepositoryState
CherrypickOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cherrypick.rs	/^impl<'cb> CherrypickOptions<'cb> {$/;"	c
CherrypickOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cherrypick.rs	/^pub struct CherrypickOptions<'cb> {$/;"	s
ChronoFmtType	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^enum ChronoFmtType {$/;"	g
ChronoFmtType	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^impl Default for ChronoFmtType {$/;"	c
ChronoLocal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^impl ChronoLocal {$/;"	c
ChronoLocal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^impl FormatTime for ChronoLocal {$/;"	c
ChronoLocal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^pub struct ChronoLocal {$/;"	s
ChronoUtc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^impl ChronoUtc {$/;"	c
ChronoUtc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^impl FormatTime for ChronoUtc {$/;"	c
ChronoUtc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^pub struct ChronoUtc {$/;"	s
Chunk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^impl<'a, I> Drop for Chunk<'a, I>$/;"	c
Chunk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^impl<'a, I> Iterator for Chunk<'a, I>$/;"	c
Chunk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^pub struct Chunk<'a, I: 'a>$/;"	s
ChunkIndex	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^impl ChunkIndex {$/;"	c
ChunkIndex	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^impl<'a, A> KeyFunction<A> for ChunkIndex {$/;"	c
ChunkIndex	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^struct ChunkIndex {$/;"	s
Chunks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^impl<'a, I> Iterator for Chunks<'a, I>$/;"	c
Chunks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^pub struct Chunks<'a, I: 'a>$/;"	s
CircularTupleWindows	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^impl<I, T> Iterator for CircularTupleWindows<I, T>$/;"	c
CircularTupleWindows	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^pub struct CircularTupleWindows<I, T: Clone>$/;"	s
Clean	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Clean,$/;"	e	enum:RepositoryState
Clear	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^    Clear,$/;"	e	enum:Styles
CloneLocal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^pub enum CloneLocal {$/;"	g
Close	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    Close,$/;"	e	enum:FmtSpanInner
CloseGuard	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^impl<'a> CloseGuard<'a> {$/;"	c
CloseGuard	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^impl<'a> Drop for CloseGuard<'a> {$/;"	c
CloseGuard	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^pub(crate) struct CloseGuard<'a> {$/;"	s
CloseHandle	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    impl CloseHandle {$/;"	c	module:tests
CloseHandle	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    struct CloseHandle {$/;"	s	module:tests
CloseLayer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    impl CloseLayer {$/;"	c	module:tests
CloseLayer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    impl<S> Layer<S> for CloseLayer$/;"	c	module:tests
CloseLayer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    struct CloseLayer {$/;"	s	module:tests
CloseState	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    impl CloseState {$/;"	c	module:tests
CloseState	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    struct CloseState {$/;"	s	module:tests
Cmd	/home/asayers/projects/orpa/src/main.rs	/^enum Cmd {$/;"	g
Coalesce	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^pub type Coalesce<I, F> = CoalesceBy<I, F, <I as Iterator>::Item>;$/;"	t
CoalesceBy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^impl<I, F, T> Iterator for CoalesceBy<I, F, T>$/;"	c
CoalesceBy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^impl<I, F, T> fmt::Debug for CoalesceBy<I, F, T>$/;"	c
CoalesceBy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^impl<I: Clone, F: Clone, T: Clone> Clone for CoalesceBy<I, F, T>$/;"	c
CoalesceBy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^impl<I: Iterator, F: CoalescePredicate<I::Item, T>, T> FusedIterator for CoalesceBy<I, F, T> {}$/;"	c
CoalesceBy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^pub struct CoalesceBy<I, F, T>$/;"	s
CoalescePredicate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^pub trait CoalescePredicate<Item, T> {$/;"	i
Color	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^impl Color {$/;"	c
Color	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^impl From<String> for Color {$/;"	c
Color	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^impl FromStr for Color {$/;"	c
Color	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^impl<'a> From<&'a str> for Color {$/;"	c
Color	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^pub enum Color {$/;"	g
ColoredString	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^impl ColoredString {$/;"	c
ColoredString	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^impl Colorize for ColoredString {$/;"	c
ColoredString	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^impl Default for ColoredString {$/;"	c
ColoredString	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^impl Deref for ColoredString {$/;"	c
ColoredString	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^impl fmt::Display for ColoredString {$/;"	c
ColoredString	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^impl<'a> From<&'a str> for ColoredString {$/;"	c
ColoredString	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^pub struct ColoredString {$/;"	s
ColoringFormatter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/formatters.rs	/^pub trait ColoringFormatter {$/;"	i
Colorize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^pub trait Colorize {$/;"	i
Combination	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    type Combination = Tuple1Combination<I>;$/;"	t	implementation:Item
Combination	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    type Combination: From<I> + Iterator<Item = Self>;$/;"	t	interface:HasCombination
Combinations	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs	/^impl<I: Iterator> Combinations<I> {$/;"	c
Combinations	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs	/^impl<I> Clone for Combinations<I>$/;"	c
Combinations	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs	/^impl<I> Iterator for Combinations<I>$/;"	c
Combinations	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs	/^impl<I> fmt::Debug for Combinations<I>$/;"	c
Combinations	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs	/^pub struct Combinations<I: Iterator> {$/;"	s
CombinationsWithReplacement	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations_with_replacement.rs	/^impl<I> CombinationsWithReplacement<I>$/;"	c
CombinationsWithReplacement	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations_with_replacement.rs	/^impl<I> Iterator for CombinationsWithReplacement<I>$/;"	c
CombinationsWithReplacement	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations_with_replacement.rs	/^impl<I> fmt::Debug for CombinationsWithReplacement<I>$/;"	c
CombinationsWithReplacement	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations_with_replacement.rs	/^pub struct CombinationsWithReplacement<I>$/;"	s
Commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^impl<'repo> Binding for Commit<'repo> {$/;"	c
Commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^impl<'repo> Clone for Commit<'repo> {$/;"	c
Commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^impl<'repo> Commit<'repo> {$/;"	c
Commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^impl<'repo> Drop for Commit<'repo> {$/;"	c
Commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^impl<'repo> std::fmt::Debug for Commit<'repo> {$/;"	c
Commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^pub struct Commit<'repo> {$/;"	s
Commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Commit,$/;"	e	enum:FileMode
Commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Commit,$/;"	e	enum:ObjectType
Compact	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^pub struct Compact;$/;"	s
Complete	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs	/^    Complete(CompleteState),$/;"	e	enum:PermutationState
CompleteState	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs	/^enum CompleteState {$/;"	g
CompleteState	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs	/^impl CompleteState {$/;"	c
CompleteStateRemaining	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs	/^enum CompleteStateRemaining {$/;"	g
Config	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^impl Binding for Config {$/;"	c
Config	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^impl Config {$/;"	c
Config	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^impl Drop for Config {$/;"	c
Config	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^pub struct Config {$/;"	s
Config	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Config,$/;"	e	enum:ErrorClass
ConfigEntries	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^impl<'cfg, 'b> Iterator for &'b ConfigEntries<'cfg> {$/;"	c
ConfigEntries	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^impl<'cfg> Binding for ConfigEntries<'cfg> {$/;"	c
ConfigEntries	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^impl<'cfg> Drop for ConfigEntries<'cfg> {$/;"	c
ConfigEntries	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^pub struct ConfigEntries<'cfg> {$/;"	s
ConfigEntry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^impl<'cfg> Binding for ConfigEntry<'cfg> {$/;"	c
ConfigEntry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^impl<'cfg> ConfigEntry<'cfg> {$/;"	c
ConfigEntry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^impl<'cfg> Drop for ConfigEntry<'cfg> {$/;"	c
ConfigEntry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^pub struct ConfigEntry<'cfg> {$/;"	s
ConfigLevel	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^    impl Convert<raw::git_config_level_t> for ConfigLevel {$/;"	c	module:impls
ConfigLevel	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl ConfigLevel {$/;"	c
ConfigLevel	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^pub enum ConfigLevel {$/;"	g
Conflict	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Conflict,$/;"	e	enum:ErrorCode
Conflicted	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Conflicted,$/;"	e	enum:Delta
ConsTuples	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/cons_tuples_impl.rs	/^impl<I, J> Clone for ConsTuples<I, J>$/;"	c
ConsTuples	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/cons_tuples_impl.rs	/^pub struct ConsTuples<I, J>$/;"	s
Context	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/lib.rs	/^pub trait Context<T, E>: context::private::Sealed {$/;"	i
Context	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^impl<'a, S> Clone for Context<'a, S> {$/;"	c
Context	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^impl<'a, S> Context<'a, S> {$/;"	c
Context	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^impl<'a, S> Context<'a, S>$/;"	c
Context	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^pub struct Context<'a, S> {$/;"	s
ContextError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^impl<C, E> Debug for ContextError<C, E>$/;"	c
ContextError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^impl<C, E> Display for ContextError<C, E>$/;"	c
ContextError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^impl<C, E> StdError for ContextError<C, E>$/;"	c
ContextError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^impl<C> StdError for ContextError<C, Error>$/;"	c
ContextError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^pub(crate) struct ContextError<C, E> {$/;"	s
ContextId	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/stack.rs	/^struct ContextId {$/;"	s
Continue	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    Continue(T),$/;"	e	enum:FoldWhile
Convert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^pub trait Convert<T> {$/;"	i
Copied	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Copied,$/;"	e	enum:Delta
Cred	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^impl Binding for Cred {$/;"	c
Cred	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^impl Cred {$/;"	c
Cred	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^impl Drop for Cred {$/;"	c
Cred	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^pub struct Cred {$/;"	s
CredentialHelper	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^impl CredentialHelper {$/;"	c
CredentialHelper	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^pub struct CredentialHelper {$/;"	s
CredentialType	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl CredentialType {$/;"	c
CredentialType	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl Default for CredentialType {$/;"	c
Credentials	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^pub type Credentials<'a> =$/;"	t
Cs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    impl Callsite for Cs {$/;"	c	module:tests
Cs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    struct Cs;$/;"	s	module:tests
Ctime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    Ctime,$/;"	e	enum:Fmt
CurrentSpan	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/lib.rs	/^impl CurrentSpan {$/;"	c
CurrentSpan	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/lib.rs	/^impl Default for CurrentSpan {$/;"	c
CurrentSpan	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/lib.rs	/^pub struct CurrentSpan {$/;"	s
Custom	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^    Custom(String),$/;"	e	enum:ChronoFmtType
Cyan	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    Cyan,$/;"	e	enum:Color
DAYS_IN_MONTH	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/datetime.rs	/^        static DAYS_IN_MONTH: [i8; 12] = [31, 30, 31, 30, 31, 31, 30, 31, 30, 31, 31, 29];$/;"	v	method:DateTime::from
D_FMT	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^static D_FMT: &'static [Item<'static>] =$/;"	v
D_T_FMT	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^static D_T_FMT: &'static [Item<'static>] = &[$/;"	v
Data	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^        struct Data<'a, 'b> {$/;"	s	method:Repository::submodules
Data	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    type Data = <layer::Layered<F, Formatter<N, E, W>> as LookupSpan<'a>>::Data;$/;"	t
Data	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    type Data = S::Data;$/;"	t
Data	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    type Data: SpanData<'a>;$/;"	t	interface:LookupSpan
Data	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    type Data = Data<'a>;$/;"	t	implementation:Registry
Data	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^impl<'a> SpanData<'a> for Data<'a> {$/;"	c
Data	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^pub struct Data<'a> {$/;"	s
DataInner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^impl Clear for DataInner {$/;"	c
DataInner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^impl Default for DataInner {$/;"	c
DataInner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^struct DataInner {$/;"	s
Date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^impl<Tz: TimeZone, Tz2: TimeZone> PartialEq<Date<Tz2>> for Date<Tz> {$/;"	c
Date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^impl<Tz: TimeZone> Add<OldDuration> for Date<Tz> {$/;"	c
Date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^impl<Tz: TimeZone> Copy for Date<Tz> where <Tz as TimeZone>::Offset: Copy {}$/;"	c
Date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^impl<Tz: TimeZone> Date<Tz> {$/;"	c
Date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^impl<Tz: TimeZone> Date<Tz>$/;"	c
Date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^impl<Tz: TimeZone> Datelike for Date<Tz> {$/;"	c
Date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^impl<Tz: TimeZone> Eq for Date<Tz> {}$/;"	c
Date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^impl<Tz: TimeZone> Ord for Date<Tz> {$/;"	c
Date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^impl<Tz: TimeZone> PartialOrd for Date<Tz> {$/;"	c
Date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^impl<Tz: TimeZone> Sub<Date<Tz>> for Date<Tz> {$/;"	c
Date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^impl<Tz: TimeZone> Sub<OldDuration> for Date<Tz> {$/;"	c
Date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^impl<Tz: TimeZone> fmt::Debug for Date<Tz> {$/;"	c
Date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^impl<Tz: TimeZone> fmt::Display for Date<Tz>$/;"	c
Date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^impl<Tz: TimeZone> hash::Hash for Date<Tz> {$/;"	c
Date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^pub struct Date<Tz: TimeZone> {$/;"	s
Date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^unsafe impl<Tz: TimeZone> Send for Date<Tz> where <Tz as TimeZone>::Offset: Send {}$/;"	c
Date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl From<DateTime<Utc>> for js_sys::Date {$/;"	c
DateImpl	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub type DateImpl = i32;$/;"	t
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    impl Decodable for DateTime<FixedOffset> {$/;"	c	module:rustc_serialize
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    impl Decodable for DateTime<Local> {$/;"	c	module:rustc_serialize
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    impl Decodable for DateTime<Utc> {$/;"	c	module:rustc_serialize
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    impl<'de> de::Deserialize<'de> for DateTime<FixedOffset> {$/;"	c	module:serde
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    impl<'de> de::Deserialize<'de> for DateTime<Local> {$/;"	c	module:serde
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    impl<'de> de::Deserialize<'de> for DateTime<Utc> {$/;"	c	module:serde
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    impl<Tz: TimeZone> Encodable for DateTime<Tz> {$/;"	c	module:rustc_serialize
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    impl<Tz: TimeZone> From<TsSeconds<Tz>> for DateTime<Tz> {$/;"	c	module:rustc_serialize
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    impl<Tz: TimeZone> ser::Serialize for DateTime<Tz> {$/;"	c	module:serde
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl DateTime<FixedOffset> {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl From<&js_sys::Date> for DateTime<Utc> {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl From<DateTime<FixedOffset>> for DateTime<Local> {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl From<DateTime<FixedOffset>> for DateTime<Utc> {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl From<DateTime<Local>> for DateTime<FixedOffset> {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl From<DateTime<Local>> for DateTime<Utc> {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl From<DateTime<Utc>> for DateTime<FixedOffset> {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl From<DateTime<Utc>> for DateTime<Local> {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl From<SystemTime> for DateTime<Local> {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl From<SystemTime> for DateTime<Utc> {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl From<js_sys::Date> for DateTime<Utc> {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl str::FromStr for DateTime<Local> {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl str::FromStr for DateTime<Utc> {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone, Tz2: TimeZone> PartialEq<DateTime<Tz2>> for DateTime<Tz> {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone, Tz2: TimeZone> PartialOrd<DateTime<Tz2>> for DateTime<Tz> {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone> Add<OldDuration> for DateTime<Tz> {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone> Copy for DateTime<Tz> where <Tz as TimeZone>::Offset: Copy {}$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone> DateTime<Tz> {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone> DateTime<Tz>$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone> Datelike for DateTime<Tz> {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone> Eq for DateTime<Tz> {}$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone> Ord for DateTime<Tz> {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone> Sub<DateTime<Tz>> for DateTime<Tz> {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone> Sub<OldDuration> for DateTime<Tz> {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone> Timelike for DateTime<Tz> {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone> fmt::Debug for DateTime<Tz> {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone> fmt::Display for DateTime<Tz>$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone> hash::Hash for DateTime<Tz> {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^pub struct DateTime<Tz: TimeZone> {$/;"	s
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^unsafe impl<Tz: TimeZone> Send for DateTime<Tz> where <Tz as TimeZone>::Offset: Send {}$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^impl str::FromStr for DateTime<FixedOffset> {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^impl<Tz: TimeZone> Add<FixedOffset> for DateTime<Tz> {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^impl<Tz: TimeZone> Sub<FixedOffset> for DateTime<Tz> {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^impl<Tz: TimeZone> DurationRound for DateTime<Tz> {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/datetime.rs	/^impl From<std::time::SystemTime> for DateTime {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/datetime.rs	/^impl fmt::Display for DateTime {$/;"	c
DateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/datetime.rs	/^pub(crate) struct DateTime {$/;"	s
DateTimeVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    impl<'de> de::Visitor<'de> for DateTimeVisitor {$/;"	c	module:serde
DateTimeVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    struct DateTimeVisitor;$/;"	s	module:serde
Datelike	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub trait Datelike: Sized {$/;"	i
Day	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Day,$/;"	e	enum:Numeric
DebugVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    impl<'a> DebugVisitor<'a> {$/;"	c	module:test_util
DebugVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    impl<'a> Visit for DebugVisitor<'a> {$/;"	c	module:test_util
DebugVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    impl<'a> VisitFmt for DebugVisitor<'a> {$/;"	c	module:test_util
DebugVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    impl<'a> VisitOutput<fmt::Result> for DebugVisitor<'a> {$/;"	c	module:test_util
DebugVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    pub(crate) struct DebugVisitor<'a> {$/;"	s	module:test_util
December	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    December = 11,$/;"	e	enum:Month
Dedup	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^pub type Dedup<I> = DedupBy<I, DedupEq>;$/;"	t
DedupBy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^pub type DedupBy<I, Pred> = CoalesceBy<I, DedupPred2CoalescePred<Pred>, <I as Iterator>::Item>;$/;"	t
DedupByWithCount	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^pub type DedupByWithCount<I, Pred> =$/;"	t
DedupEq	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^impl<T: PartialEq> DedupPredicate<T> for DedupEq {$/;"	c
DedupEq	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^pub struct DedupEq;$/;"	s
DedupPred2CoalescePred	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^impl<DP, T> CoalescePredicate<T, T> for DedupPred2CoalescePred<DP>$/;"	c
DedupPred2CoalescePred	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^pub struct DedupPred2CoalescePred<DP>(DP);$/;"	s
DedupPredWithCount2CoalescePred	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^impl<DP, T> CoalescePredicate<T, (usize, T)> for DedupPredWithCount2CoalescePred<DP>$/;"	c
DedupPredWithCount2CoalescePred	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^pub struct DedupPredWithCount2CoalescePred<DP>(DP);$/;"	s
DedupPredicate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^pub trait DedupPredicate<T> {$/;"	i
DedupWithCount	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^pub type DedupWithCount<I> = DedupByWithCount<I, DedupEq>;$/;"	t
DefaultFields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl Default for DefaultFields {$/;"	c
DefaultFields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl DefaultFields {$/;"	c
DefaultFields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl<'a> MakeVisitor<&'a mut dyn Write> for DefaultFields {$/;"	c
DefaultFields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^pub struct DefaultFields {$/;"	s
DefaultVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl<'a> DefaultVisitor<'a> {$/;"	c
DefaultVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl<'a> crate::field::VisitFmt for DefaultVisitor<'a> {$/;"	c
DefaultVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl<'a> crate::field::VisitOutput<fmt::Result> for DefaultVisitor<'a> {$/;"	c
DefaultVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl<'a> field::Visit for DefaultVisitor<'a> {$/;"	c
DefaultVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl<'a> fmt::Debug for DefaultVisitor<'a> {$/;"	c
DefaultVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^pub struct DefaultVisitor<'a> {$/;"	s
DelayedFormat	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^impl<'a, I: Iterator<Item = B> + Clone, B: Borrow<Item<'a>>> DelayedFormat<I> {$/;"	c
DelayedFormat	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^impl<'a, I: Iterator<Item = B> + Clone, B: Borrow<Item<'a>>> fmt::Display for DelayedFormat<I> {$/;"	c
DelayedFormat	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub struct DelayedFormat<I> {$/;"	s
Deleted	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Deleted,$/;"	e	enum:Delta
Delimited	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^impl<D, V, T> MakeVisitor<T> for Delimited<D, V>$/;"	c
Delimited	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^impl<D, V> Delimited<D, V> {$/;"	c
Delimited	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^pub struct Delimited<D, V> {$/;"	s
Delta	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    Delta,$/;"	e	enum:DiffBinaryKind
Delta	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^pub enum Delta {$/;"	g
DeltaCB	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/apply.rs	/^type DeltaCB<'a> = dyn FnMut(Option<DiffDelta<'_>>) -> bool + 'a;$/;"	t
Deltafication	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    Deltafication,$/;"	e	enum:PackBuilderStage
Deltas	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl<'diff> DoubleEndedIterator for Deltas<'diff> {$/;"	c
Deltas	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl<'diff> ExactSizeIterator for Deltas<'diff> {}$/;"	c
Deltas	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl<'diff> Iterator for Deltas<'diff> {$/;"	c
Deltas	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^pub struct Deltas<'diff> {$/;"	s
Describe	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^impl<'repo> Binding for Describe<'repo> {$/;"	c
Describe	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^impl<'repo> Describe<'repo> {$/;"	c
Describe	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^impl<'repo> Drop for Describe<'repo> {$/;"	c
Describe	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^pub struct Describe<'repo> {$/;"	s
Describe	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Describe,$/;"	e	enum:ErrorClass
DescribeFormatOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^impl Default for DescribeFormatOptions {$/;"	c
DescribeFormatOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^impl DescribeFormatOptions {$/;"	c
DescribeFormatOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^pub struct DescribeFormatOptions {$/;"	s
DescribeOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^impl Binding for DescribeOptions {$/;"	c
DescribeOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^impl Default for DescribeOptions {$/;"	c
DescribeOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^impl DescribeOptions {$/;"	c
DescribeOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^pub struct DescribeOptions {$/;"	s
Diff	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl Diff<'static> {$/;"	c
Diff	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl<'repo> Binding for Diff<'repo> {$/;"	c
Diff	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl<'repo> Diff<'repo> {$/;"	c
Diff	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl<'repo> Drop for Diff<'repo> {$/;"	c
Diff	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^pub struct Diff<'repo> {$/;"	s
Diff	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^unsafe impl<'repo> Send for Diff<'repo> {}$/;"	c
Diff	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs	/^pub enum Diff<I, J>$/;"	g
DiffBinary	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl<'a> Binding for DiffBinary<'a> {$/;"	c
DiffBinary	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl<'a> DiffBinary<'a> {$/;"	c
DiffBinary	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^pub struct DiffBinary<'a> {$/;"	s
DiffBinaryFile	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl<'a> Binding for DiffBinaryFile<'a> {$/;"	c
DiffBinaryFile	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl<'a> DiffBinaryFile<'a> {$/;"	c
DiffBinaryFile	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^pub struct DiffBinaryFile<'a> {$/;"	s
DiffBinaryKind	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl Binding for DiffBinaryKind {$/;"	c
DiffBinaryKind	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^pub enum DiffBinaryKind {$/;"	g
DiffCallbacks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^pub struct DiffCallbacks<'a, 'b, 'c, 'd, 'e, 'f, 'g, 'h> {$/;"	s
DiffDelta	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl<'a> Binding for DiffDelta<'a> {$/;"	c
DiffDelta	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl<'a> DiffDelta<'a> {$/;"	c
DiffDelta	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl<'a> std::fmt::Debug for DiffDelta<'a> {$/;"	c
DiffDelta	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^pub struct DiffDelta<'a> {$/;"	s
DiffFile	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl<'a> Binding for DiffFile<'a> {$/;"	c
DiffFile	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl<'a> DiffFile<'a> {$/;"	c
DiffFile	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl<'a> std::fmt::Debug for DiffFile<'a> {$/;"	c
DiffFile	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^pub struct DiffFile<'a> {$/;"	s
DiffFindOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl Default for DiffFindOptions {$/;"	c
DiffFindOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl DiffFindOptions {$/;"	c
DiffFindOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^pub struct DiffFindOptions {$/;"	s
DiffFlags	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl DiffFlags {$/;"	c
DiffFormat	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^    impl Convert<raw::git_diff_format_t> for DiffFormat {$/;"	c	module:impls
DiffFormat	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^pub enum DiffFormat {$/;"	g
DiffFormatEmailOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl Default for DiffFormatEmailOptions {$/;"	c
DiffFormatEmailOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl DiffFormatEmailOptions {$/;"	c
DiffFormatEmailOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^pub struct DiffFormatEmailOptions {$/;"	s
DiffHunk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl<'a> Binding for DiffHunk<'a> {$/;"	c
DiffHunk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl<'a> DiffHunk<'a> {$/;"	c
DiffHunk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl<'a> std::fmt::Debug for DiffHunk<'a> {$/;"	c
DiffHunk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^pub struct DiffHunk<'a> {$/;"	s
DiffLine	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl<'a> Binding for DiffLine<'a> {$/;"	c
DiffLine	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl<'a> DiffLine<'a> {$/;"	c
DiffLine	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl<'a> std::fmt::Debug for DiffLine<'a> {$/;"	c
DiffLine	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^pub struct DiffLine<'a> {$/;"	s
DiffOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl Default for DiffOptions {$/;"	c
DiffOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl DiffOptions {$/;"	c
DiffOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^pub struct DiffOptions {$/;"	s
DiffStats	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl Binding for DiffStats {$/;"	c
DiffStats	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl DiffStats {$/;"	c
DiffStats	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl Drop for DiffStats {$/;"	c
DiffStats	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^impl std::fmt::Debug for DiffStats {$/;"	c
DiffStats	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^pub struct DiffStats {$/;"	s
DiffStatsFormat	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl DiffStatsFormat {$/;"	c
Dimmed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^    Dimmed,$/;"	e	enum:Styles
Direct	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Direct,$/;"	e	enum:ReferenceType
Direction	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^    impl Convert<raw::git_direction> for Direction {$/;"	c	module:impls
Direction	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^pub enum Direction {$/;"	g
Directive	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^impl Default for Directive {$/;"	c
Directive	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^impl Directive {$/;"	c
Directive	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^impl From<Level> for Directive {$/;"	c
Directive	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^impl From<LevelFilter> for Directive {$/;"	c
Directive	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^impl FromStr for Directive {$/;"	c
Directive	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^impl Match for Directive {$/;"	c
Directive	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^impl Ord for Directive {$/;"	c
Directive	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^impl PartialOrd for Directive {$/;"	c
Directive	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^impl fmt::Display for Directive {$/;"	c
Directive	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^pub struct Directive {$/;"	s
DirectiveSet	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^impl<T: Match + Ord> DirectiveSet<T> {$/;"	c
DirectiveSet	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^impl<T: Match + Ord> Extend<T> for DirectiveSet<T> {$/;"	c
DirectiveSet	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^impl<T: Match + Ord> FromIterator<T> for DirectiveSet<T> {$/;"	c
DirectiveSet	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^impl<T: Ord> Default for DirectiveSet<T> {$/;"	c
DirectiveSet	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^impl<T> DirectiveSet<T> {$/;"	c
DirectiveSet	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^pub(crate) struct DirectiveSet<T> {$/;"	s
Directory	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Directory,$/;"	e	enum:ErrorCode
Dirty	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Dirty,$/;"	e	enum:SubmoduleIgnore
DisplayError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/wrapper.rs	/^impl<M> Debug for DisplayError<M>$/;"	c
DisplayError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/wrapper.rs	/^impl<M> Display for DisplayError<M>$/;"	c
DisplayError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/wrapper.rs	/^impl<M> StdError for DisplayError<M> where M: Display + 'static {}$/;"	c
DisplayError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/wrapper.rs	/^pub struct DisplayError<M>(pub M);$/;"	s
Done	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Done,$/;"	e	enum:StashApplyProgress
Done	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    Done(T),$/;"	e	enum:FoldWhile
DropMePlease	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^        struct DropMePlease(Arc<()>);$/;"	s	function:tests::clear_drops_elements
DropMeTooPlease	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^        struct DropMeTooPlease(Arc<()>);$/;"	s	function:tests::clear_drops_elements
DummyTransport	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^    impl SmartSubtransport for DummyTransport {$/;"	c	module:tests
DummyTransport	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^    struct DummyTransport;$/;"	s	module:tests
Duration	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^impl Add for Duration {$/;"	c
Duration	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^impl Div<i32> for Duration {$/;"	c
Duration	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^impl Duration {$/;"	c
Duration	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^impl Mul<i32> for Duration {$/;"	c
Duration	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^impl Neg for Duration {$/;"	c
Duration	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^impl Sub for Duration {$/;"	c
Duration	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^impl fmt::Display for Duration {$/;"	c
Duration	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^pub struct Duration {$/;"	s
Duration	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^impl Add for Duration {$/;"	c
Duration	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^impl Div<i32> for Duration {$/;"	c
Duration	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^impl Duration {$/;"	c
Duration	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^impl Mul<i32> for Duration {$/;"	c
Duration	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^impl Neg for Duration {$/;"	c
Duration	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^impl Sub for Duration {$/;"	c
Duration	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^impl fmt::Display for Duration {$/;"	c
Duration	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^pub struct Duration {$/;"	s
DurationExceedsLimit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    DurationExceedsLimit,$/;"	e	enum:RoundingError
DurationExceedsTimestamp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    DurationExceedsTimestamp,$/;"	e	enum:RoundingError
DurationRound	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^pub trait DurationRound: Sized {$/;"	i
Dynamics	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^impl Dynamics {$/;"	c
Dynamics	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^pub(crate) type Dynamics = DirectiveSet<Directive>;$/;"	t
E	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^    impl<E> StdError for E$/;"	c	module:ext
E	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/kind.rs	/^impl<E> TraitKind for E where E: Into<Error> {}$/;"	c
Edit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    Edit,$/;"	e	enum:RebaseOperationType
EitherOrBoth	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs	/^impl<A, B> EitherOrBoth<A, B> {$/;"	c
EitherOrBoth	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs	/^impl<A, B> Into<Option<Either<A, B>>> for EitherOrBoth<A, B> {$/;"	c
EitherOrBoth	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs	/^impl<T> EitherOrBoth<T, T> {$/;"	c
EitherOrBoth	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs	/^pub enum EitherOrBoth<A, B> {$/;"	g
Empty	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs	/^    Empty,$/;"	e	enum:PermutationState
Entered	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^impl<'a> Drop for Entered<'a> {$/;"	c
Entered	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^pub struct Entered<'a> {$/;"	s
Env	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    Env(env::VarError),$/;"	e	enum:ErrorKind
EnvFilter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^impl Default for EnvFilter {$/;"	c
EnvFilter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^impl EnvFilter {$/;"	c
EnvFilter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^impl FromStr for EnvFilter {$/;"	c
EnvFilter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^impl fmt::Display for EnvFilter {$/;"	c
EnvFilter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^impl<S: Subscriber> Layer<S> for EnvFilter {$/;"	c
EnvFilter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^impl<S> From<S> for EnvFilter$/;"	c
EnvFilter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^pub struct EnvFilter {$/;"	s
Eof	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Eof,$/;"	e	enum:ErrorCode
Err	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    type Err = ParseError;$/;"	t	implementation:DateTime
Err	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    type Err = ParseMonthError;$/;"	t	implementation:Month
Err	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    type Err = ParseWeekdayError;$/;"	t	implementation:Weekday
Err	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    type Err = ParseError;$/;"	t	implementation:DateTime
Err	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    type Err = ParseError;$/;"	t	implementation:NaiveDate
Err	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    type Err = ParseError;$/;"	t	implementation:NaiveDateTime
Err	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    type Err = ParseError;$/;"	t	implementation:NaiveTime
Err	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    type Err = RoundingError;$/;"	t	implementation:DateTime
Err	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    type Err: fmt::Debug + fmt::Display;$/;"	t	interface:DurationRound
Err	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    type Err: std::error::Error;$/;"	t	interface:DurationRound
Err	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    type Err = ();$/;"	t	implementation:Color
Err	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^    type Err = Error;$/;"	t	implementation:Oid
Err	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    type Err = ParseError;$/;"	t	implementation:Directive
Err	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    type Err = Box<dyn Error + Send + Sync>;$/;"	t	implementation:Match
Err	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    type Err = matchers::Error;$/;"	t	implementation:MatchPattern
Err	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    type Err = matchers::Error;$/;"	t	implementation:ValueMatch
Err	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    type Err = ParseError;$/;"	t	implementation:EnvFilter
Error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^    impl StdError for Error {$/;"	c	module:ext
Error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^impl AsRef<dyn StdError + Send + Sync> for Error {$/;"	c
Error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^impl AsRef<dyn StdError> for Error {$/;"	c
Error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^impl Debug for Error {$/;"	c
Error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^impl Deref for Error {$/;"	c
Error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^impl DerefMut for Error {$/;"	c
Error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^impl Display for Error {$/;"	c
Error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^impl Drop for Error {$/;"	c
Error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^impl Error {$/;"	c
Error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^impl<E> From<E> for Error$/;"	c
Error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/lib.rs	/^pub struct Error {$/;"	s
Error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Error,$/;"	e	enum:Item
Error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/error.rs	/^impl Error {$/;"	c
Error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/error.rs	/^impl From<JoinPathsError> for Error {$/;"	c
Error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/error.rs	/^impl From<NulError> for Error {$/;"	c
Error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/error.rs	/^impl error::Error for Error {}$/;"	c
Error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/error.rs	/^impl fmt::Display for Error {$/;"	c
Error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/error.rs	/^pub struct Error {$/;"	s
Error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^impl Error {$/;"	c
Error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^impl error::Error for Error {}$/;"	c
Error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^impl fmt::Display for Error {$/;"	c
Error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^pub struct Error {$/;"	s
ErrorClass	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^pub enum ErrorClass {$/;"	g
ErrorCode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^pub enum ErrorCode {$/;"	g
ErrorImpl	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^impl ErrorImpl {$/;"	c
ErrorImpl	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^impl<E> Debug for ErrorImpl<E>$/;"	c
ErrorImpl	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^impl<E> Display for ErrorImpl<E>$/;"	c
ErrorImpl	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^impl<E> ErrorImpl<E> {$/;"	c
ErrorImpl	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^impl<E> StdError for ErrorImpl<E>$/;"	c
ErrorImpl	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^pub(crate) struct ErrorImpl<E = ()> {$/;"	s
ErrorImpl	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/fmt.rs	/^impl ErrorImpl {$/;"	c
ErrorKind	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^enum ErrorKind {$/;"	g
ErrorKind	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^enum ErrorKind {$/;"	g
ErrorVTable	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    *(p.as_ptr() as *const &'static ErrorVTable)$/;"	v	function:vtable
ErrorVTable	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^struct ErrorVTable {$/;"	s
Event	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^impl<'a> RecordFields for Event<'a> {$/;"	c
Event	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^impl<'a> crate::sealed::Sealed<RecordFieldsMarker> for Event<'a> {}$/;"	c
ExactlyOneError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs	/^impl<I> Debug for ExactlyOneError<I> $/;"	c
ExactlyOneError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs	/^impl<I> Display for ExactlyOneError<I> $/;"	c
ExactlyOneError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs	/^impl<I> Error for ExactlyOneError<I>  where I: Iterator + Debug, I::Item: Debug, {}$/;"	c
ExactlyOneError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs	/^impl<I> ExactSizeIterator for ExactlyOneError<I> where I: ExactSizeIterator {}$/;"	c
ExactlyOneError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs	/^impl<I> ExactlyOneError<I>$/;"	c
ExactlyOneError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs	/^impl<I> Iterator for ExactlyOneError<I>$/;"	c
ExactlyOneError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs	/^pub struct ExactlyOneError<I>$/;"	s
Exec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    Exec,$/;"	e	enum:RebaseOperationType
Exists	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Exists,$/;"	e	enum:ErrorCode
Extensions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^impl<'a> Extensions<'a> {$/;"	c
Extensions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^pub struct Extensions<'a> {$/;"	s
ExtensionsInner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^impl ExtensionsInner {$/;"	c
ExtensionsInner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^impl fmt::Debug for ExtensionsInner {$/;"	c
ExtensionsInner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^pub(crate) struct ExtensionsInner {$/;"	s
ExtensionsMut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^impl<'a> ExtensionsMut<'a> {$/;"	c
ExtensionsMut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^pub struct ExtensionsMut<'a> {$/;"	s
F	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^impl<F, Item, T> CoalescePredicate<Item, T> for F$/;"	c
F	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^impl<T, F: FnMut(&T, &T) -> bool> DedupPredicate<T> for F {$/;"	c
F	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^impl<T, F: FnMut(&T, &T)->bool> MergePredicate<T> for F {$/;"	c
F	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^impl<'a, A, K, F: ?Sized> KeyFunction<A> for F$/;"	c
F	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs	/^impl<Item, F: FnMut()->Item> IntersperseElement<Item> for F {$/;"	c
F	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs	/^impl<T, F: FnMut(&T, &T)->bool> KMergePredicate<T> for F {$/;"	c
F	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^impl<'a, F> RecordFields for &'a F$/;"	c
F	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^impl<'a, F> crate::sealed::Sealed<RecordFieldsMarker> for &'a F where F: RecordFields {}$/;"	c
F	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^impl<T, V, F> MakeVisitor<T> for F$/;"	c
F	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^impl<'a, F> FormatTime for &'a F$/;"	c
F	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^impl<F, W> MakeWriter for F$/;"	c
FMT_NONE	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^        static FMT_NONE: &'static [Item<'static>; 0] = &[];$/;"	v	method:StrftimeItems::with_remainer
FOO	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^        static FOO: () = ();$/;"	v	method:DiffFile::path_bytes
FREQUENCY	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        static mut FREQUENCY: i64 = 0;$/;"	v	function:inner::frequency
February	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    February = 1,$/;"	e	enum:Month
Fetch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Fetch,$/;"	e	enum:Direction
FetchHead	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    FetchHead,$/;"	e	enum:ErrorClass
FetchOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^impl<'cb> Binding for FetchOptions<'cb> {$/;"	c
FetchOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^impl<'cb> Default for FetchOptions<'cb> {$/;"	c
FetchOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^impl<'cb> FetchOptions<'cb> {$/;"	c
FetchOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^pub struct FetchOptions<'cb> {$/;"	s
FetchPrune	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^    impl Convert<raw::git_fetch_prune_t> for FetchPrune {$/;"	c	module:impls
FetchPrune	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^pub enum FetchPrune {$/;"	g
Field	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/field.rs	/^impl AsField for Field {$/;"	c
Field	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/field.rs	/^impl crate::sealed::Sealed for Field {}$/;"	c
Field	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/field.rs	/^impl<'a> AsField for &'a Field {$/;"	c
Field	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/field.rs	/^impl<'a> crate::sealed::Sealed for &'a Field {}$/;"	c
Field	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    Field(Box<dyn Error + Send + Sync>),$/;"	e	enum:ParseErrorKind
FieldFn	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl<'a, F> MakeVisitor<&'a mut dyn fmt::Write> for FieldFn<F>$/;"	c
FieldFn	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^pub struct FieldFn<F>(F);$/;"	s
FieldFnVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl<'a, F> Visit for FieldFnVisitor<'a, F>$/;"	c
FieldFnVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl<'a, F> VisitFmt for FieldFnVisitor<'a, F>$/;"	c
FieldFnVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl<'a, F> VisitOutput<fmt::Result> for FieldFnVisitor<'a, F>$/;"	c
FieldFnVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl<'a, F> fmt::Debug for FieldFnVisitor<'a, F> {$/;"	c
FieldFnVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^pub struct FieldFnVisitor<'a, F> {$/;"	s
FieldMap	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^type FieldMap<T> = HashMap<Field, T>;$/;"	t
FileCb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^pub type FileCb<'a> = dyn FnMut(DiffDelta<'_>, f32) -> bool + 'a;$/;"	t
FileFavor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^    impl Convert<raw::git_merge_file_favor_t> for FileFavor {$/;"	c	module:impls
FileFavor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^pub enum FileFavor {$/;"	g
FileMode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^pub enum FileMode {$/;"	g
Filesystem	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Filesystem,$/;"	e	enum:ErrorClass
Filter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Filter,$/;"	e	enum:ErrorClass
FilterCb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/treebuilder.rs	/^type FilterCb<'a> = dyn FnMut(&TreeEntry<'_>) -> bool + 'a;$/;"	t
FilterMapOk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^impl<I, F, T, U, E> Iterator for FilterMapOk<I, F>$/;"	c
FilterMapOk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub struct FilterMapOk<I, F> {$/;"	s
FilterOk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^impl<I, F, T, E> Iterator for FilterOk<I, F>$/;"	c
FilterOk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub struct FilterOk<I, F> {$/;"	s
FilterVec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^type FilterVec<T> = Vec<T>;$/;"	t
FilterVec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^type FilterVec<T> = smallvec::SmallVec<[T; 8]>;$/;"	t
First	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs	/^    First(T),$/;"	e	enum:Position
FirstMismatch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs	/^    FirstMismatch(usize, PutBack<I>, PutBack<J>),$/;"	e	enum:Diff
Fixed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Fixed(Fixed),$/;"	e	enum:Item
Fixed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub enum Fixed {$/;"	g
FixedOffset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^impl FixedOffset {$/;"	c
FixedOffset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^impl Offset for FixedOffset {$/;"	c
FixedOffset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^impl TimeZone for FixedOffset {$/;"	c
FixedOffset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^impl fmt::Debug for FixedOffset {$/;"	c
FixedOffset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^impl fmt::Display for FixedOffset {$/;"	c
FixedOffset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^pub struct FixedOffset {$/;"	s
Fixup	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    Fixup,$/;"	e	enum:RebaseOperationType
Fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^type Fmt<'a> = &'static [Item<'static>];$/;"	t
Fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^type Fmt<'a> = Vec<Item<'a>>;$/;"	t
Fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^enum Fmt<'a> {$/;"	g
FmtAttrs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^impl<'a> fmt::Display for FmtAttrs<'a> {$/;"	c
FmtAttrs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^struct FmtAttrs<'a>(&'a Attributes<'a>);$/;"	s
FmtContext	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^impl<'a, S, N> FmtContext<'a, S, N>$/;"	c
FmtContext	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^impl<'a, S, N> fmt::Debug for FmtContext<'a, S, N> {$/;"	c
FmtContext	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^impl<'cx, 'writer, S, N> FormatFields<'writer> for FmtContext<'cx, S, N>$/;"	c
FmtContext	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^pub struct FmtContext<'a, S, N> {$/;"	s
FmtContext	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl<S, N> FormatEvent<S, N>$/;"	c
FmtCtx	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl<'a, S, N: 'a> FmtCtx<'a, S, N>$/;"	c
FmtCtx	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl<'a, S, N: 'a> fmt::Display for FmtCtx<'a, S, N>$/;"	c
FmtCtx	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^struct FmtCtx<'a, S, N> {$/;"	s
FmtLevel	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl<'a> FmtLevel<'a> {$/;"	c
FmtLevel	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl<'a> fmt::Display for FmtLevel<'a> {$/;"	c
FmtLevel	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^struct FmtLevel<'a> {$/;"	s
FmtSpan	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl Debug for FmtSpan {$/;"	c
FmtSpan	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl FmtSpan {$/;"	c
FmtSpan	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^pub struct FmtSpan(FmtSpanInner);$/;"	s
FmtSpanConfig	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl Debug for FmtSpanConfig {$/;"	c
FmtSpanConfig	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl Default for FmtSpanConfig {$/;"	c
FmtSpanConfig	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl FmtSpanConfig {$/;"	c
FmtSpanConfig	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^pub(super) struct FmtSpanConfig {$/;"	s
FmtSpanInner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^enum FmtSpanInner {$/;"	g
FmtThreadName	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl<'a> FmtThreadName<'a> {$/;"	c
FmtThreadName	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl<'a> fmt::Display for FmtThreadName<'a> {$/;"	c
FmtThreadName	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^struct FmtThreadName<'a> {$/;"	s
FmtValues	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^impl<'a> fmt::Display for FmtValues<'a> {$/;"	c
FmtValues	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^struct FmtValues<'a>(&'a Record<'a>);$/;"	s
FoldWhile	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^impl<T> FoldWhile<T> {$/;"	c
FoldWhile	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^pub enum FoldWhile<T> {$/;"	g
ForEachCb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^pub type ForEachCb<'a> = dyn FnMut(&[u8]) -> bool + 'a;$/;"	t
ForeachCb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^pub type ForeachCb<'a> = dyn FnMut(&Oid) -> bool + 'a;$/;"	t
ForeachCbData	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^struct ForeachCbData<'a> {$/;"	s
Format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs	/^impl<'a, I> Format<'a, I>$/;"	c
Format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs	/^pub struct Format<'a, I> {$/;"	s
Format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^impl<S, N, T> FormatEvent<S, N> for Format<Json, T>$/;"	c
Format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl Default for Format<Full, SystemTime> {$/;"	c
Format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl<F, T> Format<F, T> {$/;"	c
Format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl<S, N, T> FormatEvent<S, N> for Format<Compact, T>$/;"	c
Format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl<S, N, T> FormatEvent<S, N> for Format<Full, T>$/;"	c
Format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl<T> Format<Json, T> {$/;"	c
Format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^pub struct Format<F = Full, T = SystemTime> {$/;"	s
Format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^impl<C, N, T> FormatEvent<C, N> for Format<Pretty, T>$/;"	c
Format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^impl<T> Format<Pretty, T> {$/;"	c
FormatEvent	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^pub trait FormatEvent<S, N>$/;"	i
FormatFields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^pub trait FormatFields<'writer> {$/;"	i
FormatTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^impl FormatTime for () {$/;"	c
FormatTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^pub trait FormatTime {$/;"	i
FormatWith	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs	/^impl<'a, I, F> fmt::Display for FormatWith<'a, I, F>$/;"	c
FormatWith	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs	/^pub struct FormatWith<'a, I, F> {$/;"	s
FormatWrapped	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            impl<'a, D: fmt::Debug> fmt::Display for FormatWrapped<'a, D> {$/;"	c	method:serde::DateTime::serialize
FormatWrapped	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            struct FormatWrapped<'a, D: 'a> {$/;"	s	method:serde::DateTime::serialize
FormatWrapped	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^            impl<'a, D: fmt::Debug> fmt::Display for FormatWrapped<'a, D> {$/;"	c	method:serde::NaiveDate::serialize
FormatWrapped	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^            struct FormatWrapped<'a, D: 'a> {$/;"	s	method:serde::NaiveDate::serialize
FormatWrapped	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            impl<'a, D: fmt::Debug> fmt::Display for FormatWrapped<'a, D> {$/;"	c	method:serde::NaiveDateTime::serialize
FormatWrapped	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            struct FormatWrapped<'a, D: 'a> {$/;"	s	method:serde::NaiveDateTime::serialize
FormattedFields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^impl<E> Deref for FormattedFields<E> {$/;"	c
FormattedFields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^impl<E> FormattedFields<E> {$/;"	c
FormattedFields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^impl<E> fmt::Debug for FormattedFields<E> {$/;"	c
FormattedFields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^impl<E> fmt::Display for FormattedFields<E> {$/;"	c
FormattedFields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^pub struct FormattedFields<E> {$/;"	s
Formatter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^pub type Formatter<$/;"	t
Fri	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    Fri = 4,$/;"	e	enum:Weekday
FromEnvError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^impl Error for FromEnvError {$/;"	c
FromEnvError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^impl From<ParseError> for FromEnvError {$/;"	c
FromEnvError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^impl From<env::VarError> for FromEnvError {$/;"	c
FromEnvError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^impl fmt::Display for FromEnvError {$/;"	c
FromEnvError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^pub struct FromEnvError {$/;"	s
FromRoot	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^impl<'span, R> Iterator for FromRoot<'span, R>$/;"	c
FromRoot	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^impl<'span, R> std::fmt::Debug for FromRoot<'span, R>$/;"	c
FromRoot	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^pub struct FromRoot<'a, R: LookupSpan<'a>> {$/;"	s
Full	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    Full,$/;"	e	enum:FmtSpanInner
Full	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^pub struct Full;$/;"	s
FullCtx	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl<'a, S, N: 'a> FullCtx<'a, S, N>$/;"	c
FullCtx	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl<'a, S, N> fmt::Display for FullCtx<'a, S, N>$/;"	c
FullCtx	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^struct FullCtx<'a, S, N>$/;"	s
GC	/home/asayers/projects/orpa/src/main.rs	/^    GC,$/;"	e	enum:Cmd
GenericError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    GenericError,$/;"	e	enum:ErrorCode
Global	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Global,$/;"	e	enum:ConfigLevel
Green	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    Green,$/;"	e	enum:Color
Group	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^impl<'a, K, I, F> Drop for Group<'a, K, I, F>$/;"	c
Group	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^impl<'a, K, I, F> Iterator for Group<'a, K, I, F>$/;"	c
Group	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^pub struct Group<'a, K: 'a, I: 'a, F: 'a>$/;"	s
GroupBy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^impl<'a, K, I, F> IntoIterator for &'a GroupBy<K, I, F>$/;"	c
GroupBy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^impl<K, I, F> GroupBy<K, I, F>$/;"	c
GroupBy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^pub struct GroupBy<K, I, F>$/;"	s
GroupInner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^impl<K, I, F> GroupInner<K, I, F>$/;"	c
GroupInner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^struct GroupInner<K, I, F>$/;"	s
GroupingMap	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs	/^impl<I, K, V> GroupingMap<I>$/;"	c
GroupingMap	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs	/^pub struct GroupingMap<I> {$/;"	s
GroupingMapBy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs	/^pub type GroupingMapBy<I, F> = GroupingMap<MapForGrouping<I, F>>;$/;"	t
Groups	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^impl<'a, K, I, F> Iterator for Groups<'a, K, I, F>$/;"	c
Groups	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^pub struct Groups<'a, K: 'a, I: 'a, F: 'a>$/;"	s
Handle	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^impl<L, S> Clone for Handle<L, S> {$/;"	c
Handle	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^impl<L, S> Handle<L, S>$/;"	c
Handle	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^pub struct Handle<L, S> {$/;"	s
Hard	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Hard,$/;"	e	enum:ResetType
HasCombination	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub trait HasCombination<I>: Sized {$/;"	i
HashsumMismatch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    HashsumMismatch,$/;"	e	enum:ErrorCode
HeadTail	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs	/^impl<I> Clone for HeadTail<I>$/;"	c
HeadTail	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs	/^impl<I> HeadTail<I>$/;"	c
HeadTail	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs	/^struct HeadTail<I>$/;"	s
Hidden	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^    Hidden,$/;"	e	enum:Styles
Highest	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Highest,$/;"	e	enum:ConfigLevel
HomogeneousTuple	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^pub trait HomogeneousTuple$/;"	i
Hour	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Hour,$/;"	e	enum:Numeric
Hour12	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Hour12,$/;"	e	enum:Numeric
Http	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Http,$/;"	e	enum:ErrorClass
HunkCB	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/apply.rs	/^type HunkCB<'a> = dyn FnMut(Option<DiffHunk<'_>>) -> bool + 'a;$/;"	t
HunkCb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^pub type HunkCb<'a> = dyn FnMut(DiffDelta<'_>, DiffHunk<'_>) -> bool + 'a;$/;"	t
I64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    I64(i64),$/;"	e	enum:ValueMatch
INFO	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            static mut INFO: mach_timebase_info = mach_timebase_info {$/;"	v	function:inner::mac::info
INIT	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    static INIT: Once = Once::new();$/;"	v	function:init
INIT	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^        static INIT: Once = Once::new();$/;"	v	function:tests::transport_error_propagates
INIT	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^        static INIT: Once = ONCE_INIT;$/;"	v	function:tests::set_time_zone_la_or_london
INIT	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        static INIT: Once = ONCE_INIT;$/;"	v	function:inner::acquire_privileges
Id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/thread.rs	/^impl Id {$/;"	c
Id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/thread.rs	/^impl fmt::Debug for Id {$/;"	c
Id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/thread.rs	/^pub(crate) struct Id {$/;"	s
IdHasher	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^impl Hasher for IdHasher {$/;"	c
IdHasher	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^struct IdHasher(u64);$/;"	s
Identity	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^impl Identity {$/;"	c
Identity	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^impl<S: Subscriber> Layer<S> for Identity {}$/;"	c
Identity	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^pub struct Identity {$/;"	s
Ignored	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Ignored,$/;"	e	enum:Delta
Impossible	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Impossible,$/;"	e	enum:ParseErrorKind
Indented	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/fmt.rs	/^impl<T> Write for Indented<'_, T>$/;"	c
Indented	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/fmt.rs	/^struct Indented<'a, D> {$/;"	s
Index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/apply.rs	/^    Index,$/;"	e	enum:ApplyLocation
Index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^impl Binding for Index {$/;"	c
Index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^impl Drop for Index {$/;"	c
Index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^impl Index {$/;"	c
Index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^pub struct Index {$/;"	s
Index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Index,$/;"	e	enum:ErrorClass
Index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    Index,$/;"	e	enum:StatusShow
IndexAddOption	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl Default for IndexAddOption {$/;"	c
IndexAddOption	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl IndexAddOption {$/;"	c
IndexAndWorkdir	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    IndexAndWorkdir,$/;"	e	enum:StatusShow
IndexConflict	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^pub struct IndexConflict {$/;"	s
IndexConflicts	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^impl<'index> Binding for IndexConflicts<'index> {$/;"	c
IndexConflicts	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^impl<'index> Drop for IndexConflicts<'index> {$/;"	c
IndexConflicts	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^impl<'index> Iterator for IndexConflicts<'index> {$/;"	c
IndexConflicts	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^pub struct IndexConflicts<'index> {$/;"	s
IndexDirty	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    IndexDirty,$/;"	e	enum:ErrorCode
IndexEntries	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^impl<'index> Iterator for IndexEntries<'index> {$/;"	c
IndexEntries	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^pub struct IndexEntries<'index> {$/;"	s
IndexEntry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^impl Binding for IndexEntry {$/;"	c
IndexEntry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^pub struct IndexEntry {$/;"	s
IndexEntryExtendedFlag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl IndexEntryExtendedFlag {$/;"	c
IndexEntryFlag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl IndexEntryFlag {$/;"	c
IndexMatchedPath	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^pub type IndexMatchedPath<'a> = dyn FnMut(&Path, &[u8]) -> i32 + 'a;$/;"	t
IndexTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^impl Binding for IndexTime {$/;"	c
IndexTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^impl IndexTime {$/;"	c
IndexTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^impl Ord for IndexTime {$/;"	c
IndexTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^impl PartialOrd for IndexTime {$/;"	c
IndexTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^pub struct IndexTime {$/;"	s
Indexer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Indexer,$/;"	e	enum:ErrorClass
IndexerProgress	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/indexer.rs	/^pub type IndexerProgress<'a> = dyn FnMut(Progress<'_>) -> bool + 'a;$/;"	t
Inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^impl Clone for Inner {$/;"	c
Inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^impl Hash for Inner {$/;"	c
Inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^impl Inner {$/;"	c
Inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^impl cmp::PartialEq for Inner {$/;"	c
Inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^pub(crate) struct Inner {$/;"	s
Inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/thread.rs	/^type Inner<T> = Vec<Option<UnsafeCell<T>>>;$/;"	t
Instrument	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/instrument.rs	/^pub trait Instrument: Sized {$/;"	i
Instrumented	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/instrument.rs	/^impl<T: Future> Future for Instrumented<T> {$/;"	c
Instrumented	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/instrument.rs	/^impl<T> Instrumented<T> {$/;"	c
Interleave	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^impl<I, J> Iterator for Interleave<I, J>$/;"	c
Interleave	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub struct Interleave<I, J> {$/;"	s
InterleaveShortest	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^impl<I, J> Iterator for InterleaveShortest<I, J>$/;"	c
InterleaveShortest	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub struct InterleaveShortest<I, J>$/;"	s
Internal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Internal(InternalFixed),$/;"	e	enum:Fixed
Internal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Internal(InternalNumeric),$/;"	e	enum:Numeric
InternalFixed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub struct InternalFixed {$/;"	s
InternalInternal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^enum InternalInternal {$/;"	g
InternalNumeric	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^impl Clone for InternalNumeric {$/;"	c
InternalNumeric	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^impl Eq for InternalNumeric {}$/;"	c
InternalNumeric	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^impl PartialEq for InternalNumeric {$/;"	c
InternalNumeric	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^impl fmt::Debug for InternalNumeric {$/;"	c
InternalNumeric	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub struct InternalNumeric {$/;"	s
Intersperse	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs	/^pub type Intersperse<I> = IntersperseWith<I, IntersperseElementSimple<<I as Iterator>::Item>>;$/;"	t
IntersperseElement	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs	/^pub trait IntersperseElement<Item> {$/;"	i
IntersperseElementSimple	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs	/^impl<Item: Clone> IntersperseElement<Item> for IntersperseElementSimple<Item> {$/;"	c
IntersperseElementSimple	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs	/^pub struct IntersperseElementSimple<Item>(Item);$/;"	s
IntersperseWith	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs	/^impl<I, ElemF> Iterator for IntersperseWith<I, ElemF>$/;"	c
IntersperseWith	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs	/^pub struct IntersperseWith<I, ElemF>$/;"	s
IntoCString	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^pub trait IntoCString {$/;"	i
IntoChunks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^impl<'a, I> IntoIterator for &'a IntoChunks<I>$/;"	c
IntoChunks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^impl<I> IntoChunks<I>$/;"	c
IntoChunks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^pub struct IntoChunks<I>$/;"	s
IntoIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^    type IntoIter = Iter<'a>;$/;"	t	implementation:StringArray
IntoIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    type IntoIter = TreeIter<'iter>;$/;"	t	implementation:Tree
IntoIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    type IntoIter = Chunks<'a, I>;$/;"	t
IntoIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    type IntoIter = Groups<'a, K, I, F>;$/;"	t
IntoIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs	/^    type IntoIter = RcIter<I>;$/;"	t
Invalid	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Invalid,$/;"	e	enum:ParseErrorKind
Invalid	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Invalid,$/;"	e	enum:ErrorClass
Invalid	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Invalid,$/;"	e	enum:ErrorCode
InvalidDay	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    InvalidDay,$/;"	e	enum:ParseError
InvalidDayOfMonth	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    InvalidDayOfMonth,$/;"	e	enum:ParseError
InvalidDayOfWeek	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    InvalidDayOfWeek,$/;"	e	enum:ParseError
InvalidDayOfYear	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    InvalidDayOfYear,$/;"	e	enum:ParseError
InvalidFormatSpecifier	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    InvalidFormatSpecifier(char),$/;"	e	enum:ParseError
InvalidHour	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    InvalidHour,$/;"	e	enum:ParseError
InvalidMinute	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    InvalidMinute,$/;"	e	enum:ParseError
InvalidMonth	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    InvalidMonth,$/;"	e	enum:ParseError
InvalidSecond	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    InvalidSecond,$/;"	e	enum:ParseError
InvalidSecondsSinceEpoch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    InvalidSecondsSinceEpoch,$/;"	e	enum:ParseError
InvalidSpec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    InvalidSpec,$/;"	e	enum:ErrorCode
InvalidTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    InvalidTime,$/;"	e	enum:ParseError
InvalidYear	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    InvalidYear,$/;"	e	enum:ParseError
InvalidZoneOffset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    InvalidZoneOffset,$/;"	e	enum:ParseError
IsNull	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^pub trait IsNull {$/;"	i
IsoWeek	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    IsoWeek,$/;"	e	enum:Numeric
IsoWeek	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^impl IsoWeek {$/;"	c
IsoWeek	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^impl fmt::Debug for IsoWeek {$/;"	c
IsoWeek	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^pub struct IsoWeek {$/;"	s
IsoYear	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    IsoYear,$/;"	e	enum:Numeric
IsoYearDiv100	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    IsoYearDiv100,$/;"	e	enum:Numeric
IsoYearMod100	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    IsoYearMod100,$/;"	e	enum:Numeric
Italic	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^    Italic,$/;"	e	enum:Styles
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/chain.rs	/^    type Item = &'a (dyn StdError + 'static);$/;"	t	implementation:Chain
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub enum Item<'a> {$/;"	g
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^    type Item = Item<'a>;$/;"	t	implementation:StrftimeItems
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    type Item = NaiveDate;$/;"	t	implementation:NaiveDateDaysIterator
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    type Item = NaiveDate;$/;"	t	implementation:NaiveDateWeeksIterator
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    type Item = BlameHunk<'blame>;$/;"	t	implementation:BlameIter
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/branch.rs	/^    type Item = Result<(Branch<'repo>, BranchType), Error>;$/;"	t	implementation:Branches
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    type Item = Commit<'repo>;$/;"	t	implementation:Parents
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    type Item = Oid;$/;"	t	implementation:ParentIds
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    type Item = Result<ConfigEntry<'b>, Error>;$/;"	t	implementation:ConfigEntries
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    type Item = DiffDelta<'diff>;$/;"	t	implementation:Deltas
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    type Item = IndexEntry;$/;"	t	implementation:IndexEntries
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    type Item = Result<IndexConflict, Error>;$/;"	t	implementation:IndexConflicts
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^    type Item = Result<(Oid, Oid), Error>;$/;"	t	implementation:Notes
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    type Item = &'list [u8];$/;"	t	implementation:PathspecEntries
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    type Item = &'list [u8];$/;"	t	implementation:PathspecFailedEntries
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    type Item = DiffDelta<'list>;$/;"	t	implementation:PathspecDiffEntries
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    type Item = Result<RebaseOperation<'rebase>, Error>;$/;"	t	implementation:Rebase
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    type Item = Result<&'references str, Error>;$/;"	t	implementation:ReferenceNames
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    type Item = Result<Reference<'repo>, Error>;$/;"	t	implementation:References
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    type Item = ReflogEntry<'reflog>;$/;"	t	implementation:ReflogIter
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    type Item = Refspec<'repo>;$/;"	t	implementation:Refspecs
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revwalk.rs	/^    type Item = Result<Oid, Error>;$/;"	t	implementation:Revwalk
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    type Item = StatusEntry<'a>;$/;"	t	implementation:StatusIter
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^    type Item = &'a [u8];$/;"	t	implementation:IterBytes
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^    type Item = Option<&'a str>;$/;"	t	implementation:Iter
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^    type Item = Option<&'a str>;$/;"	t	implementation:StringArray
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^        type Item = TreeEntry<'a>;$/;"	t	implementation:tests::TestTreeIter
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    type Item = TreeEntry<'iter>;$/;"	t	implementation:Tree
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    type Item = TreeEntry<'tree>;$/;"	t	implementation:TreeIter
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^    type Item = T;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs	/^    type Item = R::Out;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    type Item = (I::Item, J::Item);$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    type Item = (I::Item,);$/;"	t	implementation:Tuple1Combination
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    type Item = A;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    type Item = B;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    type Item = I::Item;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    type Item = Result<T, E>;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    type Item = Result<U, E>;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    type Item = T;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    type Item = usize;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^impl<I: Iterator> HasCombination<I> for (I::Item,) {$/;"	c
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs	/^    type Item = Vec<I::Item>;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs	/^    type Item = Vec<I::Item>;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations_with_replacement.rs	/^    type Item = Vec<I::Item>;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs	/^    type Item = I::Item;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    type Item = (K, Group<'a, K, I, F>);$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    type Item = Chunk<'a, I>;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    type Item = I::Item;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs	/^    type Item = (K, V);$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs	/^    type Item = I::Item;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs	/^    type Item = I::Item;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs	/^    type Item = EitherOrBoth<I::Item, J::Item>;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs	/^    type Item = I::Item;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/pad_tail.rs	/^    type Item = I::Item;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs	/^    type Item = I::Item;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs	/^    type Item = I::Item;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs	/^    type Item = Vec<I::Item>;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/powerset.rs	/^    type Item = Vec<I::Item>;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs	/^    type Item = T;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs	/^    type Item = I::Item;$/;"	t	implementation:PutBackN
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs	/^    type Item = A;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs	/^    type Item = I::Item;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/repeatn.rs	/^    type Item = A;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs	/^    type Item = A;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs	/^    type Item = St;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tee.rs	/^    type Item = I::Item;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^    type Item = T::Item;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^    type Item = T;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^    type Item;$/;"	t	interface:TupleCollect
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs	/^    type Item = I::Item;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs	/^    type Item = Position<I::Item>;$/;"	t	implementation:WithPosition
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs	/^    type Item = (I::Item, J::Item);$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_longest.rs	/^    type Item = EitherOrBoth<T::Item, U::Item>;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    type Item = SpanRef<'a, L>;$/;"	t	implementation:Scope
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    type Item = SpanRef<'a, R>;$/;"	t
Item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    type Item = SpanRef<'span, R>;$/;"	t
Iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^impl<'a> DoubleEndedIterator for Iter<'a> {$/;"	c
Iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^impl<'a> ExactSizeIterator for Iter<'a> {}$/;"	c
Iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^impl<'a> Iterator for Iter<'a> {$/;"	c
Iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^pub struct Iter<'a> {$/;"	s
IterBytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^impl<'a> DoubleEndedIterator for IterBytes<'a> {$/;"	c
IterBytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^impl<'a> ExactSizeIterator for IterBytes<'a> {}$/;"	c
IterBytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^impl<'a> Iterator for IterBytes<'a> {$/;"	c
IterBytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^pub struct IterBytes<'a> {$/;"	s
Iterate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs	/^impl<St, F> Iterator for Iterate<St, F>$/;"	c
Iterate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs	/^impl<St, F> fmt::Debug for Iterate<St, F>$/;"	c
Iterate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs	/^pub struct Iterate<St, F> {$/;"	s
Itertools	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^pub trait Itertools : Iterator {$/;"	i
January	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    January = 0,$/;"	e	enum:Month
Json	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^impl Default for Json {$/;"	c
Json	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^impl Json {$/;"	c
Json	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^pub struct Json {$/;"	s
JsonFields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^impl Default for JsonFields {$/;"	c
JsonFields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^impl JsonFields {$/;"	c
JsonFields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^impl<'a> FormatFields<'a> for JsonFields {$/;"	c
JsonFields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^pub struct JsonFields {$/;"	s
JsonVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^impl<'a> JsonVisitor<'a> {$/;"	c
JsonVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^impl<'a> crate::field::VisitFmt for JsonVisitor<'a> {$/;"	c
JsonVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^impl<'a> crate::field::VisitOutput<fmt::Result> for JsonVisitor<'a> {$/;"	c
JsonVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^impl<'a> field::Visit for JsonVisitor<'a> {$/;"	c
JsonVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^impl<'a> fmt::Debug for JsonVisitor<'a> {$/;"	c
JsonVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^pub struct JsonVisitor<'a> {$/;"	s
July	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    July = 6,$/;"	e	enum:Month
June	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    June = 5,$/;"	e	enum:Month
KMerge	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs	/^pub type KMerge<I> = KMergeBy<I, KMergeByLt>;$/;"	t
KMergeBy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs	/^impl<I, F> Clone for KMergeBy<I, F>$/;"	c
KMergeBy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs	/^impl<I, F> Iterator for KMergeBy<I, F>$/;"	c
KMergeBy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs	/^impl<I, F> fmt::Debug for KMergeBy<I, F>$/;"	c
KMergeBy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs	/^pub struct KMergeBy<I, F>$/;"	s
KMergeByLt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs	/^impl<T: PartialOrd> KMergePredicate<T> for KMergeByLt {$/;"	c
KMergeByLt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs	/^pub struct KMergeByLt;$/;"	s
KMergePredicate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs	/^pub trait KMergePredicate<T> {$/;"	i
Key	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    type Key = K;$/;"	t
Key	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    type Key = usize;$/;"	t	implementation:ChunkIndex
Key	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    type Key;$/;"	t	interface:KeyFunction
KeyFunction	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^trait KeyFunction<A> {$/;"	i
Known	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs	/^    Known(usize),$/;"	e	enum:CompleteStateRemaining
LOCK	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^        static mut LOCK: *mut Mutex<()> = 0 as *mut _;$/;"	v	function:tests::set_time_zone_la_or_london
LONG_MONTH_SUFFIXES	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^    static LONG_MONTH_SUFFIXES: [&'static str; 12] =$/;"	v	function:short_or_long_month0
LONG_WEEKDAY_SUFFIXES	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^    static LONG_WEEKDAY_SUFFIXES: [&'static str; 7] =$/;"	v	function:short_or_long_weekday
Last	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs	/^    Last(T),$/;"	e	enum:Position
Layer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^impl<S, N, E, W> Layer<S, N, E, W> {$/;"	c
Layer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^impl<S, N, E, W> Layer<S, N, E, W>$/;"	c
Layer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^impl<S, N, E, W> layer::Layer<S> for Layer<S, N, E, W>$/;"	c
Layer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^impl<S, N, L, T, W> Layer<S, N, format::Format<L, T>, W>$/;"	c
Layer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^impl<S, T, W> Layer<S, format::JsonFields, format::Format<format::Json, T>, W> {$/;"	c
Layer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^impl<S> Default for Layer<S> {$/;"	c
Layer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^impl<S> Layer<S> {$/;"	c
Layer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^pub struct Layer<$/;"	s
Layer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^pub trait Layer<S>$/;"	i
Layer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^impl<L, S> Layer<L, S>$/;"	c
Layer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^impl<L, S> crate::Layer<S> for Layer<L, S>$/;"	c
Layer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^pub struct Layer<L, S> {$/;"	s
LayerBuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^impl<S, N, E, W> LayerBuilder<S, N, E, W>$/;"	c
LayerBuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^pub type LayerBuilder<$/;"	t
Layered	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^impl<'a, L, S> LookupSpan<'a> for Layered<L, S>$/;"	c
Layered	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^impl<L, S> Layered<L, S>$/;"	c
Layered	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^impl<L, S> Subscriber for Layered<L, S>$/;"	c
Layered	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^impl<S, A, B> Layer<S> for Layered<A, B, S>$/;"	c
Layered	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^pub struct Layered<L, I, S = I> {$/;"	s
LazyBuffer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lazy_buffer.rs	/^impl<I, J> Index<J> for LazyBuffer<I>$/;"	c
LazyBuffer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lazy_buffer.rs	/^impl<I> LazyBuffer<I>$/;"	c
LazyBuffer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lazy_buffer.rs	/^pub struct LazyBuffer<I: Iterator> {$/;"	s
Left	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs	/^    Left(A),$/;"	e	enum:EitherOrBoth
Level	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    Level(level::ParseError),$/;"	e	enum:ParseErrorKind
LevelFilter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/level.rs	/^impl<S: Subscriber> crate::Layer<S> for LevelFilter {$/;"	c
LineCb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^pub type LineCb<'a> = dyn FnMut(DiffDelta<'_>, Option<DiffHunk<'_>>, DiffLine<'_>) -> bool + 'a;$/;"	t
Link	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Link,$/;"	e	enum:FileMode
Linked	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/chain.rs	/^    Linked {$/;"	e	enum:ChainState
List	/home/asayers/projects/orpa/src/main.rs	/^    List,$/;"	e	enum:Cmd
Literal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Literal(&'a str),$/;"	e	enum:Item
Literal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    Literal,$/;"	e	enum:DiffBinaryKind
LoadingStash	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    LoadingStash,$/;"	e	enum:StashApplyProgress
Local	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^impl Local {$/;"	c
Local	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^impl TimeZone for Local {$/;"	c
Local	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^pub struct Local;$/;"	s
Local	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    Local = raw::GIT_CLONE_LOCAL as isize,$/;"	e	enum:CloneLocal
Local	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Local,$/;"	e	enum:BranchType
Local	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Local,$/;"	e	enum:ConfigLevel
Local	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/thread.rs	/^impl<T: Default> Local<T> {$/;"	c
Local	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/thread.rs	/^impl<T: fmt::Debug> fmt::Debug for Local<T> {$/;"	c
Local	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/thread.rs	/^impl<T> Local<T> {$/;"	c
Local	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/thread.rs	/^pub(crate) struct Local<T> {$/;"	s
Local	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/thread.rs	/^unsafe impl<T> Sync for Local<T> {}$/;"	c
LocalResult	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^impl<T: fmt::Debug> LocalResult<T> {$/;"	c
LocalResult	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^impl<T> LocalResult<T> {$/;"	c
LocalResult	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^impl<Tz: TimeZone> LocalResult<Date<Tz>> {$/;"	c
LocalResult	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^pub enum LocalResult<T> {$/;"	g
Locale	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^struct Locale;$/;"	s
Locked	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Locked,$/;"	e	enum:ErrorCode
Locked	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    Locked(Option<String>),$/;"	e	enum:WorktreeLockStatus
LongMonthName	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    LongMonthName,$/;"	e	enum:Fixed
LongWeekdayName	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    LongWeekdayName,$/;"	e	enum:Fixed
Longer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs	/^    Longer(usize, PutBack<J>),$/;"	e	enum:Diff
LookupSpan	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^pub trait LookupSpan<'a> {$/;"	i
LowerAmPm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    LowerAmPm,$/;"	e	enum:Fixed
M	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^impl<T, M> MakeExt<T> for M$/;"	c
M	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^impl<T, M> crate::sealed::Sealed<MakeExtMarker<T>> for M where M: MakeVisitor<T> + Sized {}$/;"	c
M	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^impl<T, Out, M> MakeOutput<T, Out> for M$/;"	c
M	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^impl<T, Out, M> crate::sealed::Sealed<(T, Out)> for M$/;"	c
M	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl<'writer, M> FormatFields<'writer> for M$/;"	c
MAX_LEN	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^        static MAX_LEN: AtomicUsize = AtomicUsize::new(0);$/;"	v	method:FmtThreadName::fmt
MDL_TO_OL	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^static MDL_TO_OL: [i8; MAX_MDL as usize + 1] = [$/;"	v
META	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^        static META: &Metadata<'static> = &Metadata::new($/;"	v	function:tests::callsite_enabled_includes_span_directive
META	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^        static META: &Metadata<'static> = &Metadata::new($/;"	v	function:tests::callsite_enabled_includes_span_directive_field
META	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^        static META: &Metadata<'static> = &Metadata::new($/;"	v	function:tests::callsite_enabled_includes_span_directive_multiple_fields
META	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^        static META: &Metadata<'static> = &Metadata::new($/;"	v	function:tests::callsite_enabled_no_span_directive
META	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^        static META: &Metadata<'static> = &Metadata::new($/;"	v	function:tests::callsite_off
MacroCallsite	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/lib.rs	/^    impl Callsite for MacroCallsite {$/;"	c	module:__macro_support
MacroCallsite	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/lib.rs	/^    impl MacroCallsite {$/;"	c	module:__macro_support
MacroCallsite	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/lib.rs	/^    pub struct MacroCallsite {$/;"	s	module:__macro_support
Magenta	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    Magenta,$/;"	e	enum:Color
MakeDebug	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    impl<'a> MakeVisitor<&'a mut dyn fmt::Write> for MakeDebug {$/;"	c	module:test_util
MakeDebug	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    pub(crate) struct MakeDebug;$/;"	s	module:test_util
MakeExt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^pub trait MakeExt<T>$/;"	i
MakeExtMarker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^pub struct MakeExtMarker<T> {$/;"	s
MakeOutput	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^pub trait MakeOutput<T, Out>$/;"	i
MakeVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^pub trait MakeVisitor<T> {$/;"	i
MakeWriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^pub trait MakeWriter {$/;"	i
MapForGrouping	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs	/^impl<I, F> MapForGrouping<I, F> {$/;"	c
MapForGrouping	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs	/^impl<K, V, I, F> Iterator for MapForGrouping<I, F>$/;"	c
MapForGrouping	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs	/^pub struct MapForGrouping<I, F>(I, F);$/;"	s
MapInto	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs	/^pub type MapInto<I, R> = MapSpecialCase<I, MapSpecialCaseFnInto<R>>;$/;"	t
MapOk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs	/^pub type MapOk<I, F> = MapSpecialCase<I, MapSpecialCaseFnOk<F>>;$/;"	t
MapResults	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs	/^pub type MapResults<I, F> = MapOk<I, F>;$/;"	t
MapSpecialCase	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs	/^impl<I, R> DoubleEndedIterator for MapSpecialCase<I, R>$/;"	c
MapSpecialCase	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs	/^impl<I, R> ExactSizeIterator for MapSpecialCase<I, R>$/;"	c
MapSpecialCase	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs	/^impl<I, R> Iterator for MapSpecialCase<I, R>$/;"	c
MapSpecialCase	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs	/^pub struct MapSpecialCase<I, F> {$/;"	s
MapSpecialCaseFn	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs	/^pub trait MapSpecialCaseFn<T> {$/;"	i
MapSpecialCaseFnInto	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs	/^impl<T: Into<U>, U> MapSpecialCaseFn<T> for MapSpecialCaseFnInto<U> {$/;"	c
MapSpecialCaseFnInto	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs	/^pub struct MapSpecialCaseFnInto<U>(PhantomData<U>);$/;"	s
MapSpecialCaseFnOk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs	/^impl<F, T, U, E> MapSpecialCaseFn<Result<T, E>> for MapSpecialCaseFnOk<F>$/;"	c
MapSpecialCaseFnOk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs	/^pub struct MapSpecialCaseFnOk<F>(F);$/;"	s
March	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    March = 2,$/;"	e	enum:Month
Match	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^pub(crate) trait Match {$/;"	i
Match	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^impl FromStr for Match {$/;"	c
Match	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^impl Match {$/;"	c
Match	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^impl Ord for Match {$/;"	c
Match	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^impl PartialOrd for Match {$/;"	c
Match	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^impl fmt::Display for Match {$/;"	c
Match	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^pub(crate) struct Match {$/;"	s
MatchPattern	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^impl AsRef<str> for MatchPattern {$/;"	c
MatchPattern	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^impl Eq for MatchPattern {}$/;"	c
MatchPattern	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^impl FromStr for MatchPattern {$/;"	c
MatchPattern	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^impl MatchPattern {$/;"	c
MatchPattern	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^impl Ord for MatchPattern {$/;"	c
MatchPattern	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^impl PartialEq for MatchPattern {$/;"	c
MatchPattern	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^impl PartialOrd for MatchPattern {$/;"	c
MatchPattern	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^impl fmt::Display for MatchPattern {$/;"	c
MatchPattern	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^pub(crate) struct MatchPattern {$/;"	s
MatchSet	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^pub(crate) struct MatchSet<T> {$/;"	s
MatchVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^impl<'a> Visit for MatchVisitor<'a> {$/;"	c
MatchVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^pub(crate) struct MatchVisitor<'a> {$/;"	s
May	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    May = 4,$/;"	e	enum:Month
Mdf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^impl Mdf {$/;"	c
Mdf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^impl fmt::Debug for Mdf {$/;"	c
Mdf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub struct Mdf(pub u32);$/;"	s
Mempack	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/mempack.rs	/^impl<'odb> Binding for Mempack<'odb> {$/;"	c
Mempack	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/mempack.rs	/^impl<'odb> Mempack<'odb> {$/;"	c
Mempack	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/mempack.rs	/^pub struct Mempack<'odb> {$/;"	s
Merge	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Merge,$/;"	e	enum:ErrorClass
Merge	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Merge,$/;"	e	enum:RepositoryState
Merge	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub type Merge<I, J> = MergeBy<I, J, MergeLte>;$/;"	t
Merge	/home/asayers/projects/orpa/src/main.rs	/^    Merge,$/;"	e	enum:Status
MergeAnalysis	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl MergeAnalysis {$/;"	c
MergeBy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^impl<I, J, F> Clone for MergeBy<I, J, F>$/;"	c
MergeBy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^impl<I, J, F> Iterator for MergeBy<I, J, F>$/;"	c
MergeBy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^impl<I, J, F> fmt::Debug for MergeBy<I, J, F>$/;"	c
MergeBy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub struct MergeBy<I, J, F>$/;"	s
MergeConflict	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    MergeConflict,$/;"	e	enum:ErrorCode
MergeJoinBy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs	/^impl<I, J, F> Clone for MergeJoinBy<I, J, F>$/;"	c
MergeJoinBy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs	/^impl<I, J, F> Iterator for MergeJoinBy<I, J, F>$/;"	c
MergeJoinBy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs	/^impl<I, J, F> fmt::Debug for MergeJoinBy<I, J, F>$/;"	c
MergeJoinBy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs	/^pub struct MergeJoinBy<I: Iterator, J: Iterator, F> {$/;"	s
MergeLte	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^impl<T: PartialOrd> MergePredicate<T> for MergeLte {$/;"	c
MergeLte	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub struct MergeLte;$/;"	s
MergeOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^impl Default for MergeOptions {$/;"	c
MergeOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^impl MergeOptions {$/;"	c
MergeOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^pub struct MergeOptions {$/;"	s
MergePredicate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub trait MergePredicate<T> {$/;"	i
MergePreference	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl MergePreference {$/;"	c
MessageError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/wrapper.rs	/^impl<M> Debug for MessageError<M>$/;"	c
MessageError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/wrapper.rs	/^impl<M> Display for MessageError<M>$/;"	c
MessageError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/wrapper.rs	/^impl<M> StdError for MessageError<M> where M: Display + Debug + 'static {}$/;"	c
MessageError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/wrapper.rs	/^pub struct MessageError<M>(pub M);$/;"	s
Messages	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/display.rs	/^impl<T, V> MakeVisitor<T> for Messages<V>$/;"	c
Messages	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/display.rs	/^impl<V, O> VisitOutput<O> for Messages<V>$/;"	c
Messages	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/display.rs	/^impl<V> Messages<V> {$/;"	c
Messages	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/display.rs	/^impl<V> Visit for Messages<V>$/;"	c
Messages	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/display.rs	/^impl<V> VisitFmt for Messages<V>$/;"	c
Messages	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/display.rs	/^impl<V> VisitWrite for Messages<V>$/;"	c
Messages	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/display.rs	/^pub struct Messages<V>(V);$/;"	s
Micros	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    Micros,$/;"	e	enum:SecondsFormat
MidIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs	/^    MidIter { on_first_iter: bool },$/;"	e	enum:MultiProductIterState
Middle	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs	/^    Middle(T),$/;"	e	enum:Position
MilliSecondsTimestampVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        impl<'de> de::Visitor<'de> for MilliSecondsTimestampVisitor {$/;"	c	module:serde::ts_milliseconds
MilliSecondsTimestampVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub struct MilliSecondsTimestampVisitor;$/;"	s	module:serde
Millis	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    Millis,$/;"	e	enum:SecondsFormat
MinMax	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs	/^    MinMax(T, T)$/;"	e	enum:MinMaxResult
MinMaxResult	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs	/^impl<T: Clone> MinMaxResult<T> {$/;"	c
MinMaxResult	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs	/^pub enum MinMaxResult<T> {$/;"	g
Minute	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Minute,$/;"	e	enum:Numeric
MissingFormatConverter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    MissingFormatConverter,$/;"	e	enum:ParseError
Mixed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Mixed,$/;"	e	enum:ResetType
MockMakeWriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    impl<'a> MakeWriter for MockMakeWriter<'a> {$/;"	c	module:test
MockMakeWriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    impl<'a> MockMakeWriter<'a> {$/;"	c	module:test
MockMakeWriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub(crate) struct MockMakeWriter<'a> {$/;"	s	module:test
MockTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    impl FormatTime for MockTime {$/;"	c	module:test
MockTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    struct MockTime;$/;"	s	module:test
MockTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    impl FormatTime for MockTime {$/;"	c	module:test
MockTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    pub(crate) struct MockTime;$/;"	s	module:test
MockWriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    impl<'a> MockWriter<'a> {$/;"	c	module:test
MockWriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    impl<'a> io::Write for MockWriter<'a> {$/;"	c	module:test
MockWriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub(crate) struct MockWriter<'a> {$/;"	s	module:test
Modified	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Modified,$/;"	e	enum:Delta
Modified	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Modified,$/;"	e	enum:ErrorCode
Mon	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    Mon = 0,$/;"	e	enum:Weekday
Month	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Month,$/;"	e	enum:Numeric
Month	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^impl FromStr for Month {$/;"	c
Month	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    impl ser::Serialize for Month {$/;"	c	module:month_serde
Month	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    impl<'de> de::Deserialize<'de> for Month {$/;"	c	module:month_serde
Month	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^impl Month {$/;"	c
Month	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^impl num_traits::FromPrimitive for Month {$/;"	c
Month	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub enum Month {$/;"	g
MonthVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    impl<'de> de::Visitor<'de> for MonthVisitor {$/;"	c	module:month_serde
MonthVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    struct MonthVisitor;$/;"	s	module:month_serde
MultiPeek	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs	/^impl<I: Iterator> MultiPeek<I> {$/;"	c
MultiPeek	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs	/^impl<I> ExactSizeIterator for MultiPeek<I>$/;"	c
MultiPeek	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs	/^impl<I> Iterator for MultiPeek<I>$/;"	c
MultiPeek	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs	/^impl<I> MultiPeek<I>$/;"	c
MultiPeek	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs	/^impl<I> PeekingNext for MultiPeek<I>$/;"	c
MultiPeek	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs	/^pub struct MultiPeek<I>$/;"	s
MultiProduct	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs	/^impl<I> Iterator for MultiProduct<I>$/;"	c
MultiProduct	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs	/^impl<I> MultiProduct<I>$/;"	c
MultiProduct	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs	/^pub struct MultiProduct<I>(Vec<MultiProductIter<I>>)$/;"	s
MultiProductIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs	/^impl<I> MultiProductIter<I>$/;"	c
MultiProductIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs	/^struct MultiProductIter<I>$/;"	s
MultiProductIterState	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs	/^enum MultiProductIterState {$/;"	g
Mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^impl<'a, T> Clone for Mut<'a, T> {$/;"	c
Mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^impl<'a, T> Copy for Mut<'a, T> {}$/;"	c
Mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^impl<'a, T> Mut<'a, T> {$/;"	c
Mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^pub struct Mut<'a, T> {$/;"	s
MyType	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^    struct MyType(i32);$/;"	s	module:tests
NEXT_ID	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/thread.rs	/^        static NEXT_ID: AtomicUsize = AtomicUsize::new(0);$/;"	v	method:Id::new_thread
NSEC_PER_SEC	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^static NSEC_PER_SEC: i32 = 1_000_000_000;$/;"	v
NULL_CALLSITE	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^        static NULL_CALLSITE: NullCallsite = NullCallsite;$/;"	v	method:DataInner::default
NULL_METADATA	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^        static NULL_METADATA: Metadata<'static> = tracing_core::metadata! {$/;"	v	method:DataInner::default
NaiveDate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    impl Decodable for NaiveDate {$/;"	c	module:rustc_serialize
NaiveDate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    impl Encodable for NaiveDate {$/;"	c	module:rustc_serialize
NaiveDate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    impl ser::Serialize for NaiveDate {$/;"	c	module:serde
NaiveDate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    impl<'de> de::Deserialize<'de> for NaiveDate {$/;"	c	module:serde
NaiveDate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^impl Add<OldDuration> for NaiveDate {$/;"	c
NaiveDate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^impl AddAssign<OldDuration> for NaiveDate {$/;"	c
NaiveDate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^impl Datelike for NaiveDate {$/;"	c
NaiveDate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^impl NaiveDate {$/;"	c
NaiveDate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^impl Sub<NaiveDate> for NaiveDate {$/;"	c
NaiveDate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^impl Sub<OldDuration> for NaiveDate {$/;"	c
NaiveDate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^impl SubAssign<OldDuration> for NaiveDate {$/;"	c
NaiveDate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^impl fmt::Debug for NaiveDate {$/;"	c
NaiveDate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^impl fmt::Display for NaiveDate {$/;"	c
NaiveDate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^impl str::FromStr for NaiveDate {$/;"	c
NaiveDate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^pub struct NaiveDate {$/;"	s
NaiveDateDaysIterator	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^impl ExactSizeIterator for NaiveDateDaysIterator {}$/;"	c
NaiveDateDaysIterator	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^impl Iterator for NaiveDateDaysIterator {$/;"	c
NaiveDateDaysIterator	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^pub struct NaiveDateDaysIterator {$/;"	s
NaiveDateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    impl Decodable for NaiveDateTime {$/;"	c	module:rustc_serialize
NaiveDateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    impl Encodable for NaiveDateTime {$/;"	c	module:rustc_serialize
NaiveDateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    impl From<TsSeconds> for NaiveDateTime {$/;"	c	module:rustc_serialize
NaiveDateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    impl ser::Serialize for NaiveDateTime {$/;"	c	module:serde
NaiveDateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    impl<'de> de::Deserialize<'de> for NaiveDateTime {$/;"	c	module:serde
NaiveDateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^impl Add<OldDuration> for NaiveDateTime {$/;"	c
NaiveDateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^impl AddAssign<OldDuration> for NaiveDateTime {$/;"	c
NaiveDateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^impl Datelike for NaiveDateTime {$/;"	c
NaiveDateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^impl NaiveDateTime {$/;"	c
NaiveDateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^impl Sub<NaiveDateTime> for NaiveDateTime {$/;"	c
NaiveDateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^impl Sub<OldDuration> for NaiveDateTime {$/;"	c
NaiveDateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^impl SubAssign<OldDuration> for NaiveDateTime {$/;"	c
NaiveDateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^impl Timelike for NaiveDateTime {$/;"	c
NaiveDateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^impl fmt::Debug for NaiveDateTime {$/;"	c
NaiveDateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^impl fmt::Display for NaiveDateTime {$/;"	c
NaiveDateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^impl hash::Hash for NaiveDateTime {$/;"	c
NaiveDateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^impl str::FromStr for NaiveDateTime {$/;"	c
NaiveDateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^pub struct NaiveDateTime {$/;"	s
NaiveDateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^impl Add<FixedOffset> for NaiveDateTime {$/;"	c
NaiveDateTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^impl Sub<FixedOffset> for NaiveDateTime {$/;"	c
NaiveDateTimeFromMilliSecondsVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        impl<'de> de::Visitor<'de> for NaiveDateTimeFromMilliSecondsVisitor {$/;"	c	module:serde::ts_milliseconds
NaiveDateTimeFromMilliSecondsVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        struct NaiveDateTimeFromMilliSecondsVisitor;$/;"	s	module:serde::ts_milliseconds
NaiveDateTimeFromNanoSecondsVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        impl<'de> de::Visitor<'de> for NaiveDateTimeFromNanoSecondsVisitor {$/;"	c	module:serde::ts_nanoseconds
NaiveDateTimeFromNanoSecondsVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        struct NaiveDateTimeFromNanoSecondsVisitor;$/;"	s	module:serde::ts_nanoseconds
NaiveDateTimeFromSecondsVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        impl<'de> de::Visitor<'de> for NaiveDateTimeFromSecondsVisitor {$/;"	c	module:serde::ts_seconds
NaiveDateTimeFromSecondsVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        struct NaiveDateTimeFromSecondsVisitor;$/;"	s	module:serde::ts_seconds
NaiveDateTimeVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    impl<'de> de::Visitor<'de> for NaiveDateTimeVisitor {$/;"	c	module:serde
NaiveDateTimeVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    struct NaiveDateTimeVisitor;$/;"	s	module:serde
NaiveDateVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    impl<'de> de::Visitor<'de> for NaiveDateVisitor {$/;"	c	module:serde
NaiveDateVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    struct NaiveDateVisitor;$/;"	s	module:serde
NaiveDateWeeksIterator	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^impl ExactSizeIterator for NaiveDateWeeksIterator {}$/;"	c
NaiveDateWeeksIterator	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^impl Iterator for NaiveDateWeeksIterator {$/;"	c
NaiveDateWeeksIterator	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^pub struct NaiveDateWeeksIterator {$/;"	s
NaiveTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    impl Decodable for NaiveTime {$/;"	c	module:rustc_serialize
NaiveTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    impl Encodable for NaiveTime {$/;"	c	module:rustc_serialize
NaiveTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    impl ser::Serialize for NaiveTime {$/;"	c	module:serde
NaiveTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    impl<'de> de::Deserialize<'de> for NaiveTime {$/;"	c	module:serde
NaiveTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^impl Add<OldDuration> for NaiveTime {$/;"	c
NaiveTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^impl AddAssign<OldDuration> for NaiveTime {$/;"	c
NaiveTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^impl NaiveTime {$/;"	c
NaiveTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^impl Sub<NaiveTime> for NaiveTime {$/;"	c
NaiveTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^impl Sub<OldDuration> for NaiveTime {$/;"	c
NaiveTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^impl SubAssign<OldDuration> for NaiveTime {$/;"	c
NaiveTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^impl Timelike for NaiveTime {$/;"	c
NaiveTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^impl fmt::Debug for NaiveTime {$/;"	c
NaiveTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^impl fmt::Display for NaiveTime {$/;"	c
NaiveTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^impl hash::Hash for NaiveTime {$/;"	c
NaiveTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^impl str::FromStr for NaiveTime {$/;"	c
NaiveTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^pub struct NaiveTime {$/;"	s
NaiveTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^impl Add<FixedOffset> for NaiveTime {$/;"	c
NaiveTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^impl Sub<FixedOffset> for NaiveTime {$/;"	c
NaiveTimeVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    impl<'de> de::Visitor<'de> for NaiveTimeVisitor {$/;"	c	module:serde
NaiveTimeVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    struct NaiveTimeVisitor;$/;"	s	module:serde
NameOnly	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    NameOnly,$/;"	e	enum:DiffFormat
NameStatus	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    NameStatus,$/;"	e	enum:DiffFormat
NanoSecondsTimestampVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        impl<'de> de::Visitor<'de> for NanoSecondsTimestampVisitor {$/;"	c	module:serde::ts_nanoseconds
NanoSecondsTimestampVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub struct NanoSecondsTimestampVisitor;$/;"	s	module:serde
Nanos	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    Nanos,$/;"	e	enum:SecondsFormat
Nanosecond	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Nanosecond,$/;"	e	enum:Fixed
Nanosecond	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Nanosecond,$/;"	e	enum:Numeric
Nanosecond3	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Nanosecond3,$/;"	e	enum:Fixed
Nanosecond3NoDot	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Nanosecond3NoDot,$/;"	e	enum:InternalInternal
Nanosecond6	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Nanosecond6,$/;"	e	enum:Fixed
Nanosecond6NoDot	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Nanosecond6NoDot,$/;"	e	enum:InternalInternal
Nanosecond9	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Nanosecond9,$/;"	e	enum:Fixed
Nanosecond9NoDot	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Nanosecond9NoDot,$/;"	e	enum:InternalInternal
Net	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Net,$/;"	e	enum:ErrorClass
New	/home/asayers/projects/orpa/src/main.rs	/^    New,$/;"	e	enum:Status
Next	/home/asayers/projects/orpa/src/main.rs	/^    Next,$/;"	e	enum:Cmd
NoColor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/formatters.rs	/^impl ColoringFormatter for NoColor {$/;"	c
NoColor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/formatters.rs	/^pub struct NoColor;$/;"	s
NoElements	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs	/^    NoElements,$/;"	e	enum:MinMaxResult
NoLinks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    NoLinks = raw::GIT_CLONE_LOCAL_NO_LINKS as isize,$/;"	e	enum:CloneLocal
NoMemory	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    NoMemory,$/;"	e	enum:ErrorClass
NoSubscriber	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    impl Subscriber for NoSubscriber {$/;"	c	module:tests
NoSubscriber	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    struct NoSubscriber;$/;"	s	module:tests
NonExistent	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    NonExistent { timestamp: V },$/;"	e	enum:SerdeError
None	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    None,$/;"	e	enum:Pad
None	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    None,$/;"	e	enum:LocalResult
None	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    None = raw::GIT_CLONE_NO_LOCAL as isize,$/;"	e	enum:CloneLocal
None	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    None,$/;"	e	enum:DiffBinaryKind
None	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    None,$/;"	e	enum:AutotagOption
None	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    None,$/;"	e	enum:ErrorClass
None	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    None,$/;"	e	enum:StashApplyProgress
None	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    None,$/;"	e	enum:SubmoduleIgnore
None	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    None,$/;"	e	enum:FmtSpanInner
NopLayer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    impl<S: Subscriber> Layer<S> for NopLayer {}$/;"	c	module:tests
NopLayer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    struct NopLayer;$/;"	s	module:tests
NopLayer2	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    impl<S: Subscriber> Layer<S> for NopLayer2 {}$/;"	c	module:tests
NopLayer2	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    struct NopLayer2;$/;"	s	module:tests
NopSubscriber	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    impl Subscriber for NopSubscriber {$/;"	c	module:tests
NopSubscriber	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    pub(crate) struct NopSubscriber;$/;"	s	module:tests
Normal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Normal,$/;"	e	enum:FileFavor
NotEnough	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    NotEnough,$/;"	e	enum:ParseErrorKind
NotFastForward	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    NotFastForward,$/;"	e	enum:ErrorCode
NotFound	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    NotFound,$/;"	e	enum:ErrorCode
Note	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^impl<'repo> Binding for Note<'repo> {$/;"	c
Note	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^impl<'repo> Drop for Note<'repo> {$/;"	c
Note	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^impl<'repo> Note<'repo> {$/;"	c
Note	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^impl<'repo> std::fmt::Debug for Note<'repo> {$/;"	c
Note	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^pub struct Note<'repo> {$/;"	s
Notes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^impl<'repo> Binding for Notes<'repo> {$/;"	c
Notes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^impl<'repo> Drop for Notes<'repo> {$/;"	c
Notes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^impl<'repo> Iterator for Notes<'repo> {$/;"	c
Notes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^pub struct Notes<'repo> {$/;"	s
Notify	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^pub type Notify<'a> = dyn FnMut($/;"	t
November	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    November = 10,$/;"	e	enum:Month
NullCallsite	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^        impl tracing_core::callsite::Callsite for NullCallsite {$/;"	c	method:DataInner::default
NullCallsite	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^        struct NullCallsite;$/;"	s	method:DataInner::default
NumDaysFromSun	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    NumDaysFromSun,$/;"	e	enum:Numeric
Numeric	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Numeric(Numeric, Pad),$/;"	e	enum:Item
Numeric	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub enum Numeric {$/;"	g
OL_TO_MDL	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^static OL_TO_MDL: [u8; MAX_OL as usize + 1] = [$/;"	v
ONCE	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            static ONCE: Once = ONCE_INIT;$/;"	v	function:inner::mac::info
ONCE	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        static ONCE: Once = ONCE_INIT;$/;"	v	function:inner::frequency
Object	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Object,$/;"	e	enum:ErrorClass
Object	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^impl<'repo> Binding for Object<'repo> {$/;"	c
Object	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^impl<'repo> CastOrPanic for Object<'repo> {$/;"	c
Object	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^impl<'repo> Clone for Object<'repo> {$/;"	c
Object	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^impl<'repo> Drop for Object<'repo> {$/;"	c
Object	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^impl<'repo> Object<'repo> {$/;"	c
Object	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^impl<'repo> std::fmt::Debug for Object<'repo> {$/;"	c
Object	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^pub struct Object<'repo> {$/;"	s
ObjectType	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^    impl Convert<raw::git_object_t> for ObjectType {$/;"	c	module:impls
ObjectType	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl ObjectType {$/;"	c
ObjectType	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl fmt::Display for ObjectType {$/;"	c
ObjectType	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^pub enum ObjectType {$/;"	g
October	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    October = 9,$/;"	e	enum:Month
Odb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Odb,$/;"	e	enum:ErrorClass
Odb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^impl<'repo> Binding for Odb<'repo> {$/;"	c
Odb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^impl<'repo> Drop for Odb<'repo> {$/;"	c
Odb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^impl<'repo> Odb<'repo> {$/;"	c
Odb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^pub struct Odb<'repo> {$/;"	s
OdbObject	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^impl<'a> Binding for OdbObject<'a> {$/;"	c
OdbObject	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^impl<'a> Drop for OdbObject<'a> {$/;"	c
OdbObject	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^impl<'a> OdbObject<'a> {$/;"	c
OdbObject	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^pub struct OdbObject<'a> {$/;"	s
OdbPackwriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^impl<'repo> Drop for OdbPackwriter<'repo> {$/;"	c
OdbPackwriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^impl<'repo> OdbPackwriter<'repo> {$/;"	c
OdbPackwriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^impl<'repo> io::Write for OdbPackwriter<'repo> {$/;"	c
OdbPackwriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^pub struct OdbPackwriter<'repo> {$/;"	s
OdbPackwriterCb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^struct OdbPackwriterCb<'repo> {$/;"	s
OdbReader	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^impl<'repo> Binding for OdbReader<'repo> {$/;"	c
OdbReader	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^impl<'repo> Drop for OdbReader<'repo> {$/;"	c
OdbReader	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^impl<'repo> io::Read for OdbReader<'repo> {$/;"	c
OdbReader	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^pub struct OdbReader<'repo> {$/;"	s
OdbWriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^impl<'repo> Binding for OdbWriter<'repo> {$/;"	c
OdbWriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^impl<'repo> Drop for OdbWriter<'repo> {$/;"	c
OdbWriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^impl<'repo> OdbWriter<'repo> {$/;"	c
OdbWriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^impl<'repo> io::Write for OdbWriter<'repo> {$/;"	c
OdbWriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^pub struct OdbWriter<'repo> {$/;"	s
Of	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^impl Of {$/;"	c
Of	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^impl fmt::Debug for Of {$/;"	c
Of	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub struct Of(pub u32);$/;"	s
Off	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Off,$/;"	e	enum:FetchPrune
Offset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    type Offset = FixedOffset;$/;"	t	implementation:FixedOffset
Offset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    type Offset = FixedOffset;$/;"	t	implementation:Local
Offset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    type Offset: Offset;$/;"	t	interface:TimeZone
Offset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^pub trait Offset: Sized + Clone + fmt::Debug {$/;"	i
Offset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    type Offset = Utc;$/;"	t	implementation:Utc
Oid	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^impl AsRef<[u8]> for Oid {$/;"	c
Oid	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^impl Binding for Oid {$/;"	c
Oid	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^impl Eq for Oid {}$/;"	c
Oid	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^impl Hash for Oid {$/;"	c
Oid	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^impl Oid {$/;"	c
Oid	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^impl Ord for Oid {$/;"	c
Oid	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^impl PartialEq for Oid {$/;"	c
Oid	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^impl PartialOrd for Oid {$/;"	c
Oid	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^impl fmt::Debug for Oid {$/;"	c
Oid	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^impl fmt::Display for Oid {$/;"	c
Oid	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^impl str::FromStr for Oid {$/;"	c
Oid	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^pub struct Oid {$/;"	s
OidArray	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid_array.rs	/^impl Binding for OidArray {$/;"	c
OidArray	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid_array.rs	/^impl Deref for OidArray {$/;"	c
OidArray	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid_array.rs	/^impl Drop for OidArray {$/;"	c
OidArray	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid_array.rs	/^impl<'repo> std::fmt::Debug for OidArray {$/;"	c
OidArray	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid_array.rs	/^pub struct OidArray {$/;"	s
Ok	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    Ok = 0,$/;"	e	enum:TreeWalkResult
On	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    On,$/;"	e	enum:FetchPrune
OneElement	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs	/^    OneElement(T),$/;"	e	enum:MinMaxResult
Ongoing	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs	/^    Ongoing {$/;"	e	enum:CompleteState
OngoingUnknownLen	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs	/^    OngoingUnknownLen {$/;"	e	enum:PermutationState
Only	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs	/^    Only(T),$/;"	e	enum:Position
Option	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^    impl<T> Sealed for Option<T> {}$/;"	c	module:private
Option	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^impl<T> Context<T, Infallible> for Option<T> {$/;"	c
Option	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^    impl Convert<raw::git_branch_t> for Option<BranchType> {$/;"	c	module:impls
Option	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^    impl Convert<raw::git_object_t> for Option<ObjectType> {$/;"	c	module:impls
Option	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^    impl<T, U: Convert<*const T>> Convert<*const T> for Option<U> {$/;"	c	module:impls
Option	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^    impl<T, U: Convert<*mut T>> Convert<*mut T> for Option<U> {$/;"	c	module:impls
Option	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^impl<L, S> Layer<S> for Option<L>$/;"	c
OptionMilliSecondsTimestampVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        impl<'de> de::Visitor<'de> for OptionMilliSecondsTimestampVisitor {$/;"	c	module:serde::ts_milliseconds_option
OptionMilliSecondsTimestampVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        struct OptionMilliSecondsTimestampVisitor;$/;"	s	module:serde::ts_milliseconds_option
OptionNanoSecondsTimestampVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        impl<'de> de::Visitor<'de> for OptionNanoSecondsTimestampVisitor {$/;"	c	module:serde::ts_nanoseconds_option
OptionNanoSecondsTimestampVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        struct OptionNanoSecondsTimestampVisitor;$/;"	s	module:serde::ts_nanoseconds_option
OptionSecondsTimestampVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        impl<'de> de::Visitor<'de> for OptionSecondsTimestampVisitor {$/;"	c	module:serde::ts_seconds_option
OptionSecondsTimestampVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        struct OptionSecondsTimestampVisitor;$/;"	s	module:serde::ts_seconds_option
Opts	/home/asayers/projects/orpa/src/main.rs	/^struct Opts {$/;"	s
Ordinal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Ordinal,$/;"	e	enum:Numeric
Os	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Os,$/;"	e	enum:ErrorClass
OsStr	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^impl<'a> IntoCString for &'a OsStr {$/;"	c
OsString	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^impl IntoCString for OsString {$/;"	c
Other	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    Other,$/;"	e	enum:ParseErrorKind
Ours	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Ours,$/;"	e	enum:FileFavor
Ours	/home/asayers/projects/orpa/src/main.rs	/^    Ours,$/;"	e	enum:Status
Out	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs	/^    type Out = Result<U, E>;$/;"	t
Out	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs	/^    type Out = U;$/;"	t	implementation:MapSpecialCaseFnInto
Out	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs	/^    type Out;$/;"	t	interface:MapSpecialCaseFn
OutOfRange	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    OutOfRange,$/;"	e	enum:ParseErrorKind
OutOfRangeError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^impl Error for OutOfRangeError {$/;"	c
OutOfRangeError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^impl fmt::Display for OutOfRangeError {$/;"	c
OutOfRangeError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^pub struct OutOfRangeError(());$/;"	s
OutOfRangeError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^impl Error for OutOfRangeError {$/;"	c
OutOfRangeError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^impl fmt::Display for OutOfRangeError {$/;"	c
OutOfRangeError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^pub struct OutOfRangeError(());$/;"	s
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    type Output = Date<Tz>;$/;"	t	implementation:Date
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    type Output = OldDuration;$/;"	t	implementation:Date
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    type Output = DateTime<Tz>;$/;"	t	implementation:DateTime
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    type Output = OldDuration;$/;"	t	implementation:DateTime
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    type Output = NaiveDate;$/;"	t	implementation:NaiveDate
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    type Output = OldDuration;$/;"	t	implementation:NaiveDate
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    type Output = NaiveDateTime;$/;"	t	implementation:NaiveDateTime
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    type Output = OldDuration;$/;"	t	implementation:NaiveDateTime
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    type Output = NaiveTime;$/;"	t	implementation:NaiveTime
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    type Output = OldDuration;$/;"	t	implementation:NaiveTime
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    type Output = DateTime<Tz>;$/;"	t	implementation:DateTime
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    type Output = NaiveDateTime;$/;"	t	implementation:NaiveDateTime
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    type Output = NaiveTime;$/;"	t	implementation:NaiveTime
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    type Output = Duration;$/;"	t	implementation:Duration
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lazy_buffer.rs	/^    type Output = <Vec<I::Item> as Index<J>>::Output;$/;"	t
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    type Output = Duration;$/;"	t	implementation:Duration
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    type Output = Duration;$/;"	t	implementation:SteadyTime
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    type Output = Duration;$/;"	t	implementation:Timespec
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    type Output = Duration;$/;"	t	implementation:Tm
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    type Output = SteadyTime;$/;"	t	implementation:SteadyTime
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    type Output = Timespec;$/;"	t	implementation:Timespec
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    type Output = Tm;$/;"	t	implementation:Tm
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            type Output = Duration;$/;"	t	implementation:inner::mac::SteadyTime
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            type Output = Duration;$/;"	t	implementation:inner::unix::SteadyTime
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            type Output = SteadyTime;$/;"	t	implementation:inner::mac::SteadyTime
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            type Output = SteadyTime;$/;"	t	implementation:inner::unix::SteadyTime
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        type Output = Duration;$/;"	t	implementation:inner::SteadyTime
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        type Output = SteadyTime;$/;"	t	implementation:inner::SteadyTime
Output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/instrument.rs	/^    type Output = T::Output;$/;"	t	implementation:Instrumented
Overflow	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs	/^    Overflow,$/;"	e	enum:CompleteStateRemaining
Own	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^impl<T> Clone for Own<T> {$/;"	c
Own	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^impl<T> Copy for Own<T> {}$/;"	c
Own	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^impl<T> Own<T> {$/;"	c
Own	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^pub struct Own<T> {$/;"	s
Own	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^unsafe impl<T> Send for Own<T> {}$/;"	c
Own	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^unsafe impl<T> Sync for Own<T> {}$/;"	c
Owned	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/indexer.rs	/^    Owned(raw::git_indexer_progress),$/;"	e	enum:ProgressState
OwnedLiteral	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    OwnedLiteral(Box<str>),$/;"	e	enum:Item
OwnedSpace	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    OwnedSpace(Box<str>),$/;"	e	enum:Item
PackBuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^impl<'repo> Binding for PackBuilder<'repo> {$/;"	c
PackBuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^impl<'repo> Drop for PackBuilder<'repo> {$/;"	c
PackBuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^impl<'repo> PackBuilder<'repo> {$/;"	c
PackBuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^pub struct PackBuilder<'repo> {$/;"	s
PackBuilderStage	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^impl Binding for PackBuilderStage {$/;"	c
PackBuilderStage	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^pub enum PackBuilderStage {$/;"	g
PackProgress	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^pub type PackProgress<'a> = dyn FnMut(PackBuilderStage, usize, usize) + 'a;$/;"	t
Pad	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub enum Pad {$/;"	g
PadUsing	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/pad_tail.rs	/^impl<I, F> DoubleEndedIterator for PadUsing<I, F>$/;"	c
PadUsing	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/pad_tail.rs	/^impl<I, F> ExactSizeIterator for PadUsing<I, F>$/;"	c
PadUsing	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/pad_tail.rs	/^impl<I, F> Iterator for PadUsing<I, F>$/;"	c
PadUsing	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/pad_tail.rs	/^pub struct PadUsing<I, F> {$/;"	s
ParentIds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^impl<'commit> DoubleEndedIterator for ParentIds<'commit> {$/;"	c
ParentIds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^impl<'commit> ExactSizeIterator for ParentIds<'commit> {}$/;"	c
ParentIds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^impl<'commit> Iterator for ParentIds<'commit> {$/;"	c
ParentIds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^pub struct ParentIds<'commit> {$/;"	s
Parents	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^impl<'repo, 'commit> DoubleEndedIterator for Parents<'commit, 'repo> {$/;"	c
Parents	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^impl<'repo, 'commit> ExactSizeIterator for Parents<'commit, 'repo> {}$/;"	c
Parents	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^impl<'repo, 'commit> Iterator for Parents<'commit, 'repo> {$/;"	c
Parents	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^pub struct Parents<'commit, 'repo> {$/;"	s
Parents	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^impl<'a, R> Iterator for Parents<'a, R>$/;"	c
Parents	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^pub struct Parents<'a, R> {$/;"	s
Parse	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    Parse(ParseError),$/;"	e	enum:ErrorKind
ParseError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^impl Error for ParseError {$/;"	c
ParseError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^impl fmt::Display for ParseError {$/;"	c
ParseError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub struct ParseError(ParseErrorKind);$/;"	s
ParseError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl Error for ParseError {$/;"	c
ParseError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl fmt::Display for ParseError {$/;"	c
ParseError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub enum ParseError {$/;"	g
ParseError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^impl Error for ParseError {$/;"	c
ParseError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^impl From<Box<dyn Error + Send + Sync>> for ParseError {$/;"	c
ParseError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^impl From<level::ParseError> for ParseError {$/;"	c
ParseError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^impl ParseError {$/;"	c
ParseError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^impl fmt::Display for ParseError {$/;"	c
ParseError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^pub struct ParseError {$/;"	s
ParseErrorKind	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^enum ParseErrorKind {$/;"	g
ParseErrorKind	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^enum ParseErrorKind {$/;"	g
ParseMonthError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^impl fmt::Debug for ParseMonthError {$/;"	c
ParseMonthError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub struct ParseMonthError {$/;"	s
ParseResult	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub type ParseResult<T> = Result<T, ParseError>;$/;"	t
ParseWeekdayError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^impl fmt::Debug for ParseWeekdayError {$/;"	c
ParseWeekdayError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub struct ParseWeekdayError {$/;"	s
Parsed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^impl Default for Parsed {$/;"	c
Parsed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^impl Parsed {$/;"	c
Parsed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^pub struct Parsed {$/;"	s
Pat	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    Pat(Box<MatchPattern>),$/;"	e	enum:ValueMatch
Patch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Patch,$/;"	e	enum:DiffFormat
Patch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Patch,$/;"	e	enum:ErrorClass
Patch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/patch.rs	/^impl<'buffers> Binding for Patch<'buffers> {$/;"	c
Patch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/patch.rs	/^impl<'buffers> Drop for Patch<'buffers> {$/;"	c
Patch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/patch.rs	/^impl<'buffers> Patch<'buffers> {$/;"	c
Patch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/patch.rs	/^impl<'buffers> std::fmt::Debug for Patch<'buffers> {$/;"	c
Patch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/patch.rs	/^pub struct Patch<'buffers> {$/;"	s
Patch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/patch.rs	/^unsafe impl<'buffers> Send for Patch<'buffers> {}$/;"	c
PatchHeader	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    PatchHeader,$/;"	e	enum:DiffFormat
PatchId	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    PatchId,$/;"	e	enum:DiffFormat
Path	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^impl<'a> IntoCString for &'a Path {$/;"	c
PathBuf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^impl IntoCString for PathBuf {$/;"	c
Pathspec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^impl Binding for Pathspec {$/;"	c
Pathspec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^impl Drop for Pathspec {$/;"	c
Pathspec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^impl Pathspec {$/;"	c
Pathspec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^pub struct Pathspec {$/;"	s
PathspecDiffEntries	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^impl<'list> DoubleEndedIterator for PathspecDiffEntries<'list> {$/;"	c
PathspecDiffEntries	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^impl<'list> ExactSizeIterator for PathspecDiffEntries<'list> {}$/;"	c
PathspecDiffEntries	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^impl<'list> Iterator for PathspecDiffEntries<'list> {$/;"	c
PathspecDiffEntries	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^pub struct PathspecDiffEntries<'list> {$/;"	s
PathspecEntries	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^impl<'list> DoubleEndedIterator for PathspecEntries<'list> {$/;"	c
PathspecEntries	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^impl<'list> ExactSizeIterator for PathspecEntries<'list> {}$/;"	c
PathspecEntries	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^impl<'list> Iterator for PathspecEntries<'list> {$/;"	c
PathspecEntries	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^pub struct PathspecEntries<'list> {$/;"	s
PathspecFailedEntries	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^impl<'list> DoubleEndedIterator for PathspecFailedEntries<'list> {$/;"	c
PathspecFailedEntries	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^impl<'list> ExactSizeIterator for PathspecFailedEntries<'list> {}$/;"	c
PathspecFailedEntries	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^impl<'list> Iterator for PathspecFailedEntries<'list> {$/;"	c
PathspecFailedEntries	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^pub struct PathspecFailedEntries<'list> {$/;"	s
PathspecFlags	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl Default for PathspecFlags {$/;"	c
PathspecFlags	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl PathspecFlags {$/;"	c
PathspecMatchList	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^impl<'ps> Binding for PathspecMatchList<'ps> {$/;"	c
PathspecMatchList	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^impl<'ps> Drop for PathspecMatchList<'ps> {$/;"	c
PathspecMatchList	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^impl<'ps> PathspecMatchList<'ps> {$/;"	c
PathspecMatchList	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^pub struct PathspecMatchList<'ps> {$/;"	s
PeekNth	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs	/^impl<I> ExactSizeIterator for PeekNth<I> where I: ExactSizeIterator {}$/;"	c
PeekNth	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs	/^impl<I> Iterator for PeekNth<I>$/;"	c
PeekNth	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs	/^impl<I> PeekNth<I>$/;"	c
PeekNth	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs	/^impl<I> PeekingNext for PeekNth<I>$/;"	c
PeekNth	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs	/^pub struct PeekNth<I>$/;"	s
Peekable	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs	/^impl<I> PeekingNext for Peekable<I>$/;"	c
PeekingNext	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs	/^pub trait PeekingNext : Iterator {$/;"	i
PeekingTakeWhile	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs	/^impl<'a, I, F> Iterator for PeekingTakeWhile<'a, I, F>$/;"	c
PeekingTakeWhile	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs	/^pub struct PeekingTakeWhile<'a, I: 'a, F>$/;"	s
Peel	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Peel,$/;"	e	enum:ErrorCode
PermutationState	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs	/^enum PermutationState {$/;"	g
Permutations	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs	/^impl<I> Clone for Permutations<I>$/;"	c
Permutations	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs	/^impl<I> Iterator for Permutations<I>$/;"	c
Permutations	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs	/^impl<I> Permutations<I>$/;"	c
Permutations	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs	/^impl<I> fmt::Debug for Permutations<I>$/;"	c
Permutations	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs	/^pub struct Permutations<I: Iterator> {$/;"	s
Pick	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    Pick,$/;"	e	enum:RebaseOperationType
Poisoned	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^    Poisoned,$/;"	e	enum:ErrorKind
Position	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs	/^impl<T> Position<T> {$/;"	c
Position	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs	/^pub enum Position<T> {$/;"	g
Positions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^impl<I, F> DoubleEndedIterator for Positions<I, F>$/;"	c
Positions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^impl<I, F> Iterator for Positions<I, F>$/;"	c
Positions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub struct Positions<I, F> {$/;"	s
PostOrder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    PostOrder = 1,$/;"	e	enum:TreeWalkMode
Powerset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/powerset.rs	/^impl<I> Clone for Powerset<I>$/;"	c
Powerset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/powerset.rs	/^impl<I> Iterator for Powerset<I>$/;"	c
Powerset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/powerset.rs	/^impl<I> fmt::Debug for Powerset<I>$/;"	c
Powerset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/powerset.rs	/^pub struct Powerset<I: Iterator> {$/;"	s
PreOrder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    PreOrder = 0,$/;"	e	enum:TreeWalkMode
PreciseTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl PreciseTime {$/;"	c
PreciseTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub struct PreciseTime(u64);$/;"	s
Pretty	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^impl Default for Pretty {$/;"	c
Pretty	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^impl Pretty {$/;"	c
Pretty	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^impl<'writer> FormatFields<'writer> for Pretty {$/;"	c
Pretty	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^pub struct Pretty {$/;"	s
PrettyVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^impl<'a> PrettyVisitor<'a> {$/;"	c
PrettyVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^impl<'a> VisitFmt for PrettyVisitor<'a> {$/;"	c
PrettyVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^impl<'a> VisitOutput<fmt::Result> for PrettyVisitor<'a> {$/;"	c
PrettyVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^impl<'a> field::Visit for PrettyVisitor<'a> {$/;"	c
PrettyVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^impl<'a> fmt::Debug for PrettyVisitor<'a> {$/;"	c
PrettyVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^pub struct PrettyVisitor<'a> {$/;"	s
PrintCb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^type PrintCb<'a> = dyn FnMut(DiffDelta<'_>, Option<DiffHunk<'_>>, DiffLine<'_>) -> bool + 'a;$/;"	t
ProcessResults	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs	/^impl<'a, I, T, E> Iterator for ProcessResults<'a, I, E>$/;"	c
ProcessResults	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs	/^pub struct ProcessResults<'a, I, E: 'a> {$/;"	s
Product	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^impl<I, J> Iterator for Product<I, J>$/;"	c
Product	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub struct Product<I, J>$/;"	s
ProgramData	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    ProgramData,$/;"	e	enum:ConfigLevel
Progress	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^pub type Progress<'a> = dyn FnMut(Option<&Path>, usize, usize) + 'a;$/;"	t
Progress	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/indexer.rs	/^impl<'a> Binding for Progress<'a> {$/;"	c
Progress	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/indexer.rs	/^impl<'a> Progress<'a> {$/;"	c
Progress	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/indexer.rs	/^pub struct Progress<'a> {$/;"	s
ProgressCb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^pub type ProgressCb<'a> = dyn FnMut(PackBuilderStage, u32, u32) -> bool + 'a;$/;"	t
ProgressState	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/indexer.rs	/^pub(crate) enum ProgressState {$/;"	g
ProxyOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/proxy_options.rs	/^impl<'a> Binding for ProxyOptions<'a> {$/;"	c
ProxyOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/proxy_options.rs	/^impl<'a> ProxyOptions<'a> {$/;"	c
ProxyOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/proxy_options.rs	/^pub struct ProxyOptions<'a> {$/;"	s
Push	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Push,$/;"	e	enum:Direction
PushOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^impl<'cb> Binding for PushOptions<'cb> {$/;"	c
PushOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^impl<'cb> Default for PushOptions<'cb> {$/;"	c
PushOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^impl<'cb> PushOptions<'cb> {$/;"	c
PushOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^pub struct PushOptions<'cb> {$/;"	s
PushTransferProgress	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^pub type PushTransferProgress<'a> = dyn FnMut(usize, usize, usize) + 'a;$/;"	t
PushUpdateReference	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^pub type PushUpdateReference<'a> = dyn FnMut(&str, Option<&str>) -> Result<(), Error> + 'a;$/;"	t
PutBack	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^impl<I> Iterator for PutBack<I>$/;"	c
PutBack	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^impl<I> PutBack<I>$/;"	c
PutBack	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub struct PutBack<I>$/;"	s
PutBack	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs	/^impl<I> PeekingNext for PutBack<I>$/;"	c
PutBackN	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs	/^impl<I> PeekingNext for PutBackN<I>$/;"	c
PutBackN	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs	/^impl<I: Iterator> Iterator for PutBackN<I> {$/;"	c
PutBackN	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs	/^impl<I: Iterator> PutBackN<I> {$/;"	c
PutBackN	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs	/^pub struct PutBackN<I: Iterator> {$/;"	s
Quoted	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^impl Write for Quoted<&mut fmt::Formatter<'_>> {$/;"	c
Quoted	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^impl<C> Debug for Quoted<C>$/;"	c
Quoted	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^struct Quoted<C>(C);$/;"	s
RFC2822	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    RFC2822,$/;"	e	enum:Fixed
RFC3339	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    RFC3339,$/;"	e	enum:Fixed
RFC850_FMT	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    static RFC850_FMT: &'static str = "%A, %d-%b-%y %T GMT";$/;"	v	function:parse_rfc850
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/apply.rs	/^    type Raw = raw::git_apply_location_t;$/;"	t	implementation:ApplyLocation
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    type Raw = *mut raw::git_blame;$/;"	t	implementation:Blame
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    type Raw = *mut raw::git_blame_hunk;$/;"	t	implementation:BlameHunk
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    type Raw = *mut raw::git_blame_options;$/;"	t	implementation:BlameOptions
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^    type Raw = *mut raw::git_blob;$/;"	t	implementation:Blob
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^    type Raw = *mut raw::git_writestream;$/;"	t	implementation:BlobWriter
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/buf.rs	/^    type Raw = *mut raw::git_buf;$/;"	t	implementation:Buf
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cert.rs	/^    type Raw = *mut raw::git_cert;$/;"	t	implementation:Cert
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    type Raw = *mut raw::git_commit;$/;"	t	implementation:Commit
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    type Raw = *mut raw::git_config;$/;"	t	implementation:Config
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    type Raw = *mut raw::git_config_entry;$/;"	t	implementation:ConfigEntry
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    type Raw = *mut raw::git_config_iterator;$/;"	t	implementation:ConfigEntries
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    type Raw = *mut raw::git_cred;$/;"	t	implementation:Cred
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^    type Raw = *mut raw::git_describe_options;$/;"	t	implementation:DescribeOptions
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^    type Raw = *mut raw::git_describe_result;$/;"	t	implementation:Describe
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    type Raw = *const raw::git_diff_binary;$/;"	t	implementation:DiffBinary
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    type Raw = *const raw::git_diff_binary_file;$/;"	t	implementation:DiffBinaryFile
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    type Raw = *const raw::git_diff_file;$/;"	t	implementation:DiffFile
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    type Raw = *const raw::git_diff_hunk;$/;"	t	implementation:DiffHunk
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    type Raw = *const raw::git_diff_line;$/;"	t	implementation:DiffLine
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    type Raw = *mut raw::git_diff;$/;"	t	implementation:Diff
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    type Raw = *mut raw::git_diff_delta;$/;"	t	implementation:DiffDelta
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    type Raw = *mut raw::git_diff_stats;$/;"	t	implementation:DiffStats
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    type Raw = raw::git_diff_binary_t;$/;"	t	implementation:DiffBinaryKind
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    type Raw = *mut raw::git_index;$/;"	t	implementation:Index
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    type Raw = *mut raw::git_index_conflict_iterator;$/;"	t	implementation:IndexConflicts
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    type Raw = raw::git_index_entry;$/;"	t	implementation:IndexEntry
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/indexer.rs	/^    type Raw = *const raw::git_indexer_progress;$/;"	t	implementation:Progress
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Raw,$/;"	e	enum:DiffFormat
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/mempack.rs	/^    type Raw = *mut raw::git_odb_backend;$/;"	t	implementation:Mempack
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    type Raw = *mut raw::git_annotated_commit;$/;"	t	implementation:AnnotatedCommit
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^    type Raw = *mut raw::git_note;$/;"	t	implementation:Note
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^    type Raw = *mut raw::git_note_iterator;$/;"	t	implementation:Notes
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    type Raw = *mut raw::git_object;$/;"	t	implementation:Object
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    type Raw = *mut raw::git_odb;$/;"	t	implementation:Odb
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    type Raw = *mut raw::git_odb_object;$/;"	t	implementation:OdbObject
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    type Raw = *mut raw::git_odb_stream;$/;"	t	implementation:OdbReader
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    type Raw = *mut raw::git_odb_stream;$/;"	t	implementation:OdbWriter
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^    type Raw = *const raw::git_oid;$/;"	t	implementation:Oid
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid_array.rs	/^    type Raw = raw::git_oidarray;$/;"	t	implementation:OidArray
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    type Raw = *mut raw::git_packbuilder;$/;"	t	implementation:PackBuilder
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    type Raw = raw::git_packbuilder_stage_t;$/;"	t	implementation:PackBuilderStage
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/patch.rs	/^    type Raw = *mut raw::git_patch;$/;"	t	implementation:Patch
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    type Raw = *mut raw::git_pathspec;$/;"	t	implementation:Pathspec
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    type Raw = *mut raw::git_pathspec_match_list;$/;"	t	implementation:PathspecMatchList
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/proxy_options.rs	/^    type Raw = raw::git_proxy_options;$/;"	t	implementation:ProxyOptions
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    type Raw = *const raw::git_rebase_operation;$/;"	t	implementation:RebaseOperation
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    type Raw = *mut raw::git_rebase;$/;"	t	implementation:Rebase
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    type Raw = *mut raw::git_reference;$/;"	t	implementation:Reference
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    type Raw = *mut raw::git_reference_iterator;$/;"	t	implementation:References
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    type Raw = *const raw::git_reflog_entry;$/;"	t	implementation:ReflogEntry
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    type Raw = *mut raw::git_reflog;$/;"	t	implementation:Reflog
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/refspec.rs	/^    type Raw = *const raw::git_refspec;$/;"	t	implementation:Refspec
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    type Raw = *mut raw::git_remote;$/;"	t	implementation:Remote
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    type Raw = raw::git_fetch_options;$/;"	t	implementation:FetchOptions
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    type Raw = raw::git_push_options;$/;"	t	implementation:PushOptions
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^    type Raw = raw::git_remote_callbacks;$/;"	t	implementation:RemoteCallbacks
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    type Raw = *mut raw::git_repository;$/;"	t	implementation:Repository
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revwalk.rs	/^    type Raw = *mut raw::git_revwalk;$/;"	t	implementation:Revwalk
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/signature.rs	/^    type Raw = *mut raw::git_signature;$/;"	t	implementation:Signature
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    type Raw = *const raw::git_status_entry;$/;"	t	implementation:StatusEntry
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    type Raw = *mut raw::git_status_list;$/;"	t	implementation:Statuses
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^    type Raw = raw::git_strarray;$/;"	t	implementation:StringArray
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    type Raw = *mut raw::git_submodule;$/;"	t	implementation:Submodule
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^    type Raw = *mut raw::git_tag;$/;"	t	implementation:Tag
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^    type Raw = raw::git_index_time;$/;"	t	implementation:IndexTime
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^    type Raw = raw::git_time;$/;"	t	implementation:Time
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    type Raw = *mut raw::git_tree;$/;"	t	implementation:Tree
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    type Raw = *mut raw::git_tree_entry;$/;"	t	implementation:TreeEntry
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/treebuilder.rs	/^    type Raw = *mut raw::git_treebuilder;$/;"	t	implementation:TreeBuilder
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^    type Raw;$/;"	t	interface:Binding
Raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    type Raw = *mut raw::git_worktree;$/;"	t	implementation:Worktree
RawSmartSubtransport	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^struct RawSmartSubtransport {$/;"	s
RawSmartSubtransportStream	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^struct RawSmartSubtransportStream {$/;"	s
RcIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs	/^impl<'a, I> IntoIterator for &'a RcIter<I>$/;"	c
RcIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs	/^impl<A, I> Iterator for RcIter<I>$/;"	c
RcIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs	/^impl<I> Clone for RcIter<I> {$/;"	c
RcIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs	/^impl<I> DoubleEndedIterator for RcIter<I>$/;"	c
RcIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs	/^pub struct RcIter<I> {$/;"	s
Rebase	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Rebase,$/;"	e	enum:ErrorClass
Rebase	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Rebase,$/;"	e	enum:RepositoryState
Rebase	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^impl<'rebase> Iterator for Rebase<'rebase> {$/;"	c
Rebase	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^impl<'repo> Binding for Rebase<'repo> {$/;"	c
Rebase	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^impl<'repo> Drop for Rebase<'repo> {$/;"	c
Rebase	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^impl<'repo> Rebase<'repo> {$/;"	c
Rebase	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^pub struct Rebase<'repo> {$/;"	s
RebaseInteractive	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    RebaseInteractive,$/;"	e	enum:RepositoryState
RebaseMerge	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    RebaseMerge,$/;"	e	enum:RepositoryState
RebaseOperation	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^impl<'rebase> Binding for RebaseOperation<'rebase> {$/;"	c
RebaseOperation	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^impl<'rebase> RebaseOperation<'rebase> {$/;"	c
RebaseOperation	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^pub struct RebaseOperation<'rebase> {$/;"	s
RebaseOperationType	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^impl RebaseOperationType {$/;"	c
RebaseOperationType	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^pub enum RebaseOperationType {$/;"	g
RebaseOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^impl<'cb> Default for RebaseOptions<'cb> {$/;"	c
RebaseOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^impl<'cb> RebaseOptions<'cb> {$/;"	c
RebaseOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^pub struct RebaseOptions<'cb> {$/;"	s
ReceivePack	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^    ReceivePack,$/;"	e	enum:Service
ReceivePackLs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^    ReceivePackLs,$/;"	e	enum:Service
Record	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^impl<'a> RecordFields for Record<'a> {$/;"	c
Record	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^impl<'a> crate::sealed::Sealed<RecordFieldsMarker> for Record<'a> {}$/;"	c
RecordFields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^pub trait RecordFields: crate::sealed::Sealed<RecordFieldsMarker> {$/;"	i
RecordFieldsMarker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^pub struct RecordFieldsMarker {$/;"	s
Red	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    Red,$/;"	e	enum:Color
Ref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^impl<'a, T> Clone for Ref<'a, T> {$/;"	c
Ref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^impl<'a, T> Copy for Ref<'a, T> {}$/;"	c
Ref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^impl<'a, T> Ref<'a, T> {$/;"	c
Ref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^pub struct Ref<'a, T> {$/;"	s
Refdb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^struct Refdb<'repo>(&'repo Repository);$/;"	s
Reference	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Reference,$/;"	e	enum:ErrorClass
Reference	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^impl<'repo> Binding for Reference<'repo> {$/;"	c
Reference	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^impl<'repo> Drop for Reference<'repo> {$/;"	c
Reference	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^impl<'repo> Eq for Reference<'repo> {}$/;"	c
Reference	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^impl<'repo> Ord for Reference<'repo> {$/;"	c
Reference	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^impl<'repo> PartialEq for Reference<'repo> {$/;"	c
Reference	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^impl<'repo> PartialOrd for Reference<'repo> {$/;"	c
Reference	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^impl<'repo> Reference<'repo> {$/;"	c
Reference	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^pub struct Reference<'repo> {$/;"	s
ReferenceFormat	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl Default for ReferenceFormat {$/;"	c
ReferenceFormat	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl ReferenceFormat {$/;"	c
ReferenceNames	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^impl<'repo, 'references> Iterator for ReferenceNames<'repo, 'references> {$/;"	c
ReferenceNames	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^pub struct ReferenceNames<'repo, 'references> {$/;"	s
ReferenceType	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl ReferenceType {$/;"	c
ReferenceType	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl fmt::Display for ReferenceType {$/;"	c
ReferenceType	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^pub enum ReferenceType {$/;"	g
References	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^impl<'repo> Binding for References<'repo> {$/;"	c
References	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^impl<'repo> Drop for References<'repo> {$/;"	c
References	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^impl<'repo> Iterator for References<'repo> {$/;"	c
References	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^impl<'repo> References<'repo> {$/;"	c
References	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^pub struct References<'repo> {$/;"	s
Reflog	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^impl Binding for Reflog {$/;"	c
Reflog	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^impl Drop for Reflog {$/;"	c
Reflog	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^impl Reflog {$/;"	c
Reflog	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^pub struct Reflog {$/;"	s
ReflogEntry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^impl<'reflog> Binding for ReflogEntry<'reflog> {$/;"	c
ReflogEntry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^impl<'reflog> ReflogEntry<'reflog> {$/;"	c
ReflogEntry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^pub struct ReflogEntry<'reflog> {$/;"	s
ReflogIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^impl<'reflog> DoubleEndedIterator for ReflogIter<'reflog> {$/;"	c
ReflogIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^impl<'reflog> ExactSizeIterator for ReflogIter<'reflog> {}$/;"	c
ReflogIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^impl<'reflog> Iterator for ReflogIter<'reflog> {$/;"	c
ReflogIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^pub struct ReflogIter<'reflog> {$/;"	s
Refspec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/refspec.rs	/^impl<'remote> Binding for Refspec<'remote> {$/;"	c
Refspec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/refspec.rs	/^impl<'remote> Refspec<'remote> {$/;"	c
Refspec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/refspec.rs	/^pub struct Refspec<'remote> {$/;"	s
Refspecs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^impl<'repo> DoubleEndedIterator for Refspecs<'repo> {$/;"	c
Refspecs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^impl<'repo> ExactSizeIterator for Refspecs<'repo> {}$/;"	c
Refspecs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^impl<'repo> Iterator for Refspecs<'repo> {$/;"	c
Refspecs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^pub struct Refspecs<'remote> {$/;"	s
Regex	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Regex,$/;"	e	enum:ErrorClass
Registry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^impl Default for Registry {$/;"	c
Registry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^impl Registry {$/;"	c
Registry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^impl Subscriber for Registry {$/;"	c
Registry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^impl<'a> LookupSpan<'a> for Registry {$/;"	c
Registry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^pub struct Registry {$/;"	s
Remote	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Remote,$/;"	e	enum:BranchType
Remote	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^impl<'repo> Binding for Remote<'repo> {$/;"	c
Remote	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^impl<'repo> Clone for Remote<'repo> {$/;"	c
Remote	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^impl<'repo> Drop for Remote<'repo> {$/;"	c
Remote	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^impl<'repo> Remote<'repo> {$/;"	c
Remote	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^pub struct Remote<'repo> {$/;"	s
RemoteCallbacks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^impl<'a> Binding for RemoteCallbacks<'a> {$/;"	c
RemoteCallbacks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^impl<'a> Default for RemoteCallbacks<'a> {$/;"	c
RemoteCallbacks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^impl<'a> RemoteCallbacks<'a> {$/;"	c
RemoteCallbacks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^pub struct RemoteCallbacks<'a> {$/;"	s
RemoteConnection	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^impl<'repo, 'connection, 'cb> Drop for RemoteConnection<'repo, 'connection, 'cb> {$/;"	c
RemoteConnection	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^impl<'repo, 'connection, 'cb> RemoteConnection<'repo, 'connection, 'cb> {$/;"	c
RemoteConnection	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^pub struct RemoteConnection<'repo, 'connection, 'cb> {$/;"	s
RemoteCreate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^pub type RemoteCreate<'cb> =$/;"	t
RemoteHead	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^impl<'remote> RemoteHead<'remote> {$/;"	c
RemoteHead	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^pub struct RemoteHead<'remote> {$/;"	s
Renamed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Renamed,$/;"	e	enum:Delta
RepeatCall	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs	/^impl<A, F> Iterator for RepeatCall<F>$/;"	c
RepeatCall	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs	/^impl<F> fmt::Debug for RepeatCall<F>$/;"	c
RepeatCall	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs	/^pub struct RepeatCall<F> {$/;"	s
RepeatN	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/repeatn.rs	/^impl<A> DoubleEndedIterator for RepeatN<A>$/;"	c
RepeatN	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/repeatn.rs	/^impl<A> ExactSizeIterator for RepeatN<A>$/;"	c
RepeatN	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/repeatn.rs	/^impl<A> Iterator for RepeatN<A>$/;"	c
RepeatN	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/repeatn.rs	/^pub struct RepeatN<A> {$/;"	s
RepoBuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^impl<'cb> Default for RepoBuilder<'cb> {$/;"	c
RepoBuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^impl<'cb> RepoBuilder<'cb> {$/;"	c
RepoBuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^pub struct RepoBuilder<'cb> {$/;"	s
Repository	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Repository,$/;"	e	enum:ErrorClass
Repository	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^impl Binding for Repository {$/;"	c
Repository	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^impl Drop for Repository {$/;"	c
Repository	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^impl Repository {$/;"	c
Repository	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^pub struct Repository {$/;"	s
Repository	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^unsafe impl Send for Repository {}$/;"	c
RepositoryInitMode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl RepositoryInitMode {$/;"	c
RepositoryInitOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^impl RepositoryInitOptions {$/;"	c
RepositoryInitOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^pub struct RepositoryInitOptions {$/;"	s
RepositoryOpenFlags	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl RepositoryOpenFlags {$/;"	c
RepositoryState	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^pub enum RepositoryState {$/;"	g
ResetType	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^    impl Convert<raw::git_reset_t> for ResetType {$/;"	c	module:impls
ResetType	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^pub enum ResetType {$/;"	g
Result	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^    impl<T, E> Sealed for Result<T, E> where E: ext::StdError {}$/;"	c	module:private
Result	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^impl<T, E> Context<T, E> for Result<T, E>$/;"	c
Result	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/lib.rs	/^pub type Result<T, E = Error> = core::result::Result<T, E>;$/;"	t
Result	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^impl FormatTime for fn(&mut dyn fmt::Write) -> fmt::Result {$/;"	c
Reversed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^    Reversed,$/;"	e	enum:Styles
Revert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Revert,$/;"	e	enum:ErrorClass
Revert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Revert,$/;"	e	enum:RepositoryState
RevertOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revert.rs	/^impl<'cb> RevertOptions<'cb> {$/;"	c
RevertOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revert.rs	/^pub struct RevertOptions<'cb> {$/;"	s
RevertSequence	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    RevertSequence,$/;"	e	enum:RepositoryState
Review	/home/asayers/projects/orpa/src/main.rs	/^    Review {$/;"	e	enum:Cmd
Reviewed	/home/asayers/projects/orpa/src/main.rs	/^    Reviewed,$/;"	e	enum:Status
RevparseMode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl RevparseMode {$/;"	c
Revspec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revspec.rs	/^impl<'repo> Revspec<'repo> {$/;"	c
Revspec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revspec.rs	/^pub struct Revspec<'repo> {$/;"	s
Revwalk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revwalk.rs	/^impl<'repo> Binding for Revwalk<'repo> {$/;"	c
Revwalk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revwalk.rs	/^impl<'repo> Drop for Revwalk<'repo> {$/;"	c
Revwalk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revwalk.rs	/^impl<'repo> Iterator for Revwalk<'repo> {$/;"	c
Revwalk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revwalk.rs	/^impl<'repo> Revwalk<'repo> {$/;"	c
Revwalk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revwalk.rs	/^pub struct Revwalk<'repo> {$/;"	s
Reword	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    Reword,$/;"	e	enum:RebaseOperationType
Rfc3339	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    Rfc3339,$/;"	e	enum:Fmt
Rfc3339	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^    Rfc3339,$/;"	e	enum:ChronoFmtType
Right	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs	/^    Right(B),$/;"	e	enum:EitherOrBoth
RoundingError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^impl fmt::Display for RoundingError {$/;"	c
RoundingError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^impl std::error::Error for RoundingError {$/;"	c
RoundingError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^pub enum RoundingError {$/;"	g
RwLock	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/sync.rs	/^    impl<T> RwLock<T> {$/;"	c	module:parking_lot_impl
RwLock	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/sync.rs	/^    pub(crate) struct RwLock<T> {$/;"	s	module:parking_lot_impl
S	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^impl<S: Subscriber> SubscriberExt for S {}$/;"	c
S	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^impl<S: Subscriber> crate::sealed::Sealed for S {}$/;"	c
SCALE	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^    static SCALE: [i64; 10] =$/;"	v	function:nanosecond
SCALE	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^    static SCALE: [i64; 10] =$/;"	v	function:nanosecond_fixed
SOME_FUTURE_DATE	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^        static SOME_FUTURE_DATE: i64 = i32::MAX as i64; \/\/ Y2038$/;"	v	function:tests::test_get_time
SOME_RECENT_DATE	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^        static SOME_RECENT_DATE: i64 = 1577836800i64; \/\/ 2020-01-01T00:00:00Z$/;"	v	function:tests::test_get_time
STYLES	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^static STYLES: [(u8, Styles); 8] = [$/;"	v
Sat	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    Sat = 5,$/;"	e	enum:Weekday
Scope	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^impl<'a, L: LookupSpan<'a>> Iterator for Scope<'a, L> {$/;"	c
Scope	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^impl<'a, L: LookupSpan<'a>> std::fmt::Debug for Scope<'a, L> {$/;"	c
Scope	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^pub struct Scope<'a, L: LookupSpan<'a>>($/;"	s
Sealed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^    pub trait Sealed {}$/;"	i	module:private
Sealed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/lib.rs	/^    pub trait Sealed {}$/;"	i	module:sealed
Sealed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/lib.rs	/^    pub trait Sealed<A = ()> {}$/;"	i	module:sealed
Second	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Second,$/;"	e	enum:Numeric
SecondsFormat	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^pub enum SecondsFormat {$/;"	g
SecondsTimestampVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        impl<'de> de::Visitor<'de> for SecondsTimestampVisitor {$/;"	c	module:serde::ts_seconds
SecondsTimestampVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub struct SecondsTimestampVisitor;$/;"	s	module:serde
Secs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    Secs,$/;"	e	enum:SecondsFormat
September	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    September = 8,$/;"	e	enum:Month
SerdeError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^enum SerdeError<V: fmt::Display, D: fmt::Display> {$/;"	g
SerdeError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^impl<V: fmt::Display, D: fmt::Display> fmt::Debug for SerdeError<V, D> {$/;"	c
SerdeError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^impl<V: fmt::Display, D: fmt::Display> fmt::Display for SerdeError<V, D> {$/;"	c
SerializableContext	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^impl<'a, 'b, Span, N> serde::ser::Serialize for SerializableContext<'a, 'b, Span, N>$/;"	c
SerializableContext	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^struct SerializableContext<'a, 'b, Span, N>($/;"	s
SerializableSpan	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^impl<'a, 'b, Span, N> serde::ser::Serialize for SerializableSpan<'a, 'b, Span, N>$/;"	c
SerializableSpan	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^struct SerializableSpan<'a, 'b, Span, N>($/;"	s
Service	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^pub enum Service {$/;"	g
SetRemoved	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    struct SetRemoved(Arc<()>);$/;"	s	module:tests
Setter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^                type Setter = fn(&mut Parsed, i64) -> ParseResult<()>;$/;"	t	function:parse_internal
Sha1	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Sha1,$/;"	e	enum:ErrorClass
ShortMonthName	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    ShortMonthName,$/;"	e	enum:Fixed
ShortWeekdayName	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    ShortWeekdayName,$/;"	e	enum:Fixed
Shorter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs	/^    Shorter(usize, PutBack<I>),$/;"	e	enum:Diff
ShouldColorize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^impl Default for ShouldColorize {$/;"	c
ShouldColorize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^impl ShouldColorize {$/;"	c
ShouldColorize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^pub struct ShouldColorize {$/;"	s
Show	/home/asayers/projects/orpa/src/main.rs	/^    Show { revspec: String },$/;"	e	enum:Cmd
Signature	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/signature.rs	/^impl Clone for Signature<'static> {$/;"	c
Signature	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/signature.rs	/^impl<'a> Binding for Signature<'a> {$/;"	c
Signature	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/signature.rs	/^impl<'a> Drop for Signature<'a> {$/;"	c
Signature	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/signature.rs	/^impl<'a> Signature<'a> {$/;"	c
Signature	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/signature.rs	/^impl<'a> fmt::Display for Signature<'a> {$/;"	c
Signature	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/signature.rs	/^pub struct Signature<'a> {$/;"	s
Single	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    Single(T),$/;"	e	enum:LocalResult
SizeHint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/size_hint.rs	/^pub type SizeHint = (usize, Option<usize>);$/;"	t
Skip	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    Skip = 1,$/;"	e	enum:TreeWalkResult
SmartSubtransport	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^pub trait SmartSubtransport: Send + 'static {$/;"	i
SmartSubtransportStream	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^pub trait SmartSubtransportStream: Read + Write + Send + 'static {}$/;"	i
Soft	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Soft,$/;"	e	enum:ResetType
Sort	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl Sort {$/;"	c
Space	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Space(&'a str),$/;"	e	enum:Item
Space	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Space,$/;"	e	enum:Pad
Span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    impl AssertSend for Span {}$/;"	c	module:test
Span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    impl AssertSync for Span {}$/;"	c	module:test
Span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^impl Drop for Span {$/;"	c
Span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^impl Hash for Span {$/;"	c
Span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^impl Into<Option<Id>> for Span {$/;"	c
Span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^impl Span {$/;"	c
Span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^impl cmp::PartialEq for Span {$/;"	c
Span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^impl fmt::Debug for Span {$/;"	c
Span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^impl<'a> Into<Option<&'a Id>> for &'a Span {$/;"	c
Span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^impl<'a> Into<Option<Id>> for &'a Span {$/;"	c
Span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^pub struct Span {$/;"	s
SpanData	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^pub trait SpanData<'a> {$/;"	i
SpanMatch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^impl SpanMatch {$/;"	c
SpanMatch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^pub(crate) struct SpanMatch {$/;"	s
SpanMatcher	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^impl SpanMatcher {$/;"	c
SpanMatcher	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^pub(crate) type SpanMatcher = MatchSet<field::SpanMatch>;$/;"	t
SpanRef	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^impl<'a, R> SpanRef<'a, R>$/;"	c
SpanRef	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^pub struct SpanRef<'a, R: LookupSpan<'a>> {$/;"	s
SpanRefVec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^        type SpanRefVec<'span, L> = Vec<SpanRef<'span, L>>;$/;"	t	function:from_root
SpanRefVec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^        type SpanRefVec<'span, L> = smallvec::SmallVec<SpanRefVecArray<'span, L>>;$/;"	t	function:from_root
SpanRefVecArray	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^type SpanRefVecArray<'span, L> = [SpanRef<'span, L>; 16];$/;"	t
SpanStack	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/stack.rs	/^impl SpanStack {$/;"	c
SpanStack	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/stack.rs	/^pub(crate) struct SpanStack {$/;"	s
Squash	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    Squash,$/;"	e	enum:RebaseOperationType
Ssh	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Ssh,$/;"	e	enum:ErrorClass
Ssl	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Ssl,$/;"	e	enum:ErrorClass
Start	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs	/^    Start {$/;"	e	enum:CompleteState
StartOfIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs	/^    StartOfIter,$/;"	e	enum:MultiProductIterState
StartUnknownLen	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs	/^    StartUnknownLen {$/;"	e	enum:PermutationState
Stash	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Stash,$/;"	e	enum:ErrorClass
StashApplyFlags	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl Default for StashApplyFlags {$/;"	c
StashApplyFlags	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl StashApplyFlags {$/;"	c
StashApplyOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/stash.rs	/^impl<'cb> Default for StashApplyOptions<'cb> {$/;"	c
StashApplyOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/stash.rs	/^impl<'cb> StashApplyOptions<'cb> {$/;"	c
StashApplyOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/stash.rs	/^pub struct StashApplyOptions<'cb> {$/;"	s
StashApplyProgress	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^pub enum StashApplyProgress {$/;"	g
StashApplyProgressCb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/stash.rs	/^pub type StashApplyProgressCb<'a> = dyn FnMut(StashApplyProgress) -> bool + 'a;$/;"	t
StashCb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/stash.rs	/^pub type StashCb<'a> = dyn FnMut(usize, &str, &Oid) -> bool + 'a;$/;"	t
StashCbData	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/stash.rs	/^pub struct StashCbData<'a> {$/;"	s
StashFlags	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl Default for StashFlags {$/;"	c
StashFlags	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl StashFlags {$/;"	c
State	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^        type State<T> = Result<T, Option<T>>;$/;"	t	method:Itertools::tree_fold1
StaticDirective	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^impl Default for StaticDirective {$/;"	c
StaticDirective	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^impl Match for StaticDirective {$/;"	c
StaticDirective	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^impl Ord for StaticDirective {$/;"	c
StaticDirective	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^impl PartialOrd for StaticDirective {$/;"	c
StaticDirective	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^impl fmt::Display for StaticDirective {$/;"	c
StaticDirective	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^pub(crate) struct StaticDirective {$/;"	s
Statics	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^impl Statics {$/;"	c
Statics	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^pub(crate) type Statics = DirectiveSet<StaticDirective>;$/;"	t
Status	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl Status {$/;"	c
Status	/home/asayers/projects/orpa/src/main.rs	/^enum Status {$/;"	g
StatusEntry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^impl<'statuses> Binding for StatusEntry<'statuses> {$/;"	c
StatusEntry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^impl<'statuses> StatusEntry<'statuses> {$/;"	c
StatusEntry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^pub struct StatusEntry<'statuses> {$/;"	s
StatusIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^impl<'a> DoubleEndedIterator for StatusIter<'a> {$/;"	c
StatusIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^impl<'a> ExactSizeIterator for StatusIter<'a> {}$/;"	c
StatusIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^impl<'a> Iterator for StatusIter<'a> {$/;"	c
StatusIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^pub struct StatusIter<'statuses> {$/;"	s
StatusOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^impl Default for StatusOptions {$/;"	c
StatusOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^impl StatusOptions {$/;"	c
StatusOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^pub struct StatusOptions {$/;"	s
StatusShow	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^pub enum StatusShow {$/;"	g
Statuses	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^impl<'repo> Binding for Statuses<'repo> {$/;"	c
Statuses	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^impl<'repo> Drop for Statuses<'repo> {$/;"	c
Statuses	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^impl<'repo> Statuses<'repo> {$/;"	c
Statuses	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^pub struct Statuses<'repo> {$/;"	s
StdError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^    pub trait StdError {$/;"	i	module:ext
StdError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/lib.rs	/^trait StdError: Debug + Display {$/;"	i
SteadyTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl Add<Duration> for SteadyTime {$/;"	c
SteadyTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl SteadyTime {$/;"	c
SteadyTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl Sub for SteadyTime {$/;"	c
SteadyTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl Sub<Duration> for SteadyTime {$/;"	c
SteadyTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl fmt::Display for SteadyTime {$/;"	c
SteadyTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub struct SteadyTime(sys::SteadyTime);$/;"	s
SteadyTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        impl Add<Duration> for SteadyTime {$/;"	c	module:inner::mac
SteadyTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        impl Add<Duration> for SteadyTime {$/;"	c	module:inner::unix
SteadyTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        impl Clone for SteadyTime {$/;"	c	module:inner::unix
SteadyTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        impl Eq for SteadyTime {}$/;"	c	module:inner::unix
SteadyTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        impl Ord for SteadyTime {$/;"	c	module:inner::unix
SteadyTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        impl PartialEq for SteadyTime {$/;"	c	module:inner::unix
SteadyTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        impl PartialOrd for SteadyTime {$/;"	c	module:inner::unix
SteadyTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        impl SteadyTime {$/;"	c	module:inner::mac
SteadyTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        impl SteadyTime {$/;"	c	module:inner::unix
SteadyTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        impl Sub for SteadyTime {$/;"	c	module:inner::mac
SteadyTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        impl Sub for SteadyTime {$/;"	c	module:inner::unix
SteadyTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        impl Sub<Duration> for SteadyTime {$/;"	c	module:inner::mac
SteadyTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        impl Sub<Duration> for SteadyTime {$/;"	c	module:inner::unix
SteadyTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        impl fmt::Debug for SteadyTime {$/;"	c	module:inner::unix
SteadyTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        pub struct SteadyTime { t: u64 }$/;"	s	module:inner::mac
SteadyTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        pub struct SteadyTime {$/;"	s	module:inner::unix
SteadyTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    impl Add<Duration> for SteadyTime {$/;"	c	module:inner
SteadyTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    impl SteadyTime {$/;"	c	module:inner
SteadyTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    impl Sub for SteadyTime {$/;"	c	module:inner
SteadyTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    impl Sub<Duration> for SteadyTime {$/;"	c	module:inner
SteadyTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub struct SteadyTime {$/;"	s	module:inner
SteadyTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub struct SteadyTime;$/;"	s	module:inner
Step	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^impl<I> ExactSizeIterator for Step<I>$/;"	c
Step	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^impl<I> Iterator for Step<I>$/;"	c
Step	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub struct Step<I> {$/;"	s
Str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    Str(&'a str),$/;"	e	enum:Fmt
StrftimeItems	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^impl<'a> Iterator for StrftimeItems<'a> {$/;"	c
StrftimeItems	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^impl<'a> StrftimeItems<'a> {$/;"	c
StrftimeItems	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^pub struct StrftimeItems<'a> {$/;"	s
Strikethrough	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^    Strikethrough,$/;"	e	enum:Styles
String	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^impl IntoCString for String {$/;"	c
StringArray	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^impl Binding for StringArray {$/;"	c
StringArray	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^impl Drop for StringArray {$/;"	c
StringArray	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^impl StringArray {$/;"	c
StringArray	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^impl<'a> IntoIterator for &'a StringArray {$/;"	c
StringArray	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^pub struct StringArray {$/;"	s
StringLayer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    impl<S: Subscriber> Layer<S> for StringLayer {}$/;"	c	module:tests
StringLayer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    struct StringLayer(String);$/;"	s	module:tests
StringLayer2	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    impl<S: Subscriber> Layer<S> for StringLayer2 {}$/;"	c	module:tests
StringLayer2	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    struct StringLayer2(String);$/;"	s	module:tests
StringLayer3	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    impl<S: Subscriber> Layer<S> for StringLayer3 {}$/;"	c	module:tests
StringLayer3	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    struct StringLayer3(String);$/;"	s	module:tests
StringSubscriber	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    impl Subscriber for StringSubscriber {$/;"	c	module:tests
StringSubscriber	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    pub(crate) struct StringSubscriber(String);$/;"	s	module:tests
StructOpt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.21/src/lib.rs	/^pub trait StructOpt {$/;"	i
StructOptInternal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.21/src/lib.rs	/^pub trait StructOptInternal: StructOpt {$/;"	i
Style	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^impl Style {$/;"	c
Style	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^pub struct Style(u8);$/;"	s
Style	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl Style {$/;"	c
Style	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^struct Style;$/;"	s
Styles	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^impl Styles {$/;"	c
Styles	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^pub enum Styles {$/;"	g
Submodule	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Submodule,$/;"	e	enum:ErrorClass
Submodule	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^impl<'repo> Binding for Submodule<'repo> {$/;"	c
Submodule	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^impl<'repo> Drop for Submodule<'repo> {$/;"	c
Submodule	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^impl<'repo> Submodule<'repo> {$/;"	c
Submodule	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^pub struct Submodule<'repo> {$/;"	s
SubmoduleIgnore	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^    impl Convert<raw::git_submodule_ignore_t> for SubmoduleIgnore {$/;"	c	module:impls
SubmoduleIgnore	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^pub enum SubmoduleIgnore {$/;"	g
SubmoduleStatus	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl SubmoduleStatus {$/;"	c
SubmoduleUpdateOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^impl<'cb> Default for SubmoduleUpdateOptions<'cb> {$/;"	c
SubmoduleUpdateOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^impl<'cb> SubmoduleUpdateOptions<'cb> {$/;"	c
SubmoduleUpdateOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^pub struct SubmoduleUpdateOptions<'cb> {$/;"	s
Subscriber	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^impl Default for Subscriber {$/;"	c
Subscriber	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^impl Subscriber {$/;"	c
Subscriber	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^impl<'a, N, E, F, W> LookupSpan<'a> for Subscriber<N, E, F, W>$/;"	c
Subscriber	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^impl<N, E, F, W> tracing_core::Subscriber for Subscriber<N, E, F, W>$/;"	c
Subscriber	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^pub struct Subscriber<$/;"	s
SubscriberBuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^impl Default for SubscriberBuilder {$/;"	c
SubscriberBuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^impl<N, E, F, W> Into<tracing_core::Dispatch> for SubscriberBuilder<N, E, F, W>$/;"	c
SubscriberBuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^impl<N, E, F, W> SubscriberBuilder<N, E, F, W> {$/;"	c
SubscriberBuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^impl<N, E, F, W> SubscriberBuilder<N, E, F, W>$/;"	c
SubscriberBuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^impl<N, E, W> SubscriberBuilder<N, E, crate::EnvFilter, W>$/;"	c
SubscriberBuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^impl<N, E, W> SubscriberBuilder<N, E, crate::reload::Layer<crate::EnvFilter, Formatter<N, E, W>>/;"	c
SubscriberBuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^impl<N, L, T, F, W> SubscriberBuilder<N, format::Format<L, T>, F, W>$/;"	c
SubscriberBuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^impl<T, F, W> SubscriberBuilder<format::JsonFields, format::Format<format::Json, T>, F, W> {$/;"	c
SubscriberBuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^pub struct SubscriberBuilder<$/;"	s
SubscriberExt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^pub trait SubscriberExt: Subscriber + crate::sealed::Sealed {$/;"	i
SubscriberGone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^    SubscriberGone,$/;"	e	enum:ErrorKind
SubscriberInitExt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/util.rs	/^pub trait SubscriberInitExt$/;"	i
SubsecRound	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^pub trait SubsecRound {$/;"	i
Sun	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    Sun = 6,$/;"	e	enum:Weekday
Symbolic	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Symbolic,$/;"	e	enum:ReferenceType
System	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    System,$/;"	e	enum:ConfigLevel
SystemTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone> From<DateTime<Tz>> for SystemTime {$/;"	c
SystemTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^impl FormatTime for SystemTime {$/;"	c
SystemTime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^pub struct SystemTime;$/;"	s
T	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/kind.rs	/^impl<T> AdhocKind for &T where T: ?Sized + Display + Debug + Send + Sync + 'static {}$/;"	c
T	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^impl<T> SubsecRound for T$/;"	c
T	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^    impl<'a, T> Convert<*const T> for &'a T {$/;"	c	module:impls
T	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^    impl<'a, T> Convert<*mut T> for &'a mut T {$/;"	c	module:impls
T	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^    impl<T: Copy> Convert<T> for T {$/;"	c	module:impls
T	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^    impl<T> Convert<*const T> for *mut T {$/;"	c	module:impls
T	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^impl<T: Read + Write + Send + 'static> SmartSubtransportStream for T {}$/;"	c
T	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^impl<'a, T: IntoCString + Clone> IntoCString for &'a T {$/;"	c
T	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^impl<T> IsNull for *const T {$/;"	c
T	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^impl<T> IsNull for *mut T {$/;"	c
T	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^impl<T: ?Sized> Itertools for T where T: Iterator { }$/;"	c
T	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^impl<T: TupleCollect> HomogeneousTuple for T {}$/;"	c
T	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/instrument.rs	/^impl<T: Sized> Instrument for T {}$/;"	c
T	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/util.rs	/^impl<T> SubscriberInitExt for T where T: Into<Dispatch> {}$/;"	c
TEST_CALLSITE_1	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    static TEST_CALLSITE_1: &'static dyn Callsite = &TestCallsite1;$/;"	v	module:test_util
TEST_META_1	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    static TEST_META_1: Metadata<'static> = tracing_core::metadata! {$/;"	v	module:test_util
T_FMT	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^static T_FMT: &'static [Item<'static>] =$/;"	v
Tag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Tag,$/;"	e	enum:ErrorClass
Tag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Tag,$/;"	e	enum:ObjectType
Tag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^impl<'repo> Binding for Tag<'repo> {$/;"	c
Tag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^impl<'repo> Clone for Tag<'repo> {$/;"	c
Tag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^impl<'repo> Drop for Tag<'repo> {$/;"	c
Tag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^impl<'repo> Tag<'repo> {$/;"	c
Tag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^impl<'repo> std::fmt::Debug for Tag<'repo> {$/;"	c
Tag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^pub struct Tag<'repo> {$/;"	s
TagForeachCB	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tagforeach.rs	/^pub(crate) type TagForeachCB<'a> = Box<dyn FnMut(Oid, &[u8]) -> bool + 'a>;$/;"	t
TagForeachData	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tagforeach.rs	/^pub(crate) struct TagForeachData<'a> {$/;"	s
TakeWhileRef	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^impl<'a, I, F> Iterator for TakeWhileRef<'a, I, F>$/;"	c
TakeWhileRef	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^impl<'a, I, F> fmt::Debug for TakeWhileRef<'a, I, F>$/;"	c
TakeWhileRef	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub struct TakeWhileRef<'a, I: 'a, F> {$/;"	s
Target	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    type Target = dyn StdError + Send + Sync + 'static;$/;"	t	implementation:Error
Target	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        type Target = DateTime<Tz>;$/;"	t	implementation:rustc_serialize::TsSeconds
Target	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        type Target = NaiveDateTime;$/;"	t	implementation:rustc_serialize::TsSeconds
Target	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    type Target = str;$/;"	t	implementation:ColoredString
Target	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/buf.rs	/^    type Target = [u8];$/;"	t	implementation:Buf
Target	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid_array.rs	/^    type Target = [Oid];$/;"	t	implementation:OidArray
Target	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    type Target = String;$/;"	t	implementation:FormattedFields
Tee	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tee.rs	/^impl<I> ExactSizeIterator for Tee<I>$/;"	c
Tee	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tee.rs	/^impl<I> Iterator for Tee<I>$/;"	c
Tee	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tee.rs	/^pub struct Tee<I>$/;"	s
TeeBuffer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tee.rs	/^struct TeeBuffer<A, I> {$/;"	s
Test	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        struct Test {$/;"	s	function:serde::test_serde_bincode_optional
TestAttrs1	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    impl TestAttrs1 {$/;"	c	module:test_util
TestAttrs1	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    pub(crate) struct TestAttrs1;$/;"	s	module:test_util
TestAttrs2	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    impl TestAttrs2 {$/;"	c	module:test_util
TestAttrs2	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    pub(crate) struct TestAttrs2;$/;"	s	module:test_util
TestCallsite1	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    impl Callsite for TestCallsite1 {$/;"	c	module:test_util
TestCallsite1	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    struct TestCallsite1;$/;"	s	module:test_util
TestTreeIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    impl<'a> Iterator for TestTreeIter<'a> {$/;"	c	module:tests
TestTreeIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    pub struct TestTreeIter<'a> {$/;"	s	module:tests
TestWriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^impl MakeWriter for TestWriter {$/;"	c
TestWriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^impl TestWriter {$/;"	c
TestWriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^impl io::Write for TestWriter {$/;"	c
TestWriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^pub struct TestWriter {$/;"	s
Theirs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Theirs,$/;"	e	enum:FileFavor
Thread	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Thread,$/;"	e	enum:ErrorClass
Thu	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    Thu = 3,$/;"	e	enum:Weekday
Time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^impl Binding for Time {$/;"	c
Time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^impl Ord for Time {$/;"	c
Time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^impl PartialOrd for Time {$/;"	c
Time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^impl Time {$/;"	c
Time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^pub struct Time {$/;"	s
TimeZone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^pub trait TimeZone: Sized + Clone {$/;"	i
Timelike	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub trait Timelike: Sized {$/;"	i
Timespec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^impl Timespec {$/;"	c
Timespec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^pub struct Timespec {$/;"	s
Timespec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl Add<Duration> for Timespec {$/;"	c
Timespec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl Sub<Duration> for Timespec {$/;"	c
Timespec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl Sub<Timespec> for Timespec {$/;"	c
Timespec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl Timespec {$/;"	c
Timespec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub struct Timespec { pub sec: i64, pub nsec: i32 }$/;"	s
Timestamp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Timestamp,$/;"	e	enum:Numeric
TimestampExceedsLimit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    TimestampExceedsLimit,$/;"	e	enum:RoundingError
TimezoneName	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    TimezoneName,$/;"	e	enum:Fixed
TimezoneOffset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    TimezoneOffset,$/;"	e	enum:Fixed
TimezoneOffsetColon	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    TimezoneOffsetColon,$/;"	e	enum:Fixed
TimezoneOffsetColonZ	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    TimezoneOffsetColonZ,$/;"	e	enum:Fixed
TimezoneOffsetPermissive	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    TimezoneOffsetPermissive,$/;"	e	enum:InternalInternal
TimezoneOffsetZ	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    TimezoneOffsetZ,$/;"	e	enum:Fixed
TimingDisplay	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^impl Display for TimingDisplay {$/;"	c
TimingDisplay	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^pub(super) struct TimingDisplay(pub(super) u64);$/;"	s
Timings	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^impl Timings {$/;"	c
Timings	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^struct Timings {$/;"	s
Tm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^impl Tm {$/;"	c
Tm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^pub struct Tm {$/;"	s
Tm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl Add<Duration> for Tm {$/;"	c
Tm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl Ord for Tm {$/;"	c
Tm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl PartialOrd for Tm {$/;"	c
Tm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl Sub<Duration> for Tm {$/;"	c
Tm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl Sub<Tm> for Tm {$/;"	c
Tm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl Tm {$/;"	c
Tm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub struct Tm {$/;"	s
TmFmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/display.rs	/^impl<'a> fmt::Display for TmFmt<'a> {$/;"	c
TmFmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub struct TmFmt<'a> {$/;"	s
TooLong	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    TooLong,$/;"	e	enum:ParseErrorKind
TooShort	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    TooShort,$/;"	e	enum:ParseErrorKind
Trait	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/kind.rs	/^impl Trait {$/;"	c
Trait	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/kind.rs	/^pub struct Trait;$/;"	s
TraitKind	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/kind.rs	/^pub trait TraitKind: Sized {$/;"	i
Transport	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^impl Drop for Transport {$/;"	c
Transport	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^impl Transport {$/;"	c
Transport	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^pub struct Transport {$/;"	s
TransportData	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^struct TransportData {$/;"	s
TransportFactory	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^type TransportFactory = dyn Fn(&Remote<'_>) -> Result<Transport, Error> + Send + Sync + 'static;$/;"	t
TransportMessage	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^pub type TransportMessage<'a> = dyn FnMut(&[u8]) -> bool + 'a;$/;"	t
TransportProgress	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/indexer.rs	/^pub type TransportProgress<'a> = IndexerProgress<'a>;$/;"	t
Tree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Tree,$/;"	e	enum:ErrorClass
Tree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Tree,$/;"	e	enum:FileMode
Tree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Tree,$/;"	e	enum:ObjectType
Tree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^impl<'repo, 'iter> IntoIterator for &'iter Tree<'repo> {$/;"	c
Tree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^impl<'repo> Binding for Tree<'repo> {$/;"	c
Tree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^impl<'repo> Clone for Tree<'repo> {$/;"	c
Tree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^impl<'repo> Drop for Tree<'repo> {$/;"	c
Tree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^impl<'repo> Tree<'repo> {$/;"	c
Tree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^impl<'repo> std::fmt::Debug for Tree<'repo> {$/;"	c
Tree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^pub struct Tree<'repo> {$/;"	s
TreeBuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/treebuilder.rs	/^impl<'repo> Binding for TreeBuilder<'repo> {$/;"	c
TreeBuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/treebuilder.rs	/^impl<'repo> Drop for TreeBuilder<'repo> {$/;"	c
TreeBuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/treebuilder.rs	/^impl<'repo> TreeBuilder<'repo> {$/;"	c
TreeBuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/treebuilder.rs	/^pub struct TreeBuilder<'repo> {$/;"	s
TreeEntry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^impl<'a> Binding for TreeEntry<'a> {$/;"	c
TreeEntry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^impl<'a> Clone for TreeEntry<'a> {$/;"	c
TreeEntry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^impl<'a> Drop for TreeEntry<'a> {$/;"	c
TreeEntry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^impl<'a> Eq for TreeEntry<'a> {}$/;"	c
TreeEntry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^impl<'a> Ord for TreeEntry<'a> {$/;"	c
TreeEntry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^impl<'a> PartialEq for TreeEntry<'a> {$/;"	c
TreeEntry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^impl<'a> PartialOrd for TreeEntry<'a> {$/;"	c
TreeEntry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^impl<'tree> TreeEntry<'tree> {$/;"	c
TreeEntry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^pub struct TreeEntry<'tree> {$/;"	s
TreeIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^impl<'tree> DoubleEndedIterator for TreeIter<'tree> {$/;"	c
TreeIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^impl<'tree> ExactSizeIterator for TreeIter<'tree> {}$/;"	c
TreeIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^impl<'tree> Iterator for TreeIter<'tree> {$/;"	c
TreeIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^pub struct TreeIter<'tree> {$/;"	s
TreeUpdateBuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^impl Default for TreeUpdateBuilder {$/;"	c
TreeUpdateBuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^impl TreeUpdateBuilder {$/;"	c
TreeUpdateBuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^pub struct TreeUpdateBuilder {$/;"	s
TreeWalkCb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^type TreeWalkCb<'a, T> = dyn FnMut(&str, &TreeEntry<'_>) -> T + 'a;$/;"	t
TreeWalkCbData	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^        struct TreeWalkCbData<'a, T> {$/;"	s	method:Tree::walk
TreeWalkMode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^impl Into<raw::git_treewalk_mode> for TreeWalkMode {$/;"	c
TreeWalkMode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^pub enum TreeWalkMode {$/;"	g
TreeWalkResult	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^impl Into<i32> for TreeWalkResult {$/;"	c
TreeWalkResult	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^pub enum TreeWalkResult {$/;"	g
Triage	/home/asayers/projects/orpa/src/main.rs	/^    Triage,$/;"	e	enum:Cmd
TrueColor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    TrueColor { r: u8, g: u8, b: u8 },$/;"	e	enum:Color
TryInitError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/util.rs	/^impl Error for TryInitError {$/;"	c
TryInitError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/util.rs	/^impl TryInitError {$/;"	c
TryInitError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/util.rs	/^impl fmt::Debug for TryInitError {$/;"	c
TryInitError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/util.rs	/^impl fmt::Display for TryInitError {$/;"	c
TryInitError	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/util.rs	/^pub struct TryInitError {$/;"	s
TsSeconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    impl Decodable for TsSeconds<FixedOffset> {$/;"	c	module:rustc_serialize
TsSeconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    impl Decodable for TsSeconds<Local> {$/;"	c	module:rustc_serialize
TsSeconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    impl Decodable for TsSeconds<Utc> {$/;"	c	module:rustc_serialize
TsSeconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    impl<Tz: TimeZone> Deref for TsSeconds<Tz> {$/;"	c	module:rustc_serialize
TsSeconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub struct TsSeconds<Tz: TimeZone>(DateTime<Tz>);$/;"	s	module:rustc_serialize
TsSeconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    impl Decodable for TsSeconds {$/;"	c	module:rustc_serialize
TsSeconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    impl Deref for TsSeconds {$/;"	c	module:rustc_serialize
TsSeconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub struct TsSeconds(NaiveDateTime);$/;"	s	module:rustc_serialize
Tue	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    Tue = 1,$/;"	e	enum:Weekday
Tuple1Combination	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^impl<I: Iterator> Iterator for Tuple1Combination<I> {$/;"	c
Tuple1Combination	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^impl<I> From<I> for Tuple1Combination<I> {$/;"	c
Tuple1Combination	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub struct Tuple1Combination<I> {$/;"	s
TupleBuffer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^impl<T> ExactSizeIterator for TupleBuffer<T>$/;"	c
TupleBuffer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^impl<T> Iterator for TupleBuffer<T>$/;"	c
TupleBuffer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^impl<T> TupleBuffer<T>$/;"	c
TupleBuffer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^pub struct TupleBuffer<T>$/;"	s
TupleCollect	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^pub trait TupleCollect: Sized {$/;"	i
TupleCombinations	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^impl<I, T> Iterator for TupleCombinations<I, T>$/;"	c
TupleCombinations	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub struct TupleCombinations<I, T>$/;"	s
TupleWindows	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^impl<I, T> Iterator for TupleWindows<I, T>$/;"	c
TupleWindows	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^pub struct TupleWindows<I, T>$/;"	s
Tuples	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^impl<I, T> Iterator for Tuples<I, T>$/;"	c
Tuples	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^impl<I, T> Tuples<I, T>$/;"	c
Tuples	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^pub struct Tuples<I, T>$/;"	s
Typechange	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Typechange,$/;"	e	enum:Delta
TzReset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    struct TzReset {$/;"	s	module:tests
TzReset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    impl Drop for TzReset {$/;"	c	module:inner
TzReset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub struct TzReset {$/;"	s	module:inner
TzReset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub struct TzReset;$/;"	s	module:inner
U64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    U64(u64),$/;"	e	enum:ValueMatch
UnbornBranch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    UnbornBranch,$/;"	e	enum:ErrorCode
Uncommitted	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Uncommitted,$/;"	e	enum:ErrorCode
Underline	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^    Underline,$/;"	e	enum:Styles
UnexpectedCharacter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    UnexpectedCharacter(char, char),$/;"	e	enum:ParseError
Unfold	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs	/^impl<A, St, F> Iterator for Unfold<St, F>$/;"	c
Unfold	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs	/^impl<St, F> fmt::Debug for Unfold<St, F>$/;"	c
Unfold	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs	/^pub struct Unfold<St, F> {$/;"	s
Union	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Union,$/;"	e	enum:FileFavor
Unique	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs	/^impl<I> DoubleEndedIterator for Unique<I>$/;"	c
Unique	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs	/^impl<I> Iterator for Unique<I>$/;"	c
Unique	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs	/^impl<I> fmt::Debug for Unique<I>$/;"	c
Unique	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs	/^pub struct Unique<I: Iterator> {$/;"	s
UniqueBy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs	/^impl<I, V, F> DoubleEndedIterator for UniqueBy<I, V, F>$/;"	c
UniqueBy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs	/^impl<I, V, F> Iterator for UniqueBy<I, V, F>$/;"	c
UniqueBy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs	/^impl<I, V, F> fmt::Debug for UniqueBy<I, V, F>$/;"	c
UniqueBy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs	/^pub struct UniqueBy<I: Iterator, V, F> {$/;"	s
Unlocked	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    Unlocked,$/;"	e	enum:WorktreeLockStatus
Unmerged	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Unmerged,$/;"	e	enum:ErrorCode
Unmodified	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Unmodified,$/;"	e	enum:Delta
Unreadable	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Unreadable,$/;"	e	enum:Delta
Unreadable	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Unreadable,$/;"	e	enum:FileMode
Unspecified	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Unspecified,$/;"	e	enum:AutotagOption
Unspecified	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Unspecified,$/;"	e	enum:FetchPrune
Unspecified	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Unspecified,$/;"	e	enum:SubmoduleIgnore
Untracked	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Untracked,$/;"	e	enum:Delta
Untracked	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Untracked,$/;"	e	enum:SubmoduleIgnore
Update	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^impl<I, F> DoubleEndedIterator for Update<I, F>$/;"	c
Update	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^impl<I, F> ExactSizeIterator for Update<I, F>$/;"	c
Update	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^impl<I, F> Iterator for Update<I, F>$/;"	c
Update	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub struct Update<I, F> {$/;"	s
UpdateTips	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^pub type UpdateTips<'a> = dyn FnMut(&str, Oid, Oid) -> bool + 'a;$/;"	t
UploadPack	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^    UploadPack,$/;"	e	enum:Service
UploadPackLs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^    UploadPackLs,$/;"	e	enum:Service
UpperAmPm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    UpperAmPm,$/;"	e	enum:Fixed
Uptime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^impl Default for Uptime {$/;"	c
Uptime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^impl FormatTime for Uptime {$/;"	c
Uptime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^impl From<Instant> for Uptime {$/;"	c
Uptime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^pub struct Uptime {$/;"	s
User	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    User,$/;"	e	enum:ErrorCode
Utc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^impl Offset for Utc {$/;"	c
Utc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^impl TimeZone for Utc {$/;"	c
Utc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^impl Utc {$/;"	c
Utc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^impl fmt::Debug for Utc {$/;"	c
Utc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^impl fmt::Display for Utc {$/;"	c
Utc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^pub struct Utc;$/;"	s
Value	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            type Value = DateTime<Utc>;$/;"	t	implementation:serde::ts_milliseconds::MilliSecondsTimestampVisitor
Value	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            type Value = DateTime<Utc>;$/;"	t	implementation:serde::ts_nanoseconds::NanoSecondsTimestampVisitor
Value	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            type Value = DateTime<Utc>;$/;"	t	implementation:serde::ts_seconds::SecondsTimestampVisitor
Value	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            type Value = Option<DateTime<Utc>>;$/;"	t	implementation:serde::ts_milliseconds_option::OptionMilliSecondsTimestampVisitor
Value	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            type Value = Option<DateTime<Utc>>;$/;"	t	implementation:serde::ts_nanoseconds_option::OptionNanoSecondsTimestampVisitor
Value	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            type Value = Option<DateTime<Utc>>;$/;"	t	implementation:serde::ts_seconds_option::OptionSecondsTimestampVisitor
Value	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        type Value = DateTime<FixedOffset>;$/;"	t	implementation:serde::DateTimeVisitor
Value	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^        type Value = Month;$/;"	t	implementation:month_serde::MonthVisitor
Value	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^        type Value = Weekday;$/;"	t	implementation:weekday_serde::WeekdayVisitor
Value	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        type Value = NaiveDate;$/;"	t	implementation:serde::NaiveDateVisitor
Value	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            type Value = NaiveDateTime;$/;"	t	implementation:serde::ts_milliseconds::NaiveDateTimeFromMilliSecondsVisitor
Value	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            type Value = NaiveDateTime;$/;"	t	implementation:serde::ts_nanoseconds::NaiveDateTimeFromNanoSecondsVisitor
Value	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            type Value = NaiveDateTime;$/;"	t	implementation:serde::ts_seconds::NaiveDateTimeFromSecondsVisitor
Value	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        type Value = NaiveDateTime;$/;"	t	implementation:serde::NaiveDateTimeVisitor
Value	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^        type Value = NaiveTime;$/;"	t	implementation:serde::NaiveTimeVisitor
ValueMatch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^impl FromStr for ValueMatch {$/;"	c
ValueMatch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^impl fmt::Display for ValueMatch {$/;"	c
ValueMatch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^pub(crate) enum ValueMatch {$/;"	g
Vec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^impl IntoCString for Vec<u8> {$/;"	c
VecIntoIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs	/^type VecIntoIter<T> = alloc::vec::IntoIter<T>;$/;"	t
VecIntoIter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^type VecIntoIter<T> = alloc::vec::IntoIter<T>;$/;"	t
VisitDelimited	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^impl<D, V> Visit for VisitDelimited<D, V>$/;"	c
VisitDelimited	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^impl<D, V> VisitDelimited<D, V> {$/;"	c
VisitDelimited	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^impl<D, V> VisitFmt for VisitDelimited<D, V>$/;"	c
VisitDelimited	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^impl<D, V> VisitOutput<fmt::Result> for VisitDelimited<D, V>$/;"	c
VisitDelimited	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^pub struct VisitDelimited<D, V> {$/;"	s
VisitFmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^pub trait VisitFmt: VisitOutput<fmt::Result> {$/;"	i
VisitOutput	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^pub trait VisitOutput<Out>: Visit {$/;"	i
VisitWrite	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^pub trait VisitWrite: VisitOutput<Result<(), io::Error>> {$/;"	i
Visitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/debug.rs	/^    type Visitor = Alt<V::Visitor>;$/;"	t
Visitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^    type Visitor = VisitDelimited<D, V::Visitor>;$/;"	t
Visitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/display.rs	/^    type Visitor = Messages<V::Visitor>;$/;"	t
Visitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^        type Visitor = DebugVisitor<'a>;$/;"	t	implementation:test_util::MakeDebug
Visitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    type Visitor = V;$/;"	t
Visitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    type Visitor: Visit;$/;"	t	interface:MakeVisitor
Visitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    type Visitor = DefaultVisitor<'a>;$/;"	t	implementation:DefaultFields
Visitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    type Visitor = FieldFnVisitor<'a, F>;$/;"	t
Void	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^enum Void {}$/;"	g
Wed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    Wed = 2,$/;"	e	enum:Weekday
WeekFromMon	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    WeekFromMon,$/;"	e	enum:Numeric
WeekFromSun	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    WeekFromSun,$/;"	e	enum:Numeric
Weekday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^impl FromStr for Weekday {$/;"	c
Weekday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    impl ser::Serialize for Weekday {$/;"	c	module:weekday_serde
Weekday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    impl<'de> de::Deserialize<'de> for Weekday {$/;"	c	module:weekday_serde
Weekday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^impl Weekday {$/;"	c
Weekday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^impl fmt::Display for Weekday {$/;"	c
Weekday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^impl num_traits::FromPrimitive for Weekday {$/;"	c
Weekday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub enum Weekday {$/;"	g
WeekdayFromMon	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    WeekdayFromMon,$/;"	e	enum:Numeric
WeekdayVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    impl<'de> de::Visitor<'de> for WeekdayVisitor {$/;"	c	module:weekday_serde
WeekdayVisitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    struct WeekdayVisitor;$/;"	s	module:weekday_serde
WhileSome	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^impl<I, A> Iterator for WhileSome<I>$/;"	c
WhileSome	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub struct WhileSome<I> {$/;"	s
White	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    White,$/;"	e	enum:Color
WithPosition	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs	/^impl<I: Iterator> Iterator for WithPosition<I> {$/;"	c
WithPosition	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs	/^impl<I> Clone for WithPosition<I>$/;"	c
WithPosition	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs	/^impl<I> ExactSizeIterator for WithPosition<I>$/;"	c
WithPosition	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs	/^pub struct WithPosition<I>$/;"	s
WithSubscriber	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/instrument.rs	/^pub trait WithSubscriber: Sized {$/;"	i
WorkDir	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/apply.rs	/^    WorkDir,$/;"	e	enum:ApplyLocation
Workdir	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    Workdir,$/;"	e	enum:StatusShow
Worktree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Worktree,$/;"	e	enum:ErrorClass
Worktree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^impl Binding for Worktree {$/;"	c
Worktree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^impl Drop for Worktree {$/;"	c
Worktree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^impl Worktree {$/;"	c
Worktree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^pub struct Worktree {$/;"	s
WorktreeAddOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^impl<'a> WorktreeAddOptions<'a> {$/;"	c
WorktreeAddOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^pub struct WorktreeAddOptions<'a> {$/;"	s
WorktreeLockStatus	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^pub enum WorktreeLockStatus {$/;"	g
WorktreePruneOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^impl WorktreePruneOptions {$/;"	c
WorktreePruneOptions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^pub struct WorktreePruneOptions {$/;"	s
WriteAdaptor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^impl<'a> WriteAdaptor<'a> {$/;"	c
WriteAdaptor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^impl<'a> fmt::Debug for WriteAdaptor<'a> {$/;"	c
WriteAdaptor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^impl<'a> io::Write for WriteAdaptor<'a> {$/;"	c
WriteAdaptor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^struct WriteAdaptor<'a> {$/;"	s
Writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^        type Writer = MockWriter<'a>;$/;"	t	implementation:test::MockMakeWriter
Writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^    type Writer = Box<dyn Write>;$/;"	t
Writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^    type Writer = Box<dyn Write>;$/;"	t	implementation:BoxMakeWriter
Writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^    type Writer = Self;$/;"	t	implementation:TestWriter
Writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^    type Writer = W;$/;"	t
Writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^    type Writer: io::Write;$/;"	t	interface:MakeWriter
XDG	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    XDG,$/;"	e	enum:ConfigLevel
YEAR_DELTAS	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^static YEAR_DELTAS: [u8; 401] = [$/;"	v
YEAR_TO_FLAGS	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^static YEAR_TO_FLAGS: [YearFlags; 400] = [$/;"	v
YTAB	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/stub.rs	/^    static YTAB: [[i64; 12]; 2] = [$/;"	v	function:time_to_tm
Year	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Year,$/;"	e	enum:Numeric
YearDiv100	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    YearDiv100,$/;"	e	enum:Numeric
YearFlags	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^impl YearFlags {$/;"	c
YearFlags	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^impl fmt::Debug for YearFlags {$/;"	c
YearFlags	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub struct YearFlags(pub u8);$/;"	s
YearMod100	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    YearMod100,$/;"	e	enum:Numeric
Yellow	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    Yellow,$/;"	e	enum:Color
Zero	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Zero,$/;"	e	enum:Pad
Zip	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs	/^pub struct Zip<T> {$/;"	s
ZipEq	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs	/^impl<I, J> ExactSizeIterator for ZipEq<I, J>$/;"	c
ZipEq	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs	/^impl<I, J> Iterator for ZipEq<I, J>$/;"	c
ZipEq	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs	/^pub struct ZipEq<I, J> {$/;"	s
ZipLongest	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_longest.rs	/^impl<T, U> DoubleEndedIterator for ZipLongest<T, U>$/;"	c
ZipLongest	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_longest.rs	/^impl<T, U> ExactSizeIterator for ZipLongest<T, U>$/;"	c
ZipLongest	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_longest.rs	/^impl<T, U> Iterator for ZipLongest<T, U>$/;"	c
ZipLongest	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_longest.rs	/^pub struct ZipLongest<T, U> {$/;"	s
Zlib	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    Zlib,$/;"	e	enum:ErrorClass
__NonExhaustive	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    __NonExhaustive,$/;"	e	enum:SecondsFormat
__Nonexhaustive	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    __Nonexhaustive = 0xff,$/;"	e	enum:CloneLocal
__anyhow_concat	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/lib.rs	/^    macro_rules! __anyhow_concat {$/;"	M	module:private
__anyhow_stringify	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/lib.rs	/^    macro_rules! __anyhow_stringify {$/;"	M	module:private
__macro_support	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/lib.rs	/^pub mod __macro_support {$/;"	n
__mk_format_args	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/macros.rs	/^macro_rules! __mk_format_args {$/;"	M
__mk_format_string	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/macros.rs	/^macro_rules! __mk_format_string {$/;"	M
__tracing_log	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/macros.rs	/^macro_rules! __tracing_log {$/;"	M
__tracing_stringify	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/macros.rs	/^macro_rules! __tracing_stringify {$/;"	M
_callbacks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    _callbacks: Box<RemoteCallbacks<'cb>>,$/;"	m	struct:RemoteConnection
_dummy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    _dummy: Void,$/;"	m	struct:InternalNumeric
_dummy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    _dummy: (),$/;"	m	struct:Parsed
_dummy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    _dummy: (),$/;"	m	struct:ParseMonthError
_dummy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    _dummy: (),$/;"	m	struct:ParseWeekdayError
_format_event	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    _format_event: PhantomData<fn(E)>,$/;"	m	struct:FormattedFields
_inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    _inner: PhantomData<S>,$/;"	m	struct:Layer
_lock	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^        _lock: LockResult<MutexGuard<'static, ()>>,$/;"	m	struct:tests::TzReset
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    _marker: marker::PhantomData<&'blame raw::git_blame>,$/;"	m	struct:BlameHunk
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    _marker: marker::PhantomData<&'repo Repository>,$/;"	m	struct:Blame
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^    _marker: marker::PhantomData<Object<'repo>>,$/;"	m	struct:Blob
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^    _marker: marker::PhantomData<Object<'repo>>,$/;"	m	struct:BlobWriter
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/branch.rs	/^    _marker: marker::PhantomData<References<'repo>>,$/;"	m	struct:Branches
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cert.rs	/^    _marker: marker::PhantomData<&'a raw::git_cert>,$/;"	m	struct:Cert
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cert.rs	/^    _marker: marker::PhantomData<&'a raw::git_cert>,$/;"	m	struct:CertHostkey
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cert.rs	/^    _marker: marker::PhantomData<&'a raw::git_cert>,$/;"	m	struct:CertX509
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    _marker: marker::PhantomData<Object<'repo>>,$/;"	m	struct:Commit
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    _marker: marker::PhantomData<&'cfg Config>,$/;"	m	struct:ConfigEntries
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    _marker: marker::PhantomData<&'cfg Config>,$/;"	m	struct:ConfigEntry
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^    _marker: marker::PhantomData<&'repo Repository>,$/;"	m	struct:Describe
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    _marker: marker::PhantomData<&'a raw::git_diff_binary>,$/;"	m	struct:DiffBinary
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    _marker: marker::PhantomData<&'a raw::git_diff_binary_file>,$/;"	m	struct:DiffBinaryFile
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    _marker: marker::PhantomData<&'a raw::git_diff_delta>,$/;"	m	struct:DiffDelta
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    _marker: marker::PhantomData<&'a raw::git_diff_file>,$/;"	m	struct:DiffFile
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    _marker: marker::PhantomData<&'a raw::git_diff_hunk>,$/;"	m	struct:DiffHunk
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    _marker: marker::PhantomData<&'a raw::git_diff_line>,$/;"	m	struct:DiffLine
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    _marker: marker::PhantomData<&'repo Repository>,$/;"	m	struct:Diff
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    _marker: marker::PhantomData<&'index Index>,$/;"	m	struct:IndexConflicts
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/mempack.rs	/^    _marker: marker::PhantomData<&'odb Odb<'odb>>,$/;"	m	struct:Mempack
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    _marker: marker::PhantomData<Commit<'repo>>,$/;"	m	struct:AnnotatedCommit
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^    _marker: marker::PhantomData<&'repo Repository>,$/;"	m	struct:Note
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^    _marker: marker::PhantomData<&'repo Repository>,$/;"	m	struct:Notes
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    _marker: marker::PhantomData<&'repo Repository>,$/;"	m	struct:Object
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    _marker: marker::PhantomData<Object<'a>>,$/;"	m	struct:OdbObject
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    _marker: marker::PhantomData<Object<'repo>>,$/;"	m	struct:Odb
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    _marker: marker::PhantomData<Object<'repo>>,$/;"	m	struct:OdbReader
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    _marker: marker::PhantomData<Object<'repo>>,$/;"	m	struct:OdbWriter
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    _marker: marker::PhantomData<&'repo Repository>,$/;"	m	struct:PackBuilder
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    _marker: marker::PhantomData<&'ps Pathspec>,$/;"	m	struct:PathspecMatchList
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/proxy_options.rs	/^    _marker: marker::PhantomData<&'a i32>,$/;"	m	struct:ProxyOptions
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    _marker: marker::PhantomData<&'repo raw::git_rebase>,$/;"	m	struct:Rebase
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    _marker: marker::PhantomData<Rebase<'rebase>>,$/;"	m	struct:RebaseOperation
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    _marker: marker::PhantomData<Refdb<'repo>>,$/;"	m	struct:Reference
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    _marker: marker::PhantomData<Refdb<'repo>>,$/;"	m	struct:References
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    _marker: marker::PhantomData<&'reflog Reflog>,$/;"	m	struct:ReflogEntry
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/refspec.rs	/^    _marker: marker::PhantomData<&'remote raw::git_remote>,$/;"	m	struct:Refspec
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    _marker: marker::PhantomData<&'remote str>,$/;"	m	struct:RemoteHead
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    _marker: marker::PhantomData<&'repo Repository>,$/;"	m	struct:Remote
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revwalk.rs	/^    _marker: marker::PhantomData<&'repo Repository>,$/;"	m	struct:Revwalk
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/signature.rs	/^    _marker: marker::PhantomData<&'a str>,$/;"	m	struct:Signature
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    _marker: marker::PhantomData<&'repo Repository>,$/;"	m	struct:Statuses
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    _marker: marker::PhantomData<&'statuses DiffDelta<'statuses>>,$/;"	m	struct:StatusEntry
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    _marker: marker::PhantomData<&'repo Repository>,$/;"	m	struct:Submodule
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^    _marker: marker::PhantomData<Object<'repo>>,$/;"	m	struct:Tag
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    _marker: marker::PhantomData<&'tree raw::git_tree_entry>,$/;"	m	struct:TreeEntry
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    _marker: marker::PhantomData<Object<'repo>>,$/;"	m	struct:Tree
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/treebuilder.rs	/^    _marker: marker::PhantomData<&'repo Repository>,$/;"	m	struct:TreeBuilder
_marker	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    _marker: marker::PhantomData<Reference<'a>>,$/;"	m	struct:WorktreeAddOptions
_message_prettify	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/message.rs	/^fn _message_prettify(message: CString, comment_char: Option<u8>) -> Result<String, Error> {$/;"	f
_mi	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    _mi: PhantomData<I>,$/;"	m	struct:TupleCombinations
_mt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    _mt: PhantomData<T>$/;"	m	struct:TupleCombinations
_not_send	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/thread.rs	/^    _not_send: PhantomData<UnsafeCell<()>>,$/;"	m	struct:Id
_object	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    _object: E,$/;"	m	struct:ErrorImpl
_p	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    _p: (),$/;"	m	struct:RecordFieldsMarker
_p	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    _p: std::marker::PhantomData<T>,$/;"	m	struct:MakeExtMarker
_p	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^    _p: (),$/;"	m	struct:TestWriter
_p	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    _p: (),$/;"	m	struct:Identity
_private	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    _private: (),$/;"	m	struct:JsonFields
_private	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    _private: (),$/;"	m	struct:DefaultFields
_proxy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    _proxy: ProxyOptions<'cb>,$/;"	m	struct:RemoteConnection
_s	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    _s: PhantomData<fn(S)>,$/;"	m	struct:Layered
_s	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^    _s: PhantomData<fn(S)>,$/;"	m	struct:Handle
_s	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^    _s: PhantomData<fn(S)>,$/;"	m	struct:Layer
_tzreset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^        _tzreset: ::sys::TzReset,$/;"	m	struct:tests::TzReset
_ytab	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        static _ytab: [[i64; 12]; 2] = [$/;"	v	function:common::time_to_tm
a	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    a: Fuse<I>,$/;"	m	struct:Interleave
a	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    a: I,$/;"	m	struct:Product
a	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    a: Peekable<I>,$/;"	m	struct:MergeBy
a	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs	/^    a: I,$/;"	m	struct:ZipEq
a	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_longest.rs	/^    a: Fuse<T>,$/;"	m	struct:ZipLongest
a_cur	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    a_cur: Option<I::Item>,$/;"	m	struct:Product
abbreviated_size	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^    pub fn abbreviated_size(&mut self, size: u32) -> &mut Self {$/;"	P	implementation:DescribeFormatOptions
abort	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    pub fn abort(&mut self) -> Result<(), Error> {$/;"	P	implementation:Rebase
abs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn abs(&self) -> Duration {$/;"	P	implementation:Duration
abs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/display.rs	/^fn abs(i: i32) -> i32 {$/;"	f
acquire_privileges	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn acquire_privileges() {$/;"	f	module:inner
action	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^        fn action($/;"	P	implementation:tests::DummyTransport
action	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^    fn action(&self, url: &str, action: Service)$/;"	P	interface:SmartSubtransport
adaptors	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod adaptors;$/;"	n
add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn add(self, rhs: OldDuration) -> Date<Tz> {$/;"	P	implementation:Date
add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn add(self, rhs: OldDuration) -> DateTime<Tz> {$/;"	P	implementation:DateTime
add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn add(self, rhs: OldDuration) -> NaiveDate {$/;"	P	implementation:NaiveDate
add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn add(self, rhs: OldDuration) -> NaiveDateTime {$/;"	P	implementation:NaiveDateTime
add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn add(self, rhs: OldDuration) -> NaiveTime {$/;"	P	implementation:NaiveTime
add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn add(self, rhs: FixedOffset) -> DateTime<Tz> {$/;"	P	implementation:DateTime
add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn add(self, rhs: FixedOffset) -> NaiveDateTime {$/;"	P	implementation:NaiveDateTime
add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn add(self, rhs: FixedOffset) -> NaiveTime {$/;"	P	implementation:NaiveTime
add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn add(self, rhs: Duration) -> Duration {$/;"	P	implementation:Duration
add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^    pub(crate) fn add(&mut self, two: Styles) {$/;"	P	implementation:Style
add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub fn add(&mut self, entry: &IndexEntry) -> Result<(), Error> {$/;"	P	implementation:Index
add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/size_hint.rs	/^pub fn add(a: SizeHint, b: SizeHint) -> SizeHint {$/;"	f
add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn add(self, rhs: Duration) -> Duration {$/;"	P	implementation:Duration
add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn add(self, other: Duration) -> SteadyTime {$/;"	P	implementation:SteadyTime
add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn add(self, other: Duration) -> Timespec {$/;"	P	implementation:Timespec
add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn add(self, other: Duration) -> Tm {$/;"	P	implementation:Tm
add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn add(mut self, other: Duration) -> SteadyTime {$/;"	P	implementation:inner::unix::SteadyTime
add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn add(self, other: Duration) -> SteadyTime {$/;"	P	implementation:inner::mac::SteadyTime
add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn add(mut self, other: Duration) -> SteadyTime {$/;"	P	implementation:inner::SteadyTime
add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn add(self, _other: Duration) -> SteadyTime {$/;"	P	implementation:inner::SteadyTime
add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn add(self, other: Duration) -> SteadyTime {$/;"	P	implementation:inner::SteadyTime
add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    pub(crate) fn add(&mut self, directive: T) {$/;"	P	implementation:DirectiveSet
add_a_submodule	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    fn add_a_submodule() {$/;"	f	module:tests
add_all	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    fn add_all() {$/;"	f	module:tests
add_all	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub fn add_all<T, I>($/;"	P	implementation:Index
add_assign	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn add_assign(&mut self, rhs: OldDuration) {$/;"	P	implementation:NaiveDate
add_assign	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn add_assign(&mut self, rhs: OldDuration) {$/;"	P	implementation:NaiveDateTime
add_assign	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn add_assign(&mut self, rhs: OldDuration) {$/;"	P	implementation:NaiveTime
add_command	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    fn add_command(&mut self, cmd: Option<&str>) {$/;"	P	implementation:CredentialHelper
add_directive	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    pub fn add_directive(mut self, directive: Directive) -> Self {$/;"	P	implementation:EnvFilter
add_disk_alternate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    pub fn add_disk_alternate(&self, path: &str) -> Result<(), Error> {$/;"	P	implementation:Odb
add_fields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    fn add_fields(&self, current: &'a mut String, fields: &Record<'_>) -> fmt::Result {$/;"	P	implementation:JsonFields
add_fields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn add_fields(&self, current: &'writer mut String, fields: &span::Record<'_>) -> fmt::Result/;"	P	interface:FormatFields
add_fields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^    fn add_fields(&self, current: &'writer mut String, fields: &span::Record<'_>) -> fmt::Result/;"	P	implementation:Pretty
add_file	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn add_file(&mut self, path: &Path, level: ConfigLevel, force: bool) -> Result<(), Error/;"	P	implementation:Config
add_finalize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    pub fn add_finalize(&mut self) -> Result<(), Error> {$/;"	P	implementation:Submodule
add_frombuffer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub fn add_frombuffer(&mut self, entry: &IndexEntry, data: &[u8]) -> Result<(), Error> {$/;"	P	implementation:Index
add_frombuffer_then_read	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    fn add_frombuffer_then_read() {$/;"	f	module:tests
add_ignore_rule	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn add_ignore_rule(&self, rules: &str) -> Result<(), Error> {$/;"	P	implementation:Repository
add_new_mempack_backend	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    pub fn add_new_mempack_backend<'odb>($/;"	P	implementation:Odb
add_note	/home/asayers/projects/orpa/src/main.rs	/^fn add_note(repo: &Repository, oid: Oid, new_note: &str) -> anyhow::Result<()> {$/;"	f
add_path	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub fn add_path(&mut self, path: &Path) -> Result<(), Error> {$/;"	P	implementation:Index
add_scalar	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/size_hint.rs	/^pub fn add_scalar(sh: SizeHint, x: usize) -> SizeHint {$/;"	f
add_subrepos	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^        fn add_subrepos(repo: &Repository, list: &mut Vec<Repository>) -> Result<(), Error> {$/;"	f	method:Repository::update_submodules
add_then_read	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    fn add_then_read() {$/;"	f	module:tests
add_to_index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    pub fn add_to_index(&mut self, write_index: bool) -> Result<(), Error> {$/;"	P	implementation:Submodule
add_with_leapsecond	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^fn add_with_leapsecond<T>(lhs: &T, rhs: i32) -> T$/;"	f
additional_len	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs	/^    fn additional_len(&self) -> usize {$/;"	f
advance	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs	/^    fn advance(&mut self) {$/;"	P	implementation:CompleteState
advance	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs	/^    fn advance(&mut self) {$/;"	f
aggreg1	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        fn aggreg1() {$/;"	f	module:tests::styles_combine_complex
aggreg2	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        fn aggreg2() {$/;"	f	module:tests::styles_combine_complex
aggreg3	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        fn aggreg3() {$/;"	f	module:tests::styles_combine_complex
aggregate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs	/^    pub fn aggregate<FO, R>(self, mut operation: FO) -> HashMap<K, R>$/;"	f
all	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        fn all() {$/;"	f	module:tests::styles_combine_complex
all	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn all(&mut self, find: bool) -> &mut DiffFindOptions {$/;"	P	implementation:DiffFindOptions
all	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    fn all<G>(&mut self, mut f: G) -> bool$/;"	f
all	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs	/^pub fn all<I, F>(iterable: I, f: F) -> bool$/;"	f
all_equal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn all_equal(&mut self) -> bool$/;"	P	interface:Itertools
alloc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/lib.rs	/^mod alloc {$/;"	n
allow_conflicts	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn allow_conflicts(&mut self, allow: bool) -> &mut CheckoutBuilder<'cb> {$/;"	P	implementation:CheckoutBuilder
allow_fetch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    allow_fetch: bool,$/;"	m	struct:SubmoduleUpdateOptions
allow_fetch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    pub fn allow_fetch(&mut self, b: bool) -> &mut Self {$/;"	P	implementation:SubmoduleUpdateOptions
altzone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^    static altzone: time_t;$/;"	v
altzone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        static altzone: time_t;$/;"	v	module:inner
always_use_long_format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^    pub fn always_use_long_format(&mut self, long: bool) -> &mut Self {$/;"	P	implementation:DescribeFormatOptions
am_pm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/locales.rs	/^pub(crate) fn am_pm(locale: Locale) -> &'static [&'static str] {$/;"	f
amend	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    pub fn amend($/;"	P	implementation:Commit
ancestor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub ancestor: Option<IndexEntry>,$/;"	m	struct:IndexConflict
ancestor_label	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    ancestor_label: Option<CString>,$/;"	m	struct:CheckoutBuilder
ancestor_label	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn ancestor_label(&mut self, label: &str) -> &mut CheckoutBuilder<'cb> {$/;"	P	implementation:CheckoutBuilder
and_hms	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn and_hms(&self, hour: u32, min: u32, sec: u32) -> DateTime<Tz> {$/;"	P	implementation:Date
and_hms	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn and_hms(&self, hour: u32, min: u32, sec: u32) -> NaiveDateTime {$/;"	P	implementation:NaiveDate
and_hms_micro	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn and_hms_micro(&self, hour: u32, min: u32, sec: u32, micro: u32) -> DateTime<Tz> {$/;"	P	implementation:Date
and_hms_micro	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn and_hms_micro(&self, hour: u32, min: u32, sec: u32, micro: u32) -> NaiveDateTime {$/;"	P	implementation:NaiveDate
and_hms_micro_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn and_hms_micro_opt($/;"	P	implementation:Date
and_hms_micro_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn and_hms_micro_opt($/;"	P	implementation:NaiveDate
and_hms_micro_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn and_hms_micro_opt($/;"	P	implementation:LocalResult
and_hms_milli	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn and_hms_milli(&self, hour: u32, min: u32, sec: u32, milli: u32) -> DateTime<Tz> {$/;"	P	implementation:Date
and_hms_milli	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn and_hms_milli(&self, hour: u32, min: u32, sec: u32, milli: u32) -> NaiveDateTime {$/;"	P	implementation:NaiveDate
and_hms_milli_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn and_hms_milli_opt($/;"	P	implementation:Date
and_hms_milli_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn and_hms_milli_opt($/;"	P	implementation:NaiveDate
and_hms_milli_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn and_hms_milli_opt($/;"	P	implementation:LocalResult
and_hms_nano	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn and_hms_nano(&self, hour: u32, min: u32, sec: u32, nano: u32) -> DateTime<Tz> {$/;"	P	implementation:Date
and_hms_nano	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn and_hms_nano(&self, hour: u32, min: u32, sec: u32, nano: u32) -> NaiveDateTime {$/;"	P	implementation:NaiveDate
and_hms_nano_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn and_hms_nano_opt($/;"	P	implementation:Date
and_hms_nano_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn and_hms_nano_opt($/;"	P	implementation:NaiveDate
and_hms_nano_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn and_hms_nano_opt($/;"	P	implementation:LocalResult
and_hms_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn and_hms_opt(&self, hour: u32, min: u32, sec: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:Date
and_hms_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn and_hms_opt(&self, hour: u32, min: u32, sec: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDate
and_hms_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn and_hms_opt(self, hour: u32, min: u32, sec: u32) -> LocalResult<DateTime<Tz>> {$/;"	P	implementation:LocalResult
and_then	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn and_then<L>(self, layer: L) -> Layered<L, Self, S>$/;"	P	interface:Layer
and_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn and_time(&self, time: NaiveTime) -> Option<DateTime<Tz>> {$/;"	P	implementation:Date
and_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn and_time(&self, time: NaiveTime) -> NaiveDateTime {$/;"	P	implementation:NaiveDate
and_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn and_time(self, time: NaiveTime) -> LocalResult<DateTime<Tz>> {$/;"	P	implementation:LocalResult
annotated_commit_from_fetchhead	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn annotated_commit_from_fetchhead($/;"	P	implementation:Repository
ansi	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    ansi: bool,$/;"	m	struct:FmtCtx
ansi	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    ansi: bool,$/;"	m	struct:FmtLevel
ansi	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    ansi: bool,$/;"	m	struct:FullCtx
any	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs	/^pub fn any<I, F>(iterable: I, f: F) -> bool$/;"	f
anyhow	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/macros.rs	/^macro_rules! anyhow {$/;"	M
anyhow_kind	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/kind.rs	/^    fn anyhow_kind(&self) -> Adhoc {$/;"	P	interface:AdhocKind
anyhow_kind	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/kind.rs	/^    fn anyhow_kind(&self) -> Boxed {$/;"	P	interface:BoxedKind
anyhow_kind	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/kind.rs	/^    fn anyhow_kind(&self) -> Trait {$/;"	P	interface:TraitKind
append	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    pub fn append($/;"	P	implementation:Reflog
append	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^        extern "C" fn append($/;"	f	method:Repository::submodules
apply	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod apply;$/;"	n
apply	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn apply($/;"	P	implementation:Repository
apply_hunks_and_delta	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/apply.rs	/^    fn apply_hunks_and_delta() {$/;"	f	module:tests
arr	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^    arr: &'a StringArray,$/;"	m	struct:Iter
arr	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^    arr: &'a StringArray,$/;"	m	struct:IterBytes
as_blob	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    pub fn as_blob(&self) -> Option<&Blob<'repo>> {$/;"	P	implementation:Object
as_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^    pub fn as_bytes(&self) -> &[u8] {$/;"	P	implementation:Oid
as_commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    pub fn as_commit(&self) -> Option<&Commit<'repo>> {$/;"	P	implementation:Object
as_field	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/field.rs	/^    fn as_field(&self, metadata: &Metadata<'_>) -> Option<Field> {$/;"	P	implementation:Field
as_field	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/field.rs	/^    fn as_field(&self, metadata: &Metadata<'_>) -> Option<Field> {$/;"	P	implementation:str
as_field	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/field.rs	/^    fn as_field(&self, metadata: &Metadata<'_>) -> Option<Field>;$/;"	P	interface:AsField
as_hostkey	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cert.rs	/^    pub fn as_hostkey(&self) -> Option<&CertHostkey<'a>> {$/;"	P	implementation:Cert
as_id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    fn as_id(&self) -> Option<&Id>;$/;"	P	interface:AsId
as_mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs	/^    pub fn as_mut(&mut self) -> EitherOrBoth<&mut A, &mut B> {$/;"	P	implementation:EitherOrBoth
as_object	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^    pub fn as_object(&self) -> &Object<'repo> {$/;"	P	implementation:Blob
as_object	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    pub fn as_object(&self) -> &Object<'repo> {$/;"	P	implementation:Commit
as_object	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^    pub fn as_object(&self) -> &Object<'repo> {$/;"	P	implementation:Tag
as_object	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    pub fn as_object(&self) -> &Object<'repo> {$/;"	P	implementation:Tree
as_ref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    fn as_ref(&self) -> &(dyn StdError + 'static) {$/;"	P	implementation:Error
as_ref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    fn as_ref(&self) -> &(dyn StdError + Send + Sync + 'static) {$/;"	P	implementation:Error
as_ref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^    fn as_ref(&self) -> &[u8] {$/;"	P	implementation:Oid
as_ref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs	/^    pub fn as_ref(&self) -> EitherOrBoth<&A, &B> {$/;"	P	implementation:EitherOrBoth
as_ref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    fn as_ref(&self) -> &str {$/;"	P	implementation:MatchPattern
as_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/buf.rs	/^    pub fn as_str(&self) -> Option<&str> {$/;"	P	implementation:Buf
as_tag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    pub fn as_tag(&self) -> Option<&Tag<'repo>> {$/;"	P	implementation:Object
as_tree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    pub fn as_tree(&self) -> Option<&Tree<'repo>> {$/;"	P	implementation:Object
as_u32	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^        fn as_u32(flag: i32) -> u32 {$/;"	f	method:DiffDelta::flags
as_u32	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^        fn as_u32(flag: u32) -> u32 {$/;"	f	method:DiffDelta::flags
as_usize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/thread.rs	/^    pub(crate) fn as_usize(self) -> usize {$/;"	P	implementation:Id
as_x509	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cert.rs	/^    pub fn as_x509(&self) -> Option<&CertX509<'a>> {$/;"	P	implementation:Cert
asctime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn asctime(&self) -> TmFmt {$/;"	P	implementation:Tm
assert_closed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^        fn assert_closed(&self, span: &str) {$/;"	P	implementation:tests::CloseHandle
assert_closed_in_order	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^        fn assert_closed_in_order(&self, order: impl AsRef<[&'static str]>) {$/;"	P	implementation:tests::CloseHandle
assert_equal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^pub fn assert_equal<I, J>(a: I, b: J)$/;"	f
assert_err	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^    macro_rules! assert_err {$/;"	M	module:tests
assert_last_closed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^        fn assert_last_closed(&self, span: Option<&str>) {$/;"	P	implementation:tests::CloseHandle
assert_lookup_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^        fn assert_lookup_span<T: for<'a> crate::registry::LookupSpan<'a>>(_: T) {}$/;"	f	function:test::is_lookup_span
assert_lookup_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^        fn assert_lookup_span<T: for<'a> crate::registry::LookupSpan<'a>>(_: T) {}$/;"	f	function:test::is_lookup_span
assert_not_removed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^        fn assert_not_removed(&self, span: &str) {$/;"	P	implementation:tests::CloseHandle
assert_open	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^        fn assert_open(&self, span: &str) {$/;"	P	implementation:tests::CloseHandle
assert_removed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^        fn assert_removed(&self, span: &str) {$/;"	P	implementation:tests::CloseHandle
assert_repo_path_ok	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^    macro_rules! assert_repo_path_ok {$/;"	M	module:tests
assert_subscriber	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn assert_subscriber(_s: impl Subscriber) {}$/;"	f	module:tests
at	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn at(clock: Timespec) -> Tm {$/;"	f
at_utc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn at_utc(clock: Timespec) -> Tm {$/;"	f
augment_clap	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.21/src/lib.rs	/^    fn augment_clap<'a, 'b>(app: clap::App<'a, 'b>) -> clap::App<'a, 'b> {$/;"	P	implementation:Box
augment_clap	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.21/src/lib.rs	/^    fn augment_clap<'a, 'b>(app: clap::App<'a, 'b>) -> clap::App<'a, 'b> {$/;"	P	interface:StructOptInternal
author	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    pub fn author(&self) -> Signature<'_> {$/;"	P	implementation:Commit
author	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^    pub fn author(&self) -> Signature<'_> {$/;"	P	implementation:Note
auto	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/proxy_options.rs	/^    pub fn auto(&mut self) -> &mut Self {$/;"	P	implementation:ProxyOptions
b	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    b: Fuse<J>,$/;"	m	struct:Interleave
b	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    b: J,$/;"	m	struct:Product
b	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    b: Peekable<J>,$/;"	m	struct:MergeBy
b	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs	/^    b: J,$/;"	m	struct:ZipEq
b	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_longest.rs	/^    b: Fuse<U>,$/;"	m	struct:ZipLongest
b_orig	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    b_orig: J,$/;"	m	struct:Product
backlog	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tee.rs	/^    backlog: VecDeque<A>,$/;"	m	struct:TeeBuffer
backtrace	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/backtrace.rs	/^macro_rules! backtrace {$/;"	M
backtrace	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^    fn backtrace(&self) -> Option<&Backtrace> {$/;"	f
backtrace	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    backtrace: Option<Backtrace>,$/;"	m	struct:ErrorImpl
backtrace	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    fn backtrace(&self) -> Option<&Backtrace> {$/;"	f
backtrace	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    pub fn backtrace(&self) -> &Backtrace {$/;"	P	implementation:Error
backtrace	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    pub(crate) unsafe fn backtrace(this: Ref<Self>) -> &Backtrace {$/;"	P	implementation:ErrorImpl
backtrace	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/lib.rs	/^mod backtrace;$/;"	n
backtrace	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/wrapper.rs	/^    fn backtrace(&self) -> Option<&crate::backtrace::Backtrace> {$/;"	P	implementation:BoxedError
backtrace_if_absent	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/backtrace.rs	/^macro_rules! backtrace_if_absent {$/;"	M
bail	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/macros.rs	/^macro_rules! bail {$/;"	M
bare	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    bare: bool,$/;"	m	struct:RepoBuilder
bare	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn bare(&mut self, bare: bool) -> &mut RepoBuilder<'cb> {$/;"	P	implementation:RepoBuilder
bare	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn bare(&mut self, bare: bool) -> &mut RepositoryInitOptions {$/;"	P	implementation:RepositoryInitOptions
base_interest	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    fn base_interest(&self) -> Interest {$/;"	P	implementation:EnvFilter
base_level	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    base_level: LevelFilter,$/;"	m	struct:MatchSet
batching	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub fn batching<I, F>(iter: I, f: F) -> Batching<I, F> {$/;"	f
batching	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn batching<B, F>(self, f: F) -> Batching<Self, F>$/;"	P	interface:Itertools
bgcolor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    bgcolor: Option<Color>,$/;"	m	struct:ColoredString
bgcolor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    pub fn bgcolor(&self) -> Option<Color> {$/;"	P	implementation:ColoredString
binary	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub binary: Option<&'c mut BinaryCb<'d>>,$/;"	m	struct:DiffCallbacks
binary_cb_c	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^pub extern "C" fn binary_cb_c($/;"	f
black	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn black(self) -> ColoredString$/;"	P	interface:Colorize
blame	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    blame: &'blame Blame<'blame>,$/;"	m	struct:BlameIter
blame	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod blame;$/;"	n
blame_file	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn blame_file($/;"	P	implementation:Repository
blink	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn blink(mut self) -> ColoredString {$/;"	P	implementation:ColoredString
blink	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn blink(self) -> ColoredString {$/;"	P	implementation:str
blink	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn blink(self) -> ColoredString;$/;"	P	interface:Colorize
blob	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod blob;$/;"	n
blob	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn blob(&self, data: &[u8]) -> Result<Oid, Error> {$/;"	P	implementation:Repository
blob_path	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn blob_path(&self, path: &Path) -> Result<Oid, Error> {$/;"	P	implementation:Repository
blob_writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn blob_writer(&self, hintpath: Option<&Path>) -> Result<BlobWriter<'_>, Error> {$/;"	P	implementation:Repository
blue	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn blue(self) -> ColoredString$/;"	P	interface:Colorize
bold	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn bold(mut self) -> ColoredString {$/;"	P	implementation:ColoredString
bold	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn bold(self) -> ColoredString {$/;"	P	implementation:str
bold	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn bold(self) -> ColoredString;$/;"	P	interface:Colorize
bold	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn bold(&self) -> Style {$/;"	f
bool	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^    impl Convert<libc::c_int> for bool {$/;"	c	module:impls
borrow	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/stdlib.rs	/^    pub(crate) mod borrow {$/;"	n	module:no_std
both	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs	/^    pub fn both(self) -> Option<(A, B)> {$/;"	P	implementation:EitherOrBoth
bottom_group	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    bottom_group: usize,$/;"	m	struct:GroupInner
boxed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^    pub unsafe fn boxed(self) -> Box<T> {$/;"	P	implementation:Own
branch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    branch: Option<CString>,$/;"	m	struct:RepoBuilder
branch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn branch(&mut self, branch: &str) -> &mut RepoBuilder<'cb> {$/;"	P	implementation:RepoBuilder
branch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod branch;$/;"	n
branch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn branch($/;"	P	implementation:Repository
branch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    pub fn branch(&self) -> Option<&str> {$/;"	P	implementation:Submodule
branch_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    pub fn branch_bytes(&self) -> Option<&[u8]> {$/;"	P	implementation:Submodule
branch_from_annotated_commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn branch_from_annotated_commit($/;"	P	implementation:Repository
branch_remote_name	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn branch_remote_name(&self, refname: &str) -> Result<Buf, Error> {$/;"	P	implementation:Repository
branch_upstream_name	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn branch_upstream_name(&self, refname: &str) -> Result<Buf, Error> {$/;"	P	implementation:Repository
branch_upstream_remote	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn branch_upstream_remote(&self, refname: &str) -> Result<Buf, Error> {$/;"	P	implementation:Repository
branches	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn branches(&self, filter: Option<BranchType>) -> Result<Branches<'_>, Error> {$/;"	P	implementation:Repository
break_rewries	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn break_rewries(&mut self, find: bool) -> &mut DiffFindOptions {$/;"	P	implementation:DiffFindOptions
break_rewrite_threshold	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn break_rewrite_threshold(&mut self, thresh: u16) -> &mut DiffFindOptions {$/;"	P	implementation:DiffFindOptions
break_rewrites	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn break_rewrites(&mut self, find: bool) -> &mut DiffFindOptions {$/;"	P	implementation:DiffFindOptions
break_rewrites_for_renames_only	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn break_rewrites_for_renames_only(&mut self, b: bool) -> &mut DiffFindOptions {$/;"	P	implementation:DiffFindOptions
bright_black	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn bright_black(self) -> ColoredString$/;"	P	interface:Colorize
bright_blue	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn bright_blue(self) -> ColoredString$/;"	P	interface:Colorize
bright_color_fn	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn bright_color_fn() {$/;"	f	module:tests
bright_cyan	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn bright_cyan(self) -> ColoredString$/;"	P	interface:Colorize
bright_green	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn bright_green(self) -> ColoredString$/;"	P	interface:Colorize
bright_magenta	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn bright_magenta(self) -> ColoredString$/;"	P	interface:Colorize
bright_purple	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn bright_purple(self) -> ColoredString$/;"	P	interface:Colorize
bright_red	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn bright_red(self) -> ColoredString$/;"	P	interface:Colorize
bright_white	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn bright_white(self) -> ColoredString$/;"	P	interface:Colorize
bright_yellow	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn bright_yellow(self) -> ColoredString$/;"	P	interface:Colorize
buf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod buf;$/;"	n
buf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs	/^    buf: VecDeque<I::Item>,$/;"	m	struct:MultiPeek
buf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs	/^    buf: VecDeque<I::Item>,$/;"	m	struct:PeekNth
buf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^    buf: T::Buffer,$/;"	m	struct:TupleBuffer
buf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^    buf: T::Buffer,$/;"	m	struct:Tuples
buf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^        buf: &'a Mutex<Vec<u8>>,$/;"	m	struct:test::MockMakeWriter
buf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^        buf: &'a Mutex<Vec<u8>>,$/;"	m	struct:test::MockWriter
buf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^        pub(crate) fn buf(&self) -> io::Result<MutexGuard<'a, Vec<u8>>> {$/;"	P	implementation:test::MockWriter
buffer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^    fn buffer() {$/;"	f	module:tests
buffer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    buffer: Vec<vec::IntoIter<I::Item>>,$/;"	m	struct:GroupInner
buffer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lazy_buffer.rs	/^    buffer: Vec<I::Item>,$/;"	m	struct:LazyBuffer
buffers	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/patch.rs	/^    buffers: PhantomData<&'buffers ()>,$/;"	m	struct:Patch
build	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^pub mod build;$/;"	n
builder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn builder() -> LayerBuilder<S> {$/;"	P	implementation:Layer
builder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn builder() -> SubscriberBuilder {$/;"	P	implementation:Subscriber
busy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    busy: u64,$/;"	m	struct:Timings
by_config	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn by_config(&mut self) -> &mut DiffFindOptions {$/;"	P	implementation:DiffFindOptions
by_cs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    by_cs: RwLock<HashMap<callsite::Identifier, directive::CallsiteMatcher>>,$/;"	m	struct:EnvFilter
by_id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    by_id: RwLock<HashMap<span::Id, directive::SpanMatcher>>,$/;"	m	struct:EnvFilter
by_mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^    pub fn by_mut(&mut self) -> Mut<T> {$/;"	P	implementation:Own
by_ref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^    pub fn by_ref(&self) -> Ref<T> {$/;"	P	implementation:Own
bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/refspec.rs	/^    pub fn bytes(&self) -> &[u8] {$/;"	P	implementation:Refspec
bytes2path	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^pub fn bytes2path(b: &[u8]) -> &Path {$/;"	f
c_cmp_to_ordering	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^pub fn c_cmp_to_ordering(cmp: c_int) -> Ordering {$/;"	f
c_try	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^pub fn c_try(ret: libc::c_int) -> Result<libc::c_int, Error> {$/;"	f
call	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^macro_rules! call {$/;"	M
call	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^macro_rules! call {$/;"	M
call	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod call;$/;"	n
call	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs	/^    fn call(&mut self, t: Result<T, E>) -> Self::Out {$/;"	f
call	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs	/^    fn call(&mut self, t: T) -> Self::Out {$/;"	P	implementation:MapSpecialCaseFnInto
call	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs	/^    fn call(&mut self, t: T) -> Self::Out;$/;"	P	interface:MapSpecialCaseFn
call	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    macro_rules! call {$/;"	M	module:inner
call_mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    fn call_mut(&mut self, _arg: A) -> Self::Key {$/;"	P	implementation:ChunkIndex
call_mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    fn call_mut(&mut self, arg: A) -> Self::Key {$/;"	f
call_mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    fn call_mut(&mut self, arg: A) -> Self::Key;$/;"	P	interface:KeyFunction
callback	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    pub callback: &'a mut ForeachCb<'a>,$/;"	m	struct:ForeachCbData
callback	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/stash.rs	/^    pub callback: &'a mut StashCb<'a>,$/;"	m	struct:StashCbData
callback	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^            pub callback: &'a mut TreeWalkCb<'a, T>,$/;"	m	struct:Tree::walk::TreeWalkCbData
callbacks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    callbacks: Option<RemoteCallbacks<'cb>>,$/;"	m	struct:FetchOptions
callbacks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    callbacks: Option<RemoteCallbacks<'cb>>,$/;"	m	struct:PushOptions
callsite	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/macros.rs	/^macro_rules! callsite {$/;"	M
callsite2	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/macros.rs	/^macro_rules! callsite2 {$/;"	M
callsite_enabled_includes_span_directive	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    fn callsite_enabled_includes_span_directive() {$/;"	f	module:tests
callsite_enabled_includes_span_directive_field	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    fn callsite_enabled_includes_span_directive_field() {$/;"	f	module:tests
callsite_enabled_includes_span_directive_multiple_fields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    fn callsite_enabled_includes_span_directive_multiple_fields() {$/;"	f	module:tests
callsite_enabled_no_span_directive	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    fn callsite_enabled_no_span_directive() {$/;"	f	module:tests
callsite_off	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    fn callsite_off() {$/;"	f	module:tests
cares_about	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn cares_about(&self, meta: &Metadata<'_>) -> bool {$/;"	P	implementation:Directive
cares_about	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn cares_about(&self, meta: &Metadata<'_>) -> bool {$/;"	P	implementation:StaticDirective
cares_about	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn cares_about(&self, meta: &Metadata<'_>) -> bool;$/;"	P	interface:Match
cares_about_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    fn cares_about_span(&self, span: &span::Id) -> bool {$/;"	P	implementation:EnvFilter
cartesian_product	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub fn cartesian_product<I, J>(mut i: I, j: J) -> Product<I, J>$/;"	f
cartesian_product	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn cartesian_product<J>(self, other: J) -> Product<Self, J::IntoIter>$/;"	P	interface:Itertools
cast	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^    pub fn cast<U>(self) -> Mut<'a, U> {$/;"	P	implementation:Mut
cast	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^    pub fn cast<U>(self) -> Own<U> {$/;"	P	implementation:Own
cast	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^    pub fn cast<U>(self) -> Ref<'a, U> {$/;"	P	implementation:Ref
cast	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cert.rs	/^    fn cast<T>(&self, kind: raw::git_cert_t) -> Option<&T> {$/;"	P	implementation:Cert
cast	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    fn cast<T>(&self, kind: ObjectType) -> Option<&T> {$/;"	P	implementation:Object
cast_into	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    fn cast_into<T>(self, kind: ObjectType) -> Result<T, Object<'repo>> {$/;"	P	implementation:Object
cast_or_panic	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    fn cast_or_panic<T>(self, kind: ObjectType) -> T {$/;"	P	implementation:Object
cast_or_panic	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    fn cast_or_panic<T>(self, kind: ObjectType) -> T;$/;"	P	interface:CastOrPanic
cb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    cb: Option<Box<IndexerProgress<'repo>>>,$/;"	m	struct:OdbPackwriterCb
cert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^pub mod cert;$/;"	n
certificate_check	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^    certificate_check: Option<Box<CertificateCheck<'a>>>,$/;"	m	struct:RemoteCallbacks
certificate_check	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^    pub fn certificate_check<F>(&mut self, cb: F) -> &mut RemoteCallbacks<'a>$/;"	P	implementation:RemoteCallbacks
certificate_check_cb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^extern "C" fn certificate_check_cb($/;"	f
chain	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    pub fn chain(&self) -> Chain {$/;"	P	implementation:Error
chain	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    pub(crate) unsafe fn chain(this: Ref<Self>) -> Chain {$/;"	P	implementation:ErrorImpl
chain	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/lib.rs	/^mod chain;$/;"	n
chain	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs	/^pub fn chain<I, J>(i: I, j: J) -> iter::Chain<<I as IntoIterator>::IntoIter, <J as IntoIterator>/;"	f
char	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn char(s: &str, c1: u8) -> ParseResult<&str> {$/;"	f
check	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    macro_rules! check {$/;"	M	function:test_parse
check	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        fn check((y1, m1, d1): (i32, u32, u32), (y2, m2, d2): (i32, u32, u32), diff: Duration) {$/;"	f	function:tests::test_date_sub
check	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        fn check((y1, m1, d1): (i32, u32, u32), rhs: Duration, ymd: Option<(i32, u32, u32)>) {$/;"	f	function:tests::test_date_add
check	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        fn check(year: i32, month: u32, day: u32, ordinal: u32) {$/;"	f	function:tests::test_date_fields
check	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn check($/;"	f	function:tests::test_datetime_add
check	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^        fn check(expected: bool, flags: YearFlags, month1: u32, day1: u32, month2: u32, day2: u3/;"	f	function:tests::test_mdf_valid
check	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^        fn check(expected: bool, flags: YearFlags, ordinal1: u32, ordinal2: u32) {$/;"	f	function:tests::test_of
check	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^        fn check(flags: YearFlags, month: u32, day: u32) {$/;"	f	function:tests::test_mdf_with_fields
check	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^        fn check(flags: YearFlags, ordinal: u32) {$/;"	f	function:tests::test_of_with_fields
check	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^        macro_rules! check {$/;"	M	function:tests::test_time_add
check	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^        macro_rules! check {$/;"	M	function:tests::test_time_sub
check	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/apply.rs	/^    pub fn check(&mut self, check: bool) -> &mut Self {$/;"	P	implementation:ApplyOptions
check	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/error.rs	/^        macro_rules! check( ($($e:ident,)*) => ($/;"	M	method:Error::raw_class
check	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/error.rs	/^        macro_rules! check( ($($e:ident,)*) => ($/;"	M	method:Error::raw_code
check	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/panic.rs	/^pub fn check() {$/;"	f
check	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^        macro_rules! check( ($($raw:ident => $real:ident),*) => ($/;"	M	method:Repository::state
checked_add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn checked_add(&self, rhs: &Duration) -> Option<Duration> {$/;"	P	implementation:Duration
checked_add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn checked_add(&self, rhs: &Duration) -> Option<Duration> {$/;"	P	implementation:Duration
checked_add_signed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn checked_add_signed(self, rhs: OldDuration) -> Option<Date<Tz>> {$/;"	P	implementation:Date
checked_add_signed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn checked_add_signed(self, rhs: OldDuration) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
checked_add_signed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn checked_add_signed(self, rhs: OldDuration) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
checked_add_signed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn checked_add_signed(self, rhs: OldDuration) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
checked_sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn checked_sub(&self, rhs: &Duration) -> Option<Duration> {$/;"	P	implementation:Duration
checked_sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn checked_sub(&self, rhs: &Duration) -> Option<Duration> {$/;"	P	implementation:Duration
checked_sub_signed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn checked_sub_signed(self, rhs: OldDuration) -> Option<Date<Tz>> {$/;"	P	implementation:Date
checked_sub_signed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn checked_sub_signed(self, rhs: OldDuration) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
checked_sub_signed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn checked_sub_signed(self, rhs: OldDuration) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
checked_sub_signed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn checked_sub_signed(self, rhs: OldDuration) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
checkout	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    checkout: Option<CheckoutBuilder<'cb>>,$/;"	m	struct:RepoBuilder
checkout	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    pub fn checkout(&mut self, opts: CheckoutBuilder<'cb>) -> &mut Self {$/;"	P	implementation:SubmoduleUpdateOptions
checkout_builder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cherrypick.rs	/^    checkout_builder: Option<CheckoutBuilder<'cb>>,$/;"	m	struct:CherrypickOptions
checkout_builder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cherrypick.rs	/^    pub fn checkout_builder(&mut self, cb: CheckoutBuilder<'cb>) -> &mut Self {$/;"	P	implementation:CherrypickOptions
checkout_builder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revert.rs	/^    checkout_builder: Option<CheckoutBuilder<'cb>>,$/;"	m	struct:RevertOptions
checkout_builder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revert.rs	/^    pub fn checkout_builder(&mut self, cb: CheckoutBuilder<'cb>) -> &mut Self {$/;"	P	implementation:RevertOptions
checkout_builder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    checkout_builder: CheckoutBuilder<'cb>,$/;"	m	struct:SubmoduleUpdateOptions
checkout_head	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn checkout_head(&self, opts: Option<&mut CheckoutBuilder<'_>>) -> Result<(), Error> {$/;"	P	implementation:Repository
checkout_index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn checkout_index($/;"	P	implementation:Repository
checkout_options	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    checkout_options: Option<CheckoutBuilder<'cb>>,$/;"	m	struct:RebaseOptions
checkout_options	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    pub fn checkout_options(&mut self, opts: CheckoutBuilder<'cb>) -> &mut RebaseOptions<'cb> {$/;"	P	implementation:RebaseOptions
checkout_options	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/stash.rs	/^    checkout_options: Option<CheckoutBuilder<'cb>>,$/;"	m	struct:StashApplyOptions
checkout_options	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/stash.rs	/^    pub fn checkout_options(&mut self, opts: CheckoutBuilder<'cb>) -> &mut StashApplyOptions<'cb/;"	P	implementation:StashApplyOptions
checkout_opts	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    checkout_opts: u32,$/;"	m	struct:CheckoutBuilder
checkout_tree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn checkout_tree($/;"	P	implementation:Repository
cherrypick	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod cherrypick;$/;"	n
cherrypick	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn cherrypick($/;"	P	implementation:Repository
cherrypick_commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn cherrypick_commit($/;"	P	implementation:Repository
child_closes_grandparent	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn child_closes_grandparent() {$/;"	f	module:tests
child_closes_parent	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn child_closes_parent() {$/;"	f	module:tests
child_of	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    pub fn child_of($/;"	P	implementation:Span
child_of_with	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    pub fn child_of_with($/;"	P	implementation:Span
chmod	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    fn chmod(_path: &Path) {}$/;"	f	module:test
chmod	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    fn chmod(path: &Path) {$/;"	f	module:test
chunks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn chunks(self, size: usize) -> IntoChunks<Self>$/;"	P	interface:Itertools
circular_tuple_windows	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn circular_tuple_windows<T>(self) -> CircularTupleWindows<Self, T>$/;"	P	interface:Itertools
circular_tuple_windows	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^pub fn circular_tuple_windows<I, T>(iter: I) -> CircularTupleWindows<I, T>$/;"	f
clamp_day	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn clamp_day(day: u32) -> u32 {$/;"	P	implementation:Mdf
clamp_month	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn clamp_month(month: u32) -> u32 {$/;"	P	implementation:Mdf
clamp_ordinal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn clamp_ordinal(ordinal: u32) -> u32 {$/;"	P	implementation:Of
clap	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.21/src/lib.rs	/^    fn clap<'a, 'b>() -> clap::App<'a, 'b> {$/;"	P	implementation:Box
clap	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.21/src/lib.rs	/^    fn clap<'a, 'b>() -> clap::App<'a, 'b>;$/;"	P	interface:StructOpt
class	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/error.rs	/^    pub fn class(&self) -> ErrorClass {$/;"	P	implementation:Error
cleanup_state	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn cleanup_state(&self) -> Result<(), Error> {$/;"	P	implementation:Repository
clear	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn clear(self) -> ColoredString {$/;"	P	implementation:ColoredString
clear	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn clear(self) -> ColoredString {$/;"	P	implementation:str
clear	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn clear(self) -> ColoredString;$/;"	P	interface:Colorize
clear	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub fn clear(&mut self) -> Result<(), Error> {$/;"	P	implementation:Index
clear	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/treebuilder.rs	/^    pub fn clear(&mut self) -> Result<(), Error> {$/;"	P	implementation:TreeBuilder
clear	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^    pub(crate) fn clear(&mut self) {$/;"	P	implementation:ExtensionsInner
clear	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn clear(&mut self) {$/;"	P	implementation:DataInner
clear_drops_elements	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^    fn clear_drops_elements() {$/;"	f	module:tests
clear_ignore_rules	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn clear_ignore_rules(&self) -> Result<(), Error> {$/;"	P	implementation:Repository
clear_progress_callback	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    fn clear_progress_callback() {$/;"	f	module:tests
clear_retains_capacity	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^    fn clear_retains_capacity() {$/;"	f	module:tests
clicolor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^    clicolor: bool,$/;"	m	struct:ShouldColorize
clicolor_behavior	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^    fn clicolor_behavior() {$/;"	f	module:specs
clicolor_force	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^    clicolor_force: Option<bool>,$/;"	m	struct:ShouldColorize
clone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Mut
clone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Own
clone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Ref
clone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:InternalNumeric
clone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Blob
clone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn clone(&mut self, url: &str, into: &Path) -> Result<Repository, Error> {$/;"	P	implementation:RepoBuilder
clone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Commit
clone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    fn clone(&self) -> Object<'repo> {$/;"	P	implementation:Object
clone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    fn clone(&self) -> Remote<'repo> {$/;"	P	implementation:Remote
clone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn clone<P: AsRef<Path>>(url: &str, into: P) -> Result<Repository, Error> {$/;"	P	implementation:Repository
clone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/signature.rs	/^    fn clone(&self) -> Signature<'static> {$/;"	P	implementation:Signature
clone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    pub fn clone($/;"	P	implementation:Submodule
clone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Tag
clone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Tree
clone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    fn clone(&self) -> TreeEntry<'a> {$/;"	P	implementation:TreeEntry
clone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn clone(&self) -> SteadyTime {$/;"	P	implementation:inner::unix::SteadyTime
clone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Inner
clone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Context
clone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Handle
clone_current	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^    pub fn clone_current(&self) -> Option<L>$/;"	f
clone_fields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/impl_macros.rs	/^macro_rules! clone_fields {$/;"	M
clone_local	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    clone_local: Option<CloneLocal>,$/;"	m	struct:RepoBuilder
clone_local	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn clone_local(&mut self, clone_local: CloneLocal) -> &mut RepoBuilder<'cb> {$/;"	P	implementation:RepoBuilder
clone_recurse	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn clone_recurse<P: AsRef<Path>>(url: &str, into: P) -> Result<Repository, Error> {$/;"	P	implementation:Repository
clone_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    fn clone_span(&self, id: &span::Id) -> span::Id {$/;"	f
clone_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn clone_span(&self, old: &span::Id) -> span::Id {$/;"	f
clone_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn clone_span(&self, id: &span::Id) -> span::Id {$/;"	P	implementation:Registry
clone_submodule	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    fn clone_submodule() {$/;"	f	module:tests
cloned	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs	/^pub fn cloned<'a, I, T: 'a>(iterable: I) -> iter::Cloned<I::IntoIter>$/;"	f
close	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^        fn close(&self) -> Result<(), Error> {$/;"	P	implementation:tests::DummyTransport
close	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^    fn close(&self) -> Result<(), Error>;$/;"	P	interface:SmartSubtransport
closed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^        closed: Vec<(&'static str, Weak<()>)>,$/;"	m	struct:tests::CloseState
cmd	/home/asayers/projects/orpa/src/main.rs	/^    cmd: Option<Cmd>,$/;"	m	struct:Opts
cmp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn cmp(&self, other: &Date<Tz>) -> Ordering {$/;"	P	implementation:Date
cmp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn cmp(&self, other: &DateTime<Tz>) -> Ordering {$/;"	P	implementation:DateTime
cmp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^    fn cmp(&self, other: &Oid) -> Ordering {$/;"	P	implementation:Oid
cmp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    fn cmp(&self, other: &Reference<'repo>) -> Ordering {$/;"	P	implementation:Reference
cmp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^    fn cmp(&self, other: &IndexTime) -> Ordering {$/;"	P	implementation:IndexTime
cmp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^    fn cmp(&self, other: &Time) -> Ordering {$/;"	P	implementation:Time
cmp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    fn cmp(&self, other: &TreeEntry<'a>) -> Ordering {$/;"	P	implementation:TreeEntry
cmp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    cmp: F,$/;"	m	struct:MergeBy
cmp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn cmp(&self, other: &Tm) -> Ordering {$/;"	P	implementation:Tm
cmp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn cmp(&self, other: &SteadyTime) -> Ordering {$/;"	P	implementation:inner::unix::SteadyTime
cmp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn cmp(&self, other: &Directive) -> Ordering {$/;"	P	implementation:Directive
cmp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn cmp(&self, other: &StaticDirective) -> Ordering {$/;"	P	implementation:StaticDirective
cmp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    fn cmp(&self, other: &Self) -> Ordering {$/;"	P	implementation:Match
cmp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    fn cmp(&self, other: &Self) -> Ordering {$/;"	P	implementation:MatchPattern
cmp_fn	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs	/^    cmp_fn: F$/;"	m	struct:MergeJoinBy
coalesce	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^pub fn coalesce<I, F>(mut iter: I, f: F) -> Coalesce<I, F>$/;"	f
coalesce	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^mod coalesce;$/;"	n
coalesce	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn coalesce<F>(self, f: F) -> Coalesce<Self, F>$/;"	P	interface:Itertools
coalesce_pair	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^    fn coalesce_pair($/;"	f
coalesce_pair	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^    fn coalesce_pair(&mut self, t: T, item: Item) -> Result<T, (T, T)> {$/;"	f
coalesce_pair	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^    fn coalesce_pair(&mut self, t: T, item: Item) -> Result<T, (T, T)>;$/;"	P	interface:CoalescePredicate
coalesce_pair	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^    fn coalesce_pair(&mut self, t: T, item: T) -> Result<T, (T, T)> {$/;"	f
code	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/error.rs	/^    code: c_int,$/;"	m	struct:Error
code	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/error.rs	/^    pub fn code(&self) -> ErrorCode {$/;"	P	implementation:Error
collect	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs	/^    fn collect<C>(self) -> C$/;"	f
collect	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    fn collect<C>(self) -> C$/;"	f
collect	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs	/^    pub fn collect<C>(self) -> HashMap<K, C>$/;"	f
collect_from_iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^    fn collect_from_iter<I>(iter: I, buf: &mut Self::Buffer) -> Option<Self>$/;"	P	interface:TupleCollect
collect_from_iter_no_buf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^    fn collect_from_iter_no_buf<I>(iter: I) -> Option<Self>$/;"	P	interface:TupleCollect
collect_tuple	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn collect_tuple<T>(mut self) -> Option<T>$/;"	P	interface:Itertools
collect_vec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn collect_vec(self) -> Vec<Self::Item>$/;"	P	interface:Itertools
colon_or_space	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn colon_or_space(s: &str) -> ParseResult<&str> {$/;"	f
color	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn color<S: Into<Color>>(mut self, color: S) -> ColoredString {$/;"	P	implementation:ColoredString
color	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn color<S: Into<Color>>(self, color: S) -> ColoredString {$/;"	P	implementation:str
color	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn color<S: Into<Color>>(self, color: S) -> ColoredString;$/;"	P	interface:Colorize
color	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^mod color;$/;"	n
color_fn	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn color_fn() {$/;"	f	module:tests
combinations	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs	/^pub fn combinations<I>(iter: I, k: usize) -> Combinations<I>$/;"	f
combinations	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn combinations(self, k: usize) -> Combinations<Self>$/;"	P	interface:Itertools
combinations	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod combinations;$/;"	n
combinations_with_replacement	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations_with_replacement.rs	/^pub fn combinations_with_replacement<I>(iter: I, k: usize) -> CombinationsWithReplacement<I>$/;"	f
combinations_with_replacement	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn combinations_with_replacement(self, k: usize) -> CombinationsWithReplacement<Self>$/;"	P	interface:Itertools
combinations_with_replacement	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod combinations_with_replacement;$/;"	n
combs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/powerset.rs	/^    combs: Combinations<I>,$/;"	m	struct:Powerset
commands	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    commands: Vec<String>,$/;"	m	struct:CredentialHelper
commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^    pub fn commit(mut self) -> Result<Oid, Error> {$/;"	P	implementation:BlobWriter
commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    commit: &'commit Commit<'commit>,$/;"	m	struct:ParentIds
commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    commit: &'commit Commit<'repo>,$/;"	m	struct:Parents
commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod commit;$/;"	n
commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    pub fn commit(&mut self) -> Result<i32, Error> {$/;"	P	implementation:OdbPackwriter
commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    pub fn commit($/;"	P	implementation:Rebase
commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn commit($/;"	P	implementation:Repository
commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/test.rs	/^pub fn commit(repo: &Repository) -> (Oid, Oid) {$/;"	f
commit_create_buffer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn commit_create_buffer($/;"	P	implementation:Repository
commit_diff	/home/asayers/projects/orpa/src/main.rs	/^fn commit_diff<'a>(repo: &'a Repository, c: &Commit) -> anyhow::Result<Diff<'a>> {$/;"	f
commit_signed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn commit_signed($/;"	P	implementation:Repository
committer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    pub fn committer(&self) -> Signature<'_> {$/;"	P	implementation:Commit
committer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^    pub fn committer(&self) -> Signature<'_> {$/;"	P	implementation:Note
committer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    pub fn committer(&self) -> Signature<'_> {$/;"	P	implementation:ReflogEntry
common	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^mod common {$/;"	n
compact	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn compact(self) -> Layer<S, N, format::Format<format::Compact, T>, W>$/;"	f
compact	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    pub fn compact(self) -> Format<Compact, T> {$/;"	P	implementation:Format
compact	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn compact(self) -> SubscriberBuilder<N, format::Format<format::Compact, T>, F, W>$/;"	f
comparisons	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^    fn comparisons() -> Result<(), Error> {$/;"	f	module:tests
compute_style	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn compute_style(&self) -> String {$/;"	P	implementation:ColoredString
compute_style_blue_bold	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn compute_style_blue_bold() {$/;"	f	module:tests
compute_style_blue_bold_on_blue	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn compute_style_blue_bold_on_blue() {$/;"	f	module:tests
compute_style_blue_on_blue	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn compute_style_blue_on_blue() {$/;"	f	module:tests
compute_style_bright_blue_on_bright_blue	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn compute_style_bright_blue_on_bright_blue() {$/;"	f	module:tests
compute_style_empty_string	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn compute_style_empty_string() {$/;"	f	module:tests
compute_style_simple_bg_blue	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn compute_style_simple_bg_blue() {$/;"	f	module:tests
compute_style_simple_bg_bright_blue	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn compute_style_simple_bg_bright_blue() {$/;"	f	module:tests
compute_style_simple_bold	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn compute_style_simple_bold() {$/;"	f	module:tests
compute_style_simple_fg_blue	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn compute_style_simple_fg_blue() {$/;"	f	module:tests
compute_style_simple_fg_bright_blue	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn compute_style_simple_fg_bright_blue() {$/;"	f	module:tests
concat	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/concat_impl.rs	/^pub fn concat<I>(iterable: I) -> I::Item$/;"	f
concat	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn concat(self) -> Self::Item$/;"	P	interface:Itertools
concat_impl	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod concat_impl;$/;"	n
config	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    pub fn config(&mut self, config: &Config) -> &mut CredentialHelper {$/;"	P	implementation:CredentialHelper
config	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod config;$/;"	n
config	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn config(&self) -> Result<Config, Error> {$/;"	P	implementation:Repository
config_helper	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    fn config_helper(&mut self, config: &Config) {$/;"	P	implementation:CredentialHelper
config_username	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    fn config_username(&mut self, config: &Config) {$/;"	P	implementation:CredentialHelper
configure	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub unsafe fn configure(&mut self, opts: &mut raw::git_checkout_options) {$/;"	P	implementation:CheckoutBuilder
conflict_iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    conflict_iter: *mut raw::git_index_conflict_iterator,$/;"	m	struct:IndexConflicts
conflict_style_diff3	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn conflict_style_diff3(&mut self, on: bool) -> &mut CheckoutBuilder<'cb> {$/;"	P	implementation:CheckoutBuilder
conflict_style_merge	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn conflict_style_merge(&mut self, on: bool) -> &mut CheckoutBuilder<'cb> {$/;"	P	implementation:CheckoutBuilder
conflicts	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub fn conflicts(&self) -> Result<IndexConflicts<'_>, Error> {$/;"	P	implementation:Index
connect	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn connect(&mut self, dir: Direction) -> Result<(), Error> {$/;"	P	implementation:Remote
connect_auth	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn connect_auth<'connection, 'cb>($/;"	P	implementation:Remote
connected	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn connected(&mut self) -> bool {$/;"	P	implementation:Remote
connected	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn connected(&mut self) -> bool {$/;"	P	implementation:RemoteConnection
cons_tuples	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/cons_tuples_impl.rs	/^pub fn cons_tuples<I, J>(iterable: I) -> ConsTuples<I::IntoIter, J>$/;"	f
cons_tuples_impl	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod cons_tuples_impl;$/;"	n
construct	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    unsafe fn construct<E>($/;"	P	implementation:Error
contains	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^    pub fn contains(self, style: Styles) -> bool {$/;"	P	implementation:Style
contains_data	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn contains_data(&self) -> bool {$/;"	P	implementation:DiffBinary
content	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^    pub fn content(&self) -> &[u8] {$/;"	P	implementation:Blob
content	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn content(&self) -> &'a [u8] {$/;"	P	implementation:DiffLine
content_offset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn content_offset(&self) -> i64 {$/;"	P	implementation:DiffLine
context	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^    fn context<C>(self, context: C) -> Result<T, Error>$/;"	P	implementation:Option
context	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^    fn context<C>(self, context: C) -> Result<T, Error>$/;"	f
context	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    pub context: C,$/;"	m	struct:ContextError
context	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    pub fn context<C>(self, context: C) -> Self$/;"	P	implementation:Error
context	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/lib.rs	/^    fn context<C>(self, context: C) -> Result<T, Error>$/;"	P	interface:Context
context	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/lib.rs	/^mod context;$/;"	n
context_chain_downcast	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^unsafe fn context_chain_downcast<C>(e: Ref<ErrorImpl>, target: TypeId) -> Option<Ref<()>>$/;"	f
context_chain_downcast_mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^unsafe fn context_chain_downcast_mut<C>(e: Mut<ErrorImpl>, target: TypeId) -> Option<Mut<()>>$/;"	f
context_chain_drop_rest	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^unsafe fn context_chain_drop_rest<C>(e: Own<ErrorImpl>, target: TypeId)$/;"	f
context_downcast	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^unsafe fn context_downcast<C, E>(e: Ref<ErrorImpl>, target: TypeId) -> Option<Ref<()>>$/;"	f
context_downcast_mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^unsafe fn context_downcast_mut<C, E>(e: Mut<ErrorImpl>, target: TypeId) -> Option<Mut<()>>$/;"	f
context_drop_rest	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^unsafe fn context_drop_rest<C, E>(e: Own<ErrorImpl>, target: TypeId)$/;"	f
context_lines	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn context_lines(&mut self, lines: u32) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
control	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^pub mod control;$/;"	n
conversions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^    fn conversions() {$/;"	f	module:tests
convert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^        fn convert(&self) -> *const T {$/;"	P	implementation:impls::Option
convert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^        fn convert(&self) -> *const T {$/;"	P	implementation:impls::T
convert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^        fn convert(&self) -> *const libc::c_char {$/;"	P	implementation:impls::CString
convert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^        fn convert(&self) -> *mut T {$/;"	P	implementation:impls::Option
convert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^        fn convert(&self) -> *mut T {$/;"	P	implementation:impls::T
convert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^        fn convert(&self) -> T {$/;"	P	implementation:impls::T
convert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^        fn convert(&self) -> libc::c_int {$/;"	P	implementation:impls::bool
convert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^        fn convert(&self) -> raw::git_branch_t {$/;"	P	implementation:impls::BranchType
convert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^        fn convert(&self) -> raw::git_branch_t {$/;"	P	implementation:impls::Option
convert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^        fn convert(&self) -> raw::git_config_level_t {$/;"	P	implementation:impls::ConfigLevel
convert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^        fn convert(&self) -> raw::git_diff_format_t {$/;"	P	implementation:impls::DiffFormat
convert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^        fn convert(&self) -> raw::git_direction {$/;"	P	implementation:impls::Direction
convert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^        fn convert(&self) -> raw::git_fetch_prune_t {$/;"	P	implementation:impls::FetchPrune
convert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^        fn convert(&self) -> raw::git_merge_file_favor_t {$/;"	P	implementation:impls::FileFavor
convert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^        fn convert(&self) -> raw::git_object_t {$/;"	P	implementation:impls::ObjectType
convert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^        fn convert(&self) -> raw::git_object_t {$/;"	P	implementation:impls::Option
convert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^        fn convert(&self) -> raw::git_remote_autotag_option_t {$/;"	P	implementation:impls::AutotagOption
convert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^        fn convert(&self) -> raw::git_reset_t {$/;"	P	implementation:impls::ResetType
convert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^        fn convert(&self) -> raw::git_submodule_ignore_t {$/;"	P	implementation:impls::SubmoduleIgnore
convert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^    fn convert(&self) -> T;$/;"	P	interface:Convert
convert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^pub fn convert<T, U: Convert<T>>(u: &U) -> T {$/;"	f
convert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    fn convert() {$/;"	f	module:tests
convert_filemode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    fn convert_filemode() {$/;"	f	module:tests
convert_progress	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/stash.rs	/^fn convert_progress(progress: raw::git_stash_apply_progress_t) -> StashApplyProgress {$/;"	f
copies	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn copies(&mut self, find: bool) -> &mut DiffFindOptions {$/;"	P	implementation:DiffFindOptions
copies_from_unmodified	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn copies_from_unmodified(&mut self, find: bool) -> &mut DiffFindOptions {$/;"	P	implementation:DiffFindOptions
copy_threshold	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn copy_threshold(&mut self, thresh: u16) -> &mut DiffFindOptions {$/;"	P	implementation:DiffFindOptions
count	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    count: usize,$/;"	m	struct:Positions
count	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    fn count(self) -> usize {$/;"	f
count	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs	/^    fn count(self) -> usize {$/;"	f
count	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs	/^    fn count(mut self) -> usize {$/;"	f
count	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs	/^    fn count(self) -> usize {$/;"	f
count	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs	/^    fn count(self) -> usize {$/;"	f
count_ident	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^macro_rules! count_ident{$/;"	M
count_new_keys	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs	/^fn count_new_keys<I, K>(mut used: HashMap<K, ()>, iterable: I) -> usize$/;"	f
count_stash	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/stash.rs	/^    fn count_stash(repo: &mut Repository) -> usize {$/;"	f	module:tests
counts	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn counts(self) -> HashMap<Self::Item, usize>$/;"	P	interface:Itertools
create_detached	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn create_detached(url: &str) -> Result<Remote<'_>, Error> {$/;"	P	implementation:Remote
create_remote	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    fn create_remote() {$/;"	f	module:tests
create_updated	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn create_updated(&mut self, repo: &Repository, baseline: &Tree<'_>) -> Result<Oid, Erro/;"	P	implementation:TreeUpdateBuilder
cred	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod cred;$/;"	n
credential_helper	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    pub fn credential_helper($/;"	P	implementation:Cred
credential_helper1	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    fn credential_helper1() {$/;"	f	module:test
credential_helper2	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    fn credential_helper2() {$/;"	f	module:test
credential_helper3	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    fn credential_helper3() {$/;"	f	module:test
credential_helper4	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    fn credential_helper4() {$/;"	f	module:test
credential_helper5	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    fn credential_helper5() {$/;"	f	module:test
credential_helper6	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    fn credential_helper6() {$/;"	f	module:test
credential_helper7	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    fn credential_helper7() {$/;"	f	module:test
credentials	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^    credentials: Option<Box<Credentials<'a>>>,$/;"	m	struct:RemoteCallbacks
credentials	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^    pub fn credentials<F>(&mut self, cb: F) -> &mut RemoteCallbacks<'a>$/;"	P	implementation:RemoteCallbacks
credentials_cb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^extern "C" fn credentials_cb($/;"	f
credtype	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    pub fn credtype(&self) -> raw::git_credtype_t {$/;"	P	implementation:Cred
cstring_to_repo_path	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^pub fn cstring_to_repo_path<T: IntoCString>(path: T) -> Result<CString, Error> {$/;"	f
ctime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub ctime: IndexTime,$/;"	m	struct:IndexEntry
ctime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn ctime(&self) -> TmFmt {$/;"	P	implementation:Tm
ctx	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    ctx: &'a FmtContext<'a, S, N>,$/;"	m	struct:FmtCtx
ctx	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    ctx: &'a FmtContext<'a, S, N>,$/;"	m	struct:FullCtx
ctx	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn ctx(&self) -> Context<'_, S> {$/;"	f
cur	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs	/^    cur: Option<I::Item>,$/;"	m	struct:MultiProductIter
cur	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^    cur: usize,$/;"	m	struct:TupleBuffer
curr_iterator	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs	/^    fn curr_iterator(&self) -> Vec<I::Item> {$/;"	f
current	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations_with_replacement.rs	/^    fn current(&self) -> Vec<I::Item> {$/;"	f
current	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    pub fn current() -> Span {$/;"	P	implementation:Span
current	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/lib.rs	/^    current: thread::Local<Vec<Id>>,$/;"	m	struct:CurrentSpan
current	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/stack.rs	/^    pub(crate) fn current(&self) -> Option<&Id> {$/;"	P	implementation:SpanStack
current	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/thread.rs	/^    pub(crate) fn current() -> Self {$/;"	P	implementation:Id
current_elt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    current_elt: Option<I::Item>,$/;"	m	struct:GroupInner
current_key	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    current_key: Option<K>,$/;"	m	struct:GroupInner
current_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    fn current_span(&self) -> span::Current {$/;"	f
current_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn current_span(&self) -> span::Current {$/;"	f
current_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    pub fn current_span(&self) -> span::Current {$/;"	f
current_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn current_span(&self) -> Current {$/;"	P	implementation:Registry
current_spans	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    current_spans: ThreadLocal<RefCell<SpanStack>>,$/;"	m	struct:Registry
custom_writer_closure	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^    fn custom_writer_closure() {$/;"	f	module:test
custom_writer_struct	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^    fn custom_writer_struct() {$/;"	f	module:test
cyan	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn cyan(self) -> ColoredString$/;"	P	interface:Colorize
cycle_to_yo	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub fn cycle_to_yo(cycle: u32) -> (u32, u32) {$/;"	f
d_fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/locales.rs	/^pub(crate) fn d_fmt(locale: Locale) -> &'static str {$/;"	f
d_fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^    d_fmt: Fmt<'a>,$/;"	m	struct:StrftimeItems
d_t_fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/locales.rs	/^pub(crate) fn d_t_fmt(locale: Locale) -> &'static str {$/;"	f
d_t_fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^    d_t_fmt: Fmt<'a>,$/;"	m	struct:StrftimeItems
data	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cert.rs	/^    pub fn data(&self) -> &[u8] {$/;"	P	implementation:CertX509
data	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn data(&self) -> &[u8] {$/;"	P	implementation:DiffBinaryFile
data	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    pub fn data(&self) -> &[u8] {$/;"	P	implementation:OdbObject
data	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    data: R::Data,$/;"	m	struct:SpanRef
date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    date: NaiveDate,$/;"	m	struct:Date
date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn date(&self) -> Date<Tz> {$/;"	P	implementation:DateTime
date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    date: Option<NaiveDate>,$/;"	m	struct:DelayedFormat
date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    mod date;$/;"	n	module:naive
date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^mod date;$/;"	n
date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    date: NaiveDate,$/;"	m	struct:NaiveDateTime
date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn date(&self) -> NaiveDate {$/;"	P	implementation:NaiveDateTime
datetime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    datetime: NaiveDateTime,$/;"	m	struct:DateTime
datetime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    mod datetime;$/;"	n	module:naive
datetime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^mod datetime;$/;"	n
datetime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^mod datetime;$/;"	n
datetime_from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn datetime_from_str(&self, s: &str, fmt: &str) -> ParseResult<DateTime<Self>> {$/;"	P	interface:TimeZone
datetime_to_timespec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^fn datetime_to_timespec(d: &NaiveDateTime, local: bool) -> sys::Timespec {$/;"	f
day	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn day(&self) -> u32 {$/;"	P	implementation:Date
day	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn day(&self) -> u32 {$/;"	P	implementation:DateTime
day	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub day: Option<u32>,$/;"	m	struct:Parsed
day	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn day(&self) -> u32;$/;"	P	interface:Datelike
day	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn day(&self) -> u32 {$/;"	P	implementation:NaiveDate
day	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn day(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
day	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn day(&self) -> u32 {$/;"	P	implementation:Mdf
day	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/datetime.rs	/^    day: u8,$/;"	m	struct:DateTime
day0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn day0(&self) -> u32 {$/;"	P	implementation:Date
day0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn day0(&self) -> u32 {$/;"	P	implementation:DateTime
day0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn day0(&self) -> u32;$/;"	P	interface:Datelike
day0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn day0(&self) -> u32 {$/;"	P	implementation:NaiveDate
day0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn day0(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
days	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn days(days: i64) -> Duration {$/;"	P	implementation:Duration
days	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn days(days: i64) -> Duration {$/;"	P	implementation:Duration
days_in_year	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/display.rs	/^fn days_in_year(year: i32) -> i32 {$/;"	f
debug	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/fmt.rs	/^    pub(crate) unsafe fn debug(this: Ref<Self>, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ErrorImpl
debug	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/macros.rs	/^macro_rules! debug {$/;"	M
debug	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^pub mod debug;$/;"	n
debug_alt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    fn debug_alt(self) -> debug::Alt<Self> {$/;"	P	interface:MakeExt
debug_fmt_fields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/impl_macros.rs	/^macro_rules! debug_fmt_fields {$/;"	M
debug_fn	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^pub fn debug_fn<F>(f: F) -> FieldFn<F>$/;"	f
debug_matches	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    fn debug_matches(&self, d: &impl fmt::Debug) -> bool {$/;"	P	implementation:MatchPattern
debug_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/macros.rs	/^macro_rules! debug_span {$/;"	M
decode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<DateTime<FixedOffset>, D::Error> {$/;"	P	implementation:rustc_serialize::DateTime
decode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<DateTime<Local>, D::Error> {$/;"	P	implementation:rustc_serialize::DateTime
decode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<DateTime<Utc>, D::Error> {$/;"	P	implementation:rustc_serialize::DateTime
decode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<TsSeconds<FixedOffset>, D::Error> {$/;"	P	implementation:rustc_serialize::TsSeconds
decode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<TsSeconds<Local>, D::Error> {$/;"	P	implementation:rustc_serialize::TsSeconds
decode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<TsSeconds<Utc>, D::Error> {$/;"	P	implementation:rustc_serialize::TsSeconds
decode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<NaiveDate, D::Error> {$/;"	P	implementation:rustc_serialize::NaiveDate
decode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<NaiveDateTime, D::Error> {$/;"	P	implementation:rustc_serialize::NaiveDateTime
decode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<TsSeconds, D::Error> {$/;"	P	implementation:rustc_serialize::TsSeconds
decode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<NaiveTime, D::Error> {$/;"	P	implementation:rustc_serialize::NaiveTime
dedup	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^pub fn dedup<I>(iter: I) -> Dedup<I>$/;"	f
dedup	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn dedup(self) -> Dedup<Self>$/;"	P	interface:Itertools
dedup_by	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^pub fn dedup_by<I, Pred>(mut iter: I, dedup_pred: Pred) -> DedupBy<I, Pred>$/;"	f
dedup_by	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn dedup_by<Cmp>(self, cmp: Cmp) -> DedupBy<Self, Cmp>$/;"	P	interface:Itertools
dedup_by_with_count	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^pub fn dedup_by_with_count<I, Pred>(mut iter: I, dedup_pred: Pred) -> DedupByWithCount<I, Pred>$/;"	f
dedup_by_with_count	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn dedup_by_with_count<Cmp>(self, cmp: Cmp) -> DedupByWithCount<Self, Cmp>$/;"	P	interface:Itertools
dedup_pair	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^    fn dedup_pair(&mut self, a: &T, b: &T) -> bool {$/;"	P	implementation:DedupEq
dedup_pair	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^    fn dedup_pair(&mut self, a: &T, b: &T) -> bool {$/;"	P	implementation:F
dedup_pair	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^    fn dedup_pair(&mut self, a: &T, b: &T) -> bool;$/;"	P	interface:DedupPredicate
dedup_with_count	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^pub fn dedup_with_count<I>(iter: I) -> DedupWithCount<I>$/;"	f
dedup_with_count	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn dedup_with_count(self) -> DedupWithCount<Self>$/;"	P	interface:Itertools
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/chain.rs	/^    fn default() -> Self {$/;"	P	implementation:Chain
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    fn default() -> Parsed {$/;"	P	implementation:Parsed
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^    fn default() -> ShouldColorize {$/;"	P	implementation:ShouldColorize
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn default() -> Self {$/;"	P	implementation:ColoredString
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    fn default() -> Self {$/;"	P	implementation:BlameOptions
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/buf.rs	/^    fn default() -> Self {$/;"	P	implementation:Buf
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    fn default() -> Self {$/;"	P	implementation:CheckoutBuilder
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    fn default() -> Self {$/;"	P	implementation:RepoBuilder
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    fn default() -> Self {$/;"	P	implementation:TreeUpdateBuilder
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    pub fn default() -> Result<Cred, Error> {$/;"	P	implementation:Cred
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^    fn default() -> Self {$/;"	P	implementation:DescribeFormatOptions
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^    fn default() -> Self {$/;"	P	implementation:DescribeOptions
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn default() -> Self {$/;"	P	implementation:DiffFindOptions
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn default() -> Self {$/;"	P	implementation:DiffFormatEmailOptions
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn default() -> Self {$/;"	P	implementation:DiffOptions
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    fn default() -> Self {$/;"	P	implementation:AttrCheckFlags
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    fn default() -> Self {$/;"	P	implementation:CredentialType
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    fn default() -> Self {$/;"	P	implementation:IndexAddOption
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    fn default() -> Self {$/;"	P	implementation:PathspecFlags
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    fn default() -> Self {$/;"	P	implementation:ReferenceFormat
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    fn default() -> Self {$/;"	P	implementation:StashApplyFlags
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    fn default() -> Self {$/;"	P	implementation:StashFlags
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    fn default() -> Self {$/;"	P	implementation:MergeOptions
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    fn default() -> Self {$/;"	P	implementation:RebaseOptions
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    fn default() -> Self {$/;"	P	implementation:FetchOptions
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    fn default() -> Self {$/;"	P	implementation:PushOptions
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^    fn default() -> Self {$/;"	P	implementation:RemoteCallbacks
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/stash.rs	/^    fn default() -> Self {$/;"	P	implementation:StashApplyOptions
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    fn default() -> Self {$/;"	P	implementation:StatusOptions
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    fn default() -> Self {$/;"	P	implementation:SubmoduleUpdateOptions
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn default() -> Self {$/;"	P	implementation:Directive
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn default() -> Self {$/;"	P	implementation:DirectiveSet
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn default() -> Self {$/;"	P	implementation:StaticDirective
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    fn default() -> Self {$/;"	P	implementation:EnvFilter
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    fn default() -> Self {$/;"	P	implementation:Layer
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    fn default() -> Json {$/;"	P	implementation:Json
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    fn default() -> Self {$/;"	P	implementation:JsonFields
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn default() -> Self {$/;"	P	implementation:DefaultFields
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn default() -> Self {$/;"	P	implementation:FmtSpanConfig
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn default() -> Self {$/;"	P	implementation:Format
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^    fn default() -> Self {$/;"	P	implementation:Pretty
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    fn default() -> Self {$/;"	P	implementation:Subscriber
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    fn default() -> Self {$/;"	P	implementation:SubscriberBuilder
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^    fn default() -> Self {$/;"	P	implementation:ChronoFmtType
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^    fn default() -> Self {$/;"	P	implementation:Uptime
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/lib.rs	/^    fn default() -> Self {$/;"	P	implementation:CurrentSpan
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn default() -> Self {$/;"	P	implementation:DataInner
default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn default() -> Self {$/;"	P	implementation:Registry
default_branch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn default_branch(&self) -> Result<Buf, Error> {$/;"	P	implementation:Remote
default_branch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn default_branch(&self) -> Result<Buf, Error> {$/;"	P	implementation:RemoteConnection
delete	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/branch.rs	/^    pub fn delete(&mut self) -> Result<(), Error> {$/;"	P	implementation:Branch
delete	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    pub fn delete(&mut self) -> Result<(), Error> {$/;"	P	implementation:Reference
deletions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn deletions(&self) -> usize {$/;"	P	implementation:DiffStats
delimit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^    fn delimit(&mut self)$/;"	P	implementation:VisitDelimited
delimited	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    fn delimited<D>(self, delimiter: D) -> delimited::Delimited<D, Self>$/;"	P	interface:MakeExt
delimited	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^pub mod delimited;$/;"	n
delimited_new_visitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^    fn delimited_new_visitor() {$/;"	f	module:test
delimited_visitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^    fn delimited_visitor() {$/;"	f	module:test
delimiter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^    delimiter: D,$/;"	m	struct:Delimited
delimiter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^    delimiter: D,$/;"	m	struct:VisitDelimited
delta	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/patch.rs	/^    pub fn delta(&self) -> DiffDelta<'buffers> {$/;"	P	implementation:Patch
delta_callback	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/apply.rs	/^    pub fn delta_callback<F>(&mut self, cb: F) -> &mut Self$/;"	P	implementation:ApplyOptions
delta_cb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/apply.rs	/^    delta_cb: Option<Box<DeltaCB<'cb>>>,$/;"	m	struct:ApplyOptions
delta_cb_c	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/apply.rs	/^extern "C" fn delta_cb_c(delta: *const raw::git_diff_delta, data: *mut c_void) -> c_int {$/;"	f
deltas	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn deltas(&self) -> Deltas<'_> {$/;"	P	implementation:Diff
deref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:Error
deref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^    pub unsafe fn deref(self) -> &'a T {$/;"	P	implementation:Ref
deref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn deref(&self) -> &Self::Target {$/;"	P	implementation:rustc_serialize::TsSeconds
deref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn deref(&self) -> &Self::Target {$/;"	P	implementation:rustc_serialize::TsSeconds
deref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn deref(&self) -> &str {$/;"	P	implementation:ColoredString
deref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/buf.rs	/^    fn deref(&self) -> &[u8] {$/;"	P	implementation:Buf
deref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid_array.rs	/^    fn deref(&self) -> &[Oid] {$/;"	P	implementation:OidArray
deref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:FormattedFields
deref_mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	P	implementation:Error
deref_mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^    pub unsafe fn deref_mut(self) -> &'a mut T {$/;"	P	implementation:Mut
deref_mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/buf.rs	/^    fn deref_mut(&mut self) -> &mut [u8] {$/;"	P	implementation:Buf
describe	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod describe;$/;"	n
describe	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    pub fn describe(&self, opts: &DescribeOptions) -> Result<Describe<'_>, Error> {$/;"	P	implementation:Object
describe	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn describe(&self, opts: &DescribeOptions) -> Result<Describe<'_>, Error> {$/;"	P	implementation:Repository
describe_all	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^    pub fn describe_all(&mut self) -> &mut Self {$/;"	P	implementation:DescribeOptions
describe_tags	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^    pub fn describe_tags(&mut self) -> &mut Self {$/;"	P	implementation:DescribeOptions
description	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:ParseError
description	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:OutOfRangeError
description	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:RoundingError
description	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    description: Option<CString>,$/;"	m	struct:RepositoryInitOptions
description	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn description(&mut self, desc: &str) -> &mut RepositoryInitOptions {$/;"	P	implementation:RepositoryInitOptions
description	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:OutOfRangeError
description	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:ParseError
description	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:ParseError
deserialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:serde::DateTime
deserialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<DateTime<Utc>, D::Error>$/;"	f	module:serde::ts_milliseconds
deserialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<DateTime<Utc>, D::Error>$/;"	f	module:serde::ts_nanoseconds
deserialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<DateTime<Utc>, D::Error>$/;"	f	module:serde::ts_seconds
deserialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<Option<DateTime<Utc>>, D::Error>$/;"	f	module:serde::ts_milliseconds_option
deserialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<Option<DateTime<Utc>>, D::Error>$/;"	f	module:serde::ts_nanoseconds_option
deserialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<Option<DateTime<Utc>>, D::Error>$/;"	f	module:serde::ts_seconds_option
deserialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:month_serde::Month
deserialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:weekday_serde::Weekday
deserialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:serde::NaiveDate
deserialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:serde::NaiveDateTime
deserialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<NaiveDateTime, D::Error>$/;"	f	module:serde::ts_milliseconds
deserialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<NaiveDateTime, D::Error>$/;"	f	module:serde::ts_nanoseconds
deserialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<NaiveDateTime, D::Error>$/;"	f	module:serde::ts_seconds
deserialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:serde::NaiveTime
dev	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub dev: u32,$/;"	m	struct:IndexEntry
diff	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    diff: &'diff Diff<'diff>,$/;"	m	struct:Deltas
diff	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod diff;$/;"	n
diff	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod diff;$/;"	n
diff3_style	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    pub fn diff3_style(&mut self, diff3: bool) -> &mut MergeOptions {$/;"	P	implementation:MergeOptions
diff_blobs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn diff_blobs($/;"	P	implementation:Repository
diff_entries	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    pub fn diff_entries(&self) -> PathspecDiffEntries<'_> {$/;"	P	implementation:PathspecMatchList
diff_entry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    pub fn diff_entry(&self, i: usize) -> Option<DiffDelta<'_>> {$/;"	P	implementation:PathspecMatchList
diff_index_to_index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn diff_index_to_index($/;"	P	implementation:Repository
diff_index_to_workdir	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn diff_index_to_workdir($/;"	P	implementation:Repository
diff_tree_to_index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn diff_tree_to_index($/;"	P	implementation:Repository
diff_tree_to_tree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn diff_tree_to_tree($/;"	P	implementation:Repository
diff_tree_to_workdir	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn diff_tree_to_workdir($/;"	P	implementation:Repository
diff_tree_to_workdir_with_index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn diff_tree_to_workdir_with_index($/;"	P	implementation:Repository
diff_with	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs	/^pub fn diff_with<I, J, F>(i: I, j: J, is_equal: F)$/;"	f
digits	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^    fn digits(s: &str) -> ParseResult<(u8, u8)> {$/;"	f	function:timezone_offset_internal
dimmed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn dimmed(mut self) -> ColoredString {$/;"	P	implementation:ColoredString
dimmed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn dimmed(self) -> ColoredString {$/;"	P	implementation:str
dimmed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn dimmed(self) -> ColoredString;$/;"	P	interface:Colorize
dir_perm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    dir_perm: Option<i32>,$/;"	m	struct:CheckoutBuilder
dir_perm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn dir_perm(&mut self, perm: i32) -> &mut CheckoutBuilder<'cb> {$/;"	P	implementation:CheckoutBuilder
direction	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/refspec.rs	/^    pub fn direction(&self) -> Direction {$/;"	P	implementation:Refspec
directive	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^mod directive;$/;"	n
directive_ordering_by_field_num	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn directive_ordering_by_field_num() {$/;"	f	module:test
directive_ordering_by_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn directive_ordering_by_span() {$/;"	f	module:test
directive_ordering_by_target_len	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn directive_ordering_by_target_len() {$/;"	f	module:test
directive_ordering_uses_lexicographic_when_equal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn directive_ordering_uses_lexicographic_when_equal() {$/;"	f	module:test
directives	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    directives: Vec<T>,$/;"	m	struct:DirectiveSet
directives_for	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn directives_for<'a>($/;"	P	implementation:DirectiveSet
dirty_suffix	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^    dirty_suffix: CString,$/;"	m	struct:DescribeFormatOptions
dirty_suffix	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^    pub fn dirty_suffix(&mut self, suffix: &str) -> &mut Self {$/;"	P	implementation:DescribeFormatOptions
disable_filters	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    disable_filters: bool,$/;"	m	struct:CheckoutBuilder
disable_filters	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn disable_filters(&mut self, disable: bool) -> &mut CheckoutBuilder<'cb> {$/;"	P	implementation:CheckoutBuilder
disable_pathspec_match	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn disable_pathspec_match(&mut self, disable: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
disable_pathspec_match	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub fn disable_pathspec_match(&mut self, include: bool) -> &mut StatusOptions {$/;"	P	implementation:StatusOptions
disabled_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/lib.rs	/^        pub fn disabled_span(&self) -> crate::Span {$/;"	P	implementation:__macro_support::MacroCallsite
disconnect	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn disconnect(&mut self) -> Result<(), Error> {$/;"	P	implementation:Remote
discover	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn discover<P: AsRef<Path>>(path: P) -> Result<Repository, Error> {$/;"	P	implementation:Repository
dispatcher	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/lib.rs	/^pub mod dispatcher;$/;"	n
display	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/fmt.rs	/^    pub(crate) unsafe fn display(this: Ref<Self>, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ErrorImpl
display	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^mod display;$/;"	n
display	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^pub mod display;$/;"	n
display_location	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^    display_location: bool,$/;"	m	struct:Pretty
display_messages	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    fn display_messages(self) -> display::Messages<Self> {$/;"	P	interface:MakeExt
div	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^mod div;$/;"	n
div	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn div(self, rhs: i32) -> Duration {$/;"	P	implementation:Duration
div	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn div(self, rhs: i32) -> Duration {$/;"	P	implementation:Duration
div_floor_64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^fn div_floor_64(this: i64, other: i64) -> i64 {$/;"	f
div_floor_64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^fn div_floor_64(this: i64, other: i64) -> i64 {$/;"	f
div_mod_floor_64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^fn div_mod_floor_64(this: i64, other: i64) -> (i64, i64) {$/;"	f
div_mod_floor_64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^fn div_mod_floor_64(this: i64, other: i64) -> (i64, i64) {$/;"	f
div_rem_64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^fn div_rem_64(this: i64, other: i64) -> (i64, i64) {$/;"	f
div_rem_64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^fn div_rem_64(this: i64, other: i64) -> (i64, i64) {$/;"	f
done	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    done: bool,$/;"	m	struct:GroupInner
done	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lazy_buffer.rs	/^    done: bool,$/;"	m	struct:LazyBuffer
dont_ignore_whitespace	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn dont_ignore_whitespace(&mut self, dont: bool) -> &mut DiffFindOptions {$/;"	P	implementation:DiffFindOptions
downcast	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    pub fn downcast<E>(mut self) -> Result<E, Self>$/;"	P	implementation:Error
downcast_mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    pub fn downcast_mut<E>(&mut self) -> Option<&mut E>$/;"	P	implementation:Error
downcast_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    unsafe fn downcast_raw(&self, id: TypeId) -> Option<*const ()> {$/;"	f
downcast_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    unsafe fn downcast_raw(&self, id: TypeId) -> Option<*const ()> {$/;"	f
downcast_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    unsafe fn downcast_raw(&self, id: TypeId) -> Option<*const ()> {$/;"	P	interface:Layer
downcast_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    unsafe fn downcast_raw(&self, id: TypeId) -> Option<*const ()> {$/;"	f
downcast_ref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    pub fn downcast_ref<E>(&self) -> Option<&E>$/;"	P	implementation:Error
downcasts_to_layer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn downcasts_to_layer() {$/;"	f	module:tests
downcasts_to_subscriber	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn downcasts_to_subscriber() {$/;"	f	module:tests
download	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn download<Str: AsRef<str> + crate::IntoCString + Clone>($/;"	P	implementation:Remote
download_tags	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    download_tags: AutotagOption,$/;"	m	struct:FetchOptions
download_tags	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn download_tags(&mut self, opt: AutotagOption) -> &mut Self {$/;"	P	implementation:FetchOptions
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Error
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Blame
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Blob
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^    fn drop(&mut self) {$/;"	P	implementation:BlobWriter
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/branch.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Branches
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/buf.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Buf
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Commit
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Config
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    fn drop(&mut self) {$/;"	P	implementation:ConfigEntries
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    fn drop(&mut self) {$/;"	P	implementation:ConfigEntry
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Cred
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Describe
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Diff
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn drop(&mut self) {$/;"	P	implementation:DiffStats
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Index
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    fn drop(&mut self) {$/;"	P	implementation:IndexConflicts
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    fn drop(&mut self) {$/;"	P	implementation:AnnotatedCommit
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Note
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Notes
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Object
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Odb
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    fn drop(&mut self) {$/;"	P	implementation:OdbObject
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    fn drop(&mut self) {$/;"	P	implementation:OdbPackwriter
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    fn drop(&mut self) {$/;"	P	implementation:OdbReader
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    fn drop(&mut self) {$/;"	P	implementation:OdbWriter
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid_array.rs	/^    fn drop(&mut self) {$/;"	P	implementation:OidArray
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    fn drop(&mut self) {$/;"	P	implementation:PackBuilder
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/patch.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Patch
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Pathspec
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    fn drop(&mut self) {$/;"	P	implementation:PathspecMatchList
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Rebase
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Reference
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    fn drop(&mut self) {$/;"	P	implementation:References
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Reflog
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Remote
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    fn drop(&mut self) {$/;"	P	implementation:RemoteConnection
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Repository
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revwalk.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Revwalk
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/signature.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Signature
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Statuses
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^    fn drop(&mut self) {$/;"	P	implementation:StringArray
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Submodule
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Tag
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^        fn drop(&mut self) {$/;"	P	implementation:transport_factory::Bomb
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Transport
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Tree
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    fn drop(&mut self) {$/;"	P	implementation:TreeEntry
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/treebuilder.rs	/^    fn drop(&mut self) {$/;"	P	implementation:TreeBuilder
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Worktree
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn drop(&mut self) {$/;"	P	implementation:inner::TzReset
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Entered
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Span
drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn drop(&mut self) {$/;"	P	implementation:CloseGuard
drop_group	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    fn drop_group(&mut self, client: usize) {$/;"	f
drop_group	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    fn drop_group(&self, client: usize) {$/;"	f
drop_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn drop_span(&self, id: span::Id) {$/;"	f
dropped_group	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    dropped_group: usize,$/;"	m	struct:GroupInner
dropping	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn dropping(mut self, n: usize) -> Self$/;"	P	interface:Itertools
dropping_back	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn dropping_back(mut self, n: usize) -> Self$/;"	P	interface:Itertools
dry_run	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn dry_run(&mut self) -> &mut CheckoutBuilder<'cb> {$/;"	P	implementation:CheckoutBuilder
dst	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/refspec.rs	/^    pub fn dst(&self) -> Option<&str> {$/;"	P	implementation:Refspec
dst_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/refspec.rs	/^    pub fn dst_bytes(&self) -> &[u8] {$/;"	P	implementation:Refspec
dst_matches	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/refspec.rs	/^    pub fn dst_matches(&self, refname: &str) -> bool {$/;"	P	implementation:Refspec
dummy_error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^    fn dummy_error() -> Error {$/;"	f	module:tests
dump	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/mempack.rs	/^    pub fn dump(&self, repo: &Repository, buf: &mut Buf) -> Result<(), Error> {$/;"	P	implementation:Mempack
duplicate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/stack.rs	/^    duplicate: bool,$/;"	m	struct:ContextId
duration	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^mod duration;$/;"	n
duration_round	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn duration_round(self, duration: Duration) -> Result<Self, Self::Err> {$/;"	P	implementation:DateTime
duration_round	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn duration_round(self, duration: Duration) -> Result<Self, Self::Err>;$/;"	P	interface:DurationRound
duration_trunc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn duration_trunc(self, duration: Duration) -> Result<Self, Self::Err> {$/;"	P	implementation:DateTime
duration_trunc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn duration_trunc(self, duration: Duration) -> Result<Self, Self::Err>;$/;"	P	interface:DurationRound
dyn	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    static TEST_CALLSITE_1: &'static dyn Callsite = &TestCallsite1;$/;"	v	module:test_util
dynamics	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    dynamics: directive::Dynamics,$/;"	m	struct:EnvFilter
earliest	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn earliest(self) -> Option<T> {$/;"	P	implementation:LocalResult
east	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    pub fn east(secs: i32) -> FixedOffset {$/;"	P	implementation:FixedOffset
east_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    pub fn east_opt(secs: i32) -> Option<FixedOffset> {$/;"	P	implementation:FixedOffset
either_or_both	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod either_or_both;$/;"	n
element	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs	/^    element: ElemF,$/;"	m	struct:IntersperseWith
elt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/repeatn.rs	/^    elt: Option<A>,$/;"	m	struct:RepeatN
email	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/signature.rs	/^    pub fn email(&self) -> Option<&str> {$/;"	P	implementation:Signature
email_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/signature.rs	/^    pub fn email_bytes(&self) -> &[u8] {$/;"	P	implementation:Signature
empty_is_none	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        fn empty_is_none() {$/;"	f	module:tests::u8_to_styles_invalid_is_none
empty_pack_header	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    fn empty_pack_header() -> Vec<u8> {$/;"	f	module:tests
empty_tm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn empty_tm() -> Tm {$/;"	f
empty_tree	/home/asayers/projects/orpa/src/main.rs	/^fn empty_tree(repo: &Repository) -> anyhow::Result<Tree> {$/;"	f
enable_fast_untracked_dirs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn enable_fast_untracked_dirs(&mut self, enable: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
enabled	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    pub(crate) fn enabled(&self, meta: &Metadata<'_>) -> bool {$/;"	P	implementation:Statics
enabled	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^        fn enabled(&self, _metadata: &Metadata<'_>) -> bool {$/;"	P	implementation:tests::NoSubscriber
enabled	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    fn enabled(&self, metadata: &Metadata<'_>, _: Context<'_, S>) -> bool {$/;"	P	implementation:EnvFilter
enabled	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/level.rs	/^    fn enabled(&self, metadata: &Metadata<'_>, _: crate::layer::Context<'_, S>) -> bool {$/;"	P	implementation:LevelFilter
enabled	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    fn enabled(&self, meta: &Metadata<'_>) -> bool {$/;"	f
enabled	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^        fn enabled(&self, _: &Metadata<'_>) -> bool {$/;"	P	implementation:tests::NopSubscriber
enabled	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^        fn enabled(&self, _: &Metadata<'_>) -> bool {$/;"	P	implementation:tests::StringSubscriber
enabled	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn enabled(&self, metadata: &Metadata<'_>) -> bool {$/;"	f
enabled	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn enabled(&self, metadata: &Metadata<'_>, ctx: Context<'_, S>) -> bool {$/;"	P	interface:Layer
enabled	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn enabled(&self, metadata: &Metadata<'_>, ctx: Context<'_, S>) -> bool {$/;"	f
enabled	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    pub fn enabled(&self, metadata: &Metadata<'_>) -> bool {$/;"	f
enabled	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn enabled(&self, _: &Metadata<'_>) -> bool {$/;"	P	implementation:Registry
enabled	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^    fn enabled(&self, metadata: &Metadata<'_>, ctx: layer::Context<'_, S>) -> bool {$/;"	f
encode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {$/;"	P	implementation:rustc_serialize::DateTime
encode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {$/;"	P	implementation:rustc_serialize::NaiveDate
encode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {$/;"	P	implementation:rustc_serialize::NaiveDateTime
encode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^        fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {$/;"	P	implementation:rustc_serialize::NaiveTime
ensure	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/macros.rs	/^macro_rules! ensure {$/;"	M
enter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    pub fn enter(&self) -> Entered<'_> {$/;"	P	implementation:Span
enter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^        fn enter(&self, _span: &span::Id) {}$/;"	P	implementation:tests::NoSubscriber
enter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    fn enter(&self, id: &span::Id) {$/;"	f
enter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^        fn enter(&self, _: &span::Id) {}$/;"	P	implementation:tests::NopSubscriber
enter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^        fn enter(&self, _: &span::Id) {}$/;"	P	implementation:tests::StringSubscriber
enter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn enter(&self, span: &span::Id) {$/;"	f
enter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/lib.rs	/^    pub fn enter(&self, span: Id) {$/;"	P	implementation:CurrentSpan
enter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn enter(&self, id: &span::Id) {$/;"	P	implementation:Registry
entries	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn entries(&self, glob: Option<&str>) -> Result<ConfigEntries<'_>, Error> {$/;"	P	implementation:Config
entries	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    pub fn entries(&self) -> PathspecEntries<'_> {$/;"	P	implementation:PathspecMatchList
entries	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^        entries: Vec<TreeEntry<'a>>,$/;"	m	struct:tests::TestTreeIter
entry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    fn entry() -> IndexEntry {$/;"	f	module:tests
entry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    pub fn entry(&self, i: usize) -> Option<&[u8]> {$/;"	P	implementation:PathspecMatchList
entry_from_raw_const	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^pub unsafe fn entry_from_raw_const<'tree>(raw: *const raw::git_tree_entry) -> TreeEntry<'tree> {$/;"	f
entrycount	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    fn entrycount(&self) -> usize {$/;"	P	implementation:PathspecMatchList
enumerate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs	/^pub fn enumerate<I>(iterable: I) -> iter::Enumerate<I::IntoIter>$/;"	f
env	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/mod.rs	/^mod env;$/;"	n
epoch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^    epoch: Instant,$/;"	m	struct:Uptime
eq	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn eq(&self, other: &Date<Tz2>) -> bool {$/;"	P	implementation:Date
eq	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn eq(&self, other: &DateTime<Tz2>) -> bool {$/;"	P	implementation:DateTime
eq	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    fn eq(&self, _other: &InternalNumeric) -> bool {$/;"	P	implementation:InternalNumeric
eq	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^    fn eq(&self, other: &Oid) -> bool {$/;"	P	implementation:Oid
eq	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    fn eq(&self, other: &Reference<'repo>) -> bool {$/;"	P	implementation:Reference
eq	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    fn eq(&self, other: &TreeEntry<'a>) -> bool {$/;"	P	implementation:TreeEntry
eq	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn eq(&self, other: &SteadyTime) -> bool {$/;"	P	implementation:inner::unix::SteadyTime
eq	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	P	implementation:Inner
eq	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	P	implementation:Span
eq	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	P	implementation:MatchPattern
equal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^pub fn equal<I, J>(a: I, b: J) -> bool$/;"	f
equals	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^fn equals(s: &str, pattern: &str) -> bool {$/;"	f
erase	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    fn erase(&self) -> Ref<ErrorImpl> {$/;"	P	implementation:ErrorImpl
err	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^    macro_rules! err {$/;"	M	function:path_to_repo_path
err	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^    err: fmt::Result,$/;"	m	struct:VisitDelimited
err	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^        err: fmt::Result,$/;"	m	struct:test_util::DebugVisitor
error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    pub error: E,$/;"	m	struct:ContextError
error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    pub(crate) unsafe fn error(this: Ref<Self>) -> &(dyn StdError + Send + Sync + 'static) {$/;"	P	implementation:ErrorImpl
error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/lib.rs	/^mod error;$/;"	n
error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^        fn error() {$/;"	f	module:tests::fromstr
error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod error;$/;"	n
error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs	/^    error: &'a mut Result<(), E>,$/;"	m	struct:ProcessResults
error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/macros.rs	/^macro_rules! error {$/;"	M
error_mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    pub(crate) unsafe fn error_mut(this: Mut<Self>) -> &mut (dyn StdError + Send + Sync + 'stati/;"	P	implementation:ErrorImpl
error_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/macros.rs	/^macro_rules! error_span {$/;"	M
escape_inner_reset_sequences	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn escape_inner_reset_sequences(&self) -> Cow<str> {$/;"	P	implementation:ColoredString
escape_reset_sequence_spec_should_do_nothing_on_empty_strings	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn escape_reset_sequence_spec_should_do_nothing_on_empty_strings() {$/;"	f	module:tests
escape_reset_sequence_spec_should_do_nothing_on_string_with_no_reset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn escape_reset_sequence_spec_should_do_nothing_on_string_with_no_reset() {$/;"	f	module:tests
escape_reset_sequence_spec_should_replace_inner_reset_sequence_with_current_style	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn escape_reset_sequence_spec_should_replace_inner_reset_sequence_with_current_style() {$/;"	f	module:tests
escape_reset_sequence_spec_should_replace_multiple_inner_reset_sequences_with_current_style	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn escape_reset_sequence_spec_should_replace_multiple_inner_reset_sequences_with_current_sty/;"	f	module:tests
event	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/macros.rs	/^macro_rules! event {$/;"	M
event	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^        fn event(&self, _event: &Event<'_>) {}$/;"	P	implementation:tests::NoSubscriber
event	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    fn event(&self, event: &Event<'_>) {$/;"	f
event	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^        fn event(&self, _: &Event<'_>) {}$/;"	P	implementation:tests::NopSubscriber
event	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^        fn event(&self, _: &Event<'_>) {}$/;"	P	implementation:tests::StringSubscriber
event	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn event(&self, event: &Event<'_>) {$/;"	f
event	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    pub fn event(&self, event: &Event<'_>) {$/;"	f
event	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn event(&self, _: &Event<'_>) {}$/;"	P	implementation:Registry
event_format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn event_format<E2>(self, e: E2) -> Layer<S, N, E2, W>$/;"	f
event_format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn event_format<E2>(self, fmt_event: E2) -> SubscriberBuilder<N, E2, F, W>$/;"	P	implementation:SubscriberBuilder
exact_match_only	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn exact_match_only(&mut self, exact: bool) -> &mut DiffFindOptions {$/;"	P	implementation:DiffFindOptions
exactly_one	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn exactly_one(mut self) -> Result<Self::Item, ExactlyOneError<Self>>$/;"	P	interface:Itertools
exactly_one_err	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod exactly_one_err;$/;"	n
exclude_subject_patch_header	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn exclude_subject_patch_header(&mut self, should_exclude: bool) -> &mut Self {$/;"	P	implementation:DiffFormatEmailOptions
exclude_submodules	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub fn exclude_submodules(&mut self, exclude: bool) -> &mut StatusOptions {$/;"	P	implementation:StatusOptions
exec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    pub fn exec(&self) -> Option<&str> {$/;"	P	implementation:RebaseOperation
execute	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    pub fn execute(&self) -> Option<(String, String)> {$/;"	f
execute_cmd	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    fn execute_cmd($/;"	f
exists	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn exists(&self) -> bool {$/;"	P	implementation:DiffFile
exists	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    fn exists() {$/;"	f	module:tests
exists	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    pub fn exists(&self, oid: Oid) -> bool {$/;"	P	implementation:Odb
exists	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn exists(&self, id: &Id) -> bool$/;"	f
exists	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    pub fn exists(&self, id: &span::Id) -> bool$/;"	f
exists_prefix	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    fn exists_prefix() {$/;"	f	module:tests
exists_prefix	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    pub fn exists_prefix(&self, short_oid: Oid, len: usize) -> Result<Oid, Error> {$/;"	P	implementation:Odb
exit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^        fn exit(&self, _span: &span::Id) {}$/;"	P	implementation:tests::NoSubscriber
exit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    fn exit(&self, id: &span::Id) {$/;"	f
exit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^        fn exit(&self, _: &span::Id) {}$/;"	P	implementation:tests::NopSubscriber
exit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^        fn exit(&self, _: &span::Id) {}$/;"	P	implementation:tests::StringSubscriber
exit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn exit(&self, span: &span::Id) {$/;"	f
exit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/lib.rs	/^    pub fn exit(&self) {$/;"	P	implementation:CurrentSpan
exit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn exit(&self, id: &span::Id) {$/;"	P	implementation:Registry
expect_parse	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn expect_parse(dirs: impl AsRef<str>) -> Vec<Directive> {$/;"	f	module:test
expecting	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::ts_milliseconds::MilliSecondsTimestampVisitor
expecting	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::ts_milliseconds_option::OptionMilliSecondsTimestampVisitor
expecting	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::ts_nanoseconds::NanoSecondsTimestampVisitor
expecting	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::ts_nanoseconds_option::OptionNanoSecondsTimestampVisitor
expecting	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::ts_seconds::SecondsTimestampVisitor
expecting	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::ts_seconds_option::OptionSecondsTimestampVisitor
expecting	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::DateTimeVisitor
expecting	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^        fn expecting(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:month_serde::MonthVisitor
expecting	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^        fn expecting(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:weekday_serde::WeekdayVisitor
expecting	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::NaiveDateVisitor
expecting	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::ts_milliseconds::NaiveDateTimeFromMilliSecondsVisitor
expecting	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::ts_nanoseconds::NaiveDateTimeFromNanoSecondsVisitor
expecting	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::ts_seconds::NaiveDateTimeFromSecondsVisitor
expecting	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::NaiveDateTimeVisitor
expecting	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::NaiveTimeVisitor
exposing_tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn exposing_tests() {$/;"	f	module:tests
ext	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^mod ext {$/;"	n
ext_context	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^        fn ext_context<C>(self, context: C) -> Error$/;"	P	implementation:ext::Error
ext_context	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^        fn ext_context<C>(self, context: C) -> Error$/;"	P	interface:ext::StdError
ext_context	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^        fn ext_context<C>(self, context: C) -> Error$/;"	f	module:ext
extend	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^    pub fn extend<'b>(self) -> Mut<'b, T> {$/;"	P	implementation:Mut
extend	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn extend<I: IntoIterator<Item = T>>(&mut self, iter: I) {$/;"	P	implementation:DirectiveSet
extensions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    fn extensions(&self) -> Extensions<'_>;$/;"	P	interface:SpanData
extensions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    pub fn extensions(&self) -> Extensions<'_> {$/;"	f
extensions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^mod extensions;$/;"	n
extensions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn extensions(&self) -> Extensions<'_> {$/;"	P	implementation:Data
extensions_mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    fn extensions_mut(&self) -> ExtensionsMut<'_>;$/;"	P	interface:SpanData
extensions_mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    pub fn extensions_mut(&self) -> ExtensionsMut<'_> {$/;"	f
extensions_mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn extensions_mut(&self) -> ExtensionsMut<'_> {$/;"	P	implementation:Data
external_template	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn external_template(&mut self, enabled: bool) -> &mut RepositoryInitOptions {$/;"	P	implementation:RepositoryInitOptions
extract_signature	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn extract_signature($/;"	P	implementation:Repository
f	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^    f: F,$/;"	m	struct:CoalesceBy
f	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs	/^    f: F,$/;"	m	struct:MapSpecialCase
f	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    f: F$/;"	m	struct:FilterMapOk
f	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    f: F$/;"	m	struct:FilterOk
f	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    f: F,$/;"	m	struct:Batching
f	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    f: F,$/;"	m	struct:Positions
f	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    f: F,$/;"	m	struct:TakeWhileRef
f	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    f: F,$/;"	m	struct:Update
f	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs	/^    f: F,$/;"	m	struct:PeekingTakeWhile
f	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs	/^    f: F,$/;"	m	struct:Iterate
f	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs	/^    f: F,$/;"	m	struct:RepeatCall
f	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs	/^    f: F,$/;"	m	struct:Unfold
f	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs	/^    f: F,$/;"	m	struct:UniqueBy
f	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    f: F,$/;"	m	struct:FieldFnVisitor
factory	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^    factory: Box<TransportFactory>,$/;"	m	struct:TransportData
fail_on_conflict	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    pub fn fail_on_conflict(&mut self, fail: bool) -> &mut MergeOptions {$/;"	P	implementation:MergeOptions
failed_entries	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    pub fn failed_entries(&self) -> PathspecFailedEntries<'_> {$/;"	P	implementation:PathspecMatchList
failed_entry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    pub fn failed_entry(&self, i: usize) -> Option<&[u8]> {$/;"	P	implementation:PathspecMatchList
failed_entrycount	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    fn failed_entrycount(&self) -> usize {$/;"	P	implementation:PathspecMatchList
fetch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn fetch<Str: AsRef<str> + crate::IntoCString + Clone>($/;"	P	implementation:Remote
fetch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    pub fn fetch(&mut self, opts: FetchOptions<'cb>) -> &mut Self {$/;"	P	implementation:SubmoduleUpdateOptions
fetch_options	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn fetch_options(&mut self, fetch_opts: FetchOptions<'cb>) -> &mut RepoBuilder<'cb> {$/;"	P	implementation:RepoBuilder
fetch_opts	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    fetch_opts: Option<FetchOptions<'cb>>,$/;"	m	struct:RepoBuilder
fetch_opts	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    fetch_opts: FetchOptions<'cb>,$/;"	m	struct:SubmoduleUpdateOptions
fetch_refspecs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn fetch_refspecs(&self) -> Result<StringArray, Error> {$/;"	P	implementation:Remote
fgcolor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fgcolor: Option<Color>,$/;"	m	struct:ColoredString
fgcolor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    pub fn fgcolor(&self) -> Option<Color> {$/;"	P	implementation:ColoredString
field	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/lib.rs	/^pub mod field;$/;"	n
field	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    pub fn field<Q: ?Sized>(&self, field: &Q) -> Option<field::Field>$/;"	P	implementation:Span
field	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^mod field;$/;"	n
field	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/lib.rs	/^pub mod field;$/;"	n
field_format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn field_format(&self) -> &N {$/;"	f
field_matcher	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    pub(crate) fn field_matcher(&self, meta: &Metadata<'_>) -> Option<field::CallsiteMatch> {$/;"	P	implementation:Directive
field_matches	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    field_matches: FilterVec<T>,$/;"	m	struct:MatchSet
field_names	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    field_names: FilterVec<String>,$/;"	m	struct:StaticDirective
fields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fields: FilterVec<field::Match>,$/;"	m	struct:Directive
fields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    fields: FieldMap<(ValueMatch, AtomicBool)>,$/;"	m	struct:SpanMatch
fields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fields: String,$/;"	m	struct:FormattedFields
fields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    pub fn fields(&self) -> &FieldSet {$/;"	f
fieldset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/macros.rs	/^macro_rules! fieldset {$/;"	M
file	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub file: Option<&'a mut FileCb<'b>>,$/;"	m	struct:DiffCallbacks
file_cb_c	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^pub extern "C" fn file_cb_c($/;"	f
file_favor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    pub fn file_favor(&mut self, favor: FileFavor) -> &mut MergeOptions {$/;"	P	implementation:MergeOptions
file_flag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    fn file_flag(&mut self, opt: u32, val: bool) -> &mut MergeOptions {$/;"	P	implementation:MergeOptions
file_perm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    file_perm: Option<i32>,$/;"	m	struct:CheckoutBuilder
file_perm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn file_perm(&mut self, perm: i32) -> &mut CheckoutBuilder<'cb> {$/;"	P	implementation:CheckoutBuilder
file_size	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub file_size: u32,$/;"	m	struct:IndexEntry
file_time_as_u64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^fn file_time_as_u64(ft: &FILETIME) -> u64 {$/;"	f
file_time_as_u64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn file_time_as_u64(ft: &FILETIME) -> u64 {$/;"	f	module:inner
file_time_to_nsec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn file_time_to_nsec(ft: &FILETIME) -> i32 {$/;"	f	module:inner
file_time_to_unix_seconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^fn file_time_to_unix_seconds(ft: &FILETIME) -> i64 {$/;"	f
file_time_to_unix_seconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn file_time_to_unix_seconds(ft: &FILETIME) -> i64 {$/;"	f	module:inner
filemode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    pub fn filemode(&self) -> i32 {$/;"	P	implementation:TreeEntry
filemode_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    pub fn filemode_raw(&self) -> i32 {$/;"	P	implementation:TreeEntry
files_changed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn files_changed(&self) -> usize {$/;"	P	implementation:DiffStats
filler	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/pad_tail.rs	/^    filler: F,$/;"	m	struct:PadUsing
filter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    fn filter() {$/;"	f	module:tests
filter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/treebuilder.rs	/^    fn filter() {$/;"	f	module:tests
filter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/treebuilder.rs	/^    pub fn filter<F>(&mut self, mut filter: F) -> Result<(), Error>$/;"	P	implementation:TreeBuilder
filter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    pub(crate) fn filter(&self) -> Option<LevelFilter> {$/;"	P	implementation:SpanMatch
filter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    filter: F,$/;"	m	struct:SubscriberBuilder
filter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/lib.rs	/^pub mod filter;$/;"	n
filter_cb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/treebuilder.rs	/^extern "C" fn filter_cb(entry: *const raw::git_tree_entry, payload: *mut c_void) -> c_int {$/;"	f
filter_map_ok	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub fn filter_map_ok<I, F, T, U, E>(iter: I, f: F) -> FilterMapOk<I, F>$/;"	f
filter_map_ok	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn filter_map_ok<F, T, U, E>(self, f: F) -> FilterMapOk<Self, F>$/;"	P	interface:Itertools
filter_ok	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub fn filter_ok<I, F, T, E>(iter: I, f: F) -> FilterOk<I, F>$/;"	f
filter_ok	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn filter_ok<F, T, E>(self, f: F) -> FilterOk<Self, F>$/;"	P	interface:Itertools
final_commit_id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    pub fn final_commit_id(&self) -> Oid {$/;"	P	implementation:BlameHunk
final_signature	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    pub fn final_signature(&self) -> Signature<'_> {$/;"	P	implementation:BlameHunk
final_start_line	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    pub fn final_start_line(&self) -> usize {$/;"	P	implementation:BlameHunk
finalize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    pub fn finalize(&mut self) -> Result<Oid, Error> {$/;"	P	implementation:OdbWriter
find_annotated_commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn find_annotated_commit(&self, id: Oid) -> Result<AnnotatedCommit<'_>, Error> {$/;"	P	implementation:Repository
find_blob	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn find_blob(&self, oid: Oid) -> Result<Blob<'_>, Error> {$/;"	P	implementation:Repository
find_branch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn find_branch(&self, name: &str, branch_type: BranchType) -> Result<Branch<'_>, Error> /;"	P	implementation:Repository
find_commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn find_commit(&self, oid: Oid) -> Result<Commit<'_>, Error> {$/;"	P	implementation:Repository
find_global	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn find_global() -> Result<PathBuf, Error> {$/;"	P	implementation:Config
find_note	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn find_note(&self, notes_ref: Option<&str>, id: Oid) -> Result<Note<'_>, Error> {$/;"	P	implementation:Repository
find_object	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn find_object(&self, oid: Oid, kind: Option<ObjectType>) -> Result<Object<'_>, Error> {$/;"	P	implementation:Repository
find_position	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn find_position<P>(&mut self, mut pred: P) -> Option<(usize, Self::Item)>$/;"	P	interface:Itertools
find_reference	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn find_reference(&self, name: &str) -> Result<Reference<'_>, Error> {$/;"	P	implementation:Repository
find_remote	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn find_remote(&self, name: &str) -> Result<Remote<'_>, Error> {$/;"	P	implementation:Repository
find_renames	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    pub fn find_renames(&mut self, find: bool) -> &mut MergeOptions {$/;"	P	implementation:MergeOptions
find_similar	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn find_similar(&mut self, opts: Option<&mut DiffFindOptions>) -> Result<(), Error> {$/;"	P	implementation:Diff
find_submodule	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn find_submodule(&self, name: &str) -> Result<Submodule<'_>, Error> {$/;"	P	implementation:Repository
find_system	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn find_system() -> Result<PathBuf, Error> {$/;"	P	implementation:Config
find_tag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn find_tag(&self, id: Oid) -> Result<Tag<'_>, Error> {$/;"	P	implementation:Repository
find_tree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn find_tree(&self, oid: Oid) -> Result<Tree<'_>, Error> {$/;"	P	implementation:Repository
find_worktree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn find_worktree(&self, name: &str) -> Result<Worktree, Error> {$/;"	P	implementation:Repository
find_xdg	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn find_xdg() -> Result<PathBuf, Error> {$/;"	P	implementation:Config
finish	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    pub fn finish(&mut self, signature: Option<&Signature<'_>>) -> Result<(), Error> {$/;"	P	implementation:Rebase
finish	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/debug.rs	/^    fn finish(self) -> O {$/;"	f
finish	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^    fn finish(self) -> fmt::Result {$/;"	f
finish	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/display.rs	/^    fn finish(self) -> O {$/;"	f
finish	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^        fn finish(self) -> fmt::Result {$/;"	P	implementation:test_util::DebugVisitor
finish	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    fn finish(self) -> Out;$/;"	P	interface:VisitOutput
finish	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn finish(self) -> Layer<S, N, E, W> {$/;"	f
finish	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    fn finish(self) -> fmt::Result {$/;"	P	implementation:JsonVisitor
finish	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn finish(self) -> fmt::Result {$/;"	P	implementation:DefaultVisitor
finish	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn finish(self) -> fmt::Result {$/;"	f
finish	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^    fn finish(self) -> fmt::Result {$/;"	P	implementation:PrettyVisitor
finish	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn finish(self) -> Subscriber<N, E, F, W> {$/;"	f
finish	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^    fn finish(&self) -> u64 {$/;"	P	implementation:IdHasher
first	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs	/^    first: bool,$/;"	m	struct:Combinations
first	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations_with_replacement.rs	/^    first: bool,$/;"	m	struct:CombinationsWithReplacement
first	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    first: Option<I::Item>,$/;"	m	struct:Chunk
first	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    first: Option<I::Item>,$/;"	m	struct:Group
first_parent	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    pub fn first_parent(&mut self, opt: bool) -> &mut BlameOptions {$/;"	P	implementation:BlameOptions
first_two	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs	/^    first_two: Option<Either<[I::Item; 2], I::Item>>,$/;"	m	struct:ExactlyOneError
five	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        fn five() {$/;"	f	module:tests::styles_combine_complex
fix	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^macro_rules! fix {$/;"	M
fix	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn fix(&self) -> FixedOffset {$/;"	P	implementation:FixedOffset
fix	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn fix(&self) -> FixedOffset;$/;"	P	interface:Offset
fix	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    fn fix(&self) -> FixedOffset {$/;"	P	implementation:Utc
fixed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^mod fixed;$/;"	n
fixup_windows_path	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^fn fixup_windows_path(path: CString) -> Result<CString, Error> {$/;"	f
fixup_windows_path	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^fn fixup_windows_path<P: Into<Vec<u8>>>(path: P) -> Result<CString, Error> {$/;"	f
flag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/apply.rs	/^    fn flag(&mut self, opt: raw::git_apply_flags_t, val: bool) -> &mut Self {$/;"	P	implementation:ApplyOptions
flag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    fn flag(&mut self, opt: u32, val: bool) -> &mut BlameOptions {$/;"	P	implementation:BlameOptions
flag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    fn flag(&mut self, bit: raw::git_checkout_strategy_t, on: bool) -> &mut CheckoutBuilder<'cb>/;"	P	implementation:CheckoutBuilder
flag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn flag(&mut self, opt: i32, val: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
flag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn flag(&mut self, opt: u32, val: bool) -> &mut DiffFindOptions {$/;"	P	implementation:DiffFindOptions
flag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn flag(&mut self, opt: u32, val: bool) -> &mut Self {$/;"	P	implementation:DiffFormatEmailOptions
flag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    fn flag(&mut self, opt: u32, val: bool) -> &mut MergeOptions {$/;"	P	implementation:MergeOptions
flag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    fn flag($/;"	P	implementation:RepositoryInitOptions
flag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    fn flag(&mut self, flag: raw::git_status_opt_t, val: bool) -> &mut StatusOptions {$/;"	P	implementation:StatusOptions
flag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    fn flag(&mut self, flag: raw::git_worktree_prune_t, on: bool) -> &mut WorktreePruneOptions {$/;"	P	implementation:WorktreePruneOptions
flag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    flag: bool,$/;"	m	struct:Interleave
flags	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn flags(&self) -> YearFlags {$/;"	P	implementation:Mdf
flags	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn flags(&self) -> YearFlags {$/;"	P	implementation:Of
flags	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn flags(&self) -> DiffFlags {$/;"	P	implementation:DiffDelta
flags	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub flags: u16,$/;"	m	struct:IndexEntry
flags	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    flags: u32,$/;"	m	struct:RepositoryInitOptions
flags_extended	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub flags_extended: u16,$/;"	m	struct:IndexEntry
flatten_event	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn flatten_event($/;"	P	implementation:Layer
flatten_event	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    pub fn flatten_event(&mut self, flatten_event: bool) {$/;"	P	implementation:Json
flatten_event	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    pub fn flatten_event(mut self, flatten_event: bool) -> Format<Json, T> {$/;"	P	implementation:Format
flatten_event	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn flatten_event($/;"	P	implementation:SubscriberBuilder
flip	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs	/^    pub fn flip(self) -> EitherOrBoth<B, A> {$/;"	P	implementation:EitherOrBoth
flush	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:BlobWriter
flush	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:OdbPackwriter
flush	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:OdbWriter
flush	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:WriteAdaptor
flush	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^        fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:test::MockWriter
flush	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:TestWriter
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/lib.rs	/^mod fmt;$/;"	n
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/wrapper.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:BoxedError
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/wrapper.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Date
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^                fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::DateTime::serialize::FormatWrapped
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:DateTime
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:DelayedFormat
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:InternalNumeric
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ParseError
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ParseMonthError
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ParseWeekdayError
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:SerdeError
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Weekday
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^                fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::NaiveDate::serialize::FormatWrapped
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:NaiveDate
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^                fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::NaiveDateTime::serialize::FormatWrapped
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:NaiveDateTime
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Mdf
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Of
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:YearFlags
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:IsoWeek
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:NaiveTime
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:FixedOffset
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Utc
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Duration
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:OutOfRangeError
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:RoundingError
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ColoredString
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {$/;"	P	implementation:Blob
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {$/;"	P	implementation:Commit
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {$/;"	P	implementation:DiffDelta
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {$/;"	P	implementation:DiffFile
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {$/;"	P	implementation:DiffHunk
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {$/;"	P	implementation:DiffLine
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {$/;"	P	implementation:DiffStats
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ObjectType
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ReferenceType
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {$/;"	P	implementation:Note
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {$/;"	P	implementation:Object
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Oid
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid_array.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {$/;"	P	implementation:OidArray
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/patch.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {$/;"	P	implementation:Patch
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/signature.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Signature
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {$/;"	P	implementation:Tag
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {$/;"	P	implementation:Tree
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs	/^    fn fmt(&self, f: &mut Formatter) -> FmtResult {$/;"	f
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/display.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:TmFmt
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Duration
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:OutOfRangeError
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ParseError
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:SteadyTime
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:inner::unix::SteadyTime
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:FmtAttrs
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:FmtValues
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Span
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/stdlib.rs	/^    pub(crate) mod fmt {$/;"	n	module:no_std
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Directive
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ParseError
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:StaticDirective
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:BadName
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Match
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:MatchPattern
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ValueMatch
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:EnvFilter
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:FromEnvError
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:FmtContext
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:FormattedFields
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:JsonVisitor
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:WriteAdaptor
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^        fn fmt(t: u64) -> String {$/;"	f	function:test::format_nanos
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:DefaultVisitor
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:FieldFnVisitor
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:FmtLevel
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:FmtSpan
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:FmtSpanConfig
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:FmtThreadName
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:TimingDisplay
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:PrettyVisitor
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^pub fn fmt() -> SubscriberBuilder {$/;"	f
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/datetime.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:DateTime
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:BoxMakeWriter
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:Scope
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/lib.rs	/^pub mod fmt;$/;"	n
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ExtensionsInner
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	f
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/thread.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Id
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/thread.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Local
fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/util.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:TryInitError
fmt_event	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    fmt_event: E,$/;"	m	struct:Layer
fmt_fields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    fmt_fields: N,$/;"	m	struct:Layer
fmt_fields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn fmt_fields<N2>(self, fmt_fields: N2) -> Layer<S, N2, E, W>$/;"	P	implementation:Layer
fmt_fields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn fmt_fields<N2>(self, fmt_fields: N2) -> SubscriberBuilder<N2, E, F, W>$/;"	P	implementation:SubscriberBuilder
fmt_layer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^mod fmt_layer;$/;"	n
fmt_layer_downcasts	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    fn fmt_layer_downcasts() {$/;"	f	module:test
fmt_layer_downcasts_to_parts	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    fn fmt_layer_downcasts_to_parts() {$/;"	f	module:test
fmt_rfc2822_datetime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    fn fmt_rfc2822_datetime(dt: DateTime<FixedOffset>) -> String {$/;"	f	function:test_rfc2822
fmt_rfc3339_datetime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    fn fmt_rfc3339_datetime(dt: DateTime<FixedOffset>) -> String {$/;"	f	function:test_rfc3339
fmt_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    fmt_span: format::FmtSpanConfig,$/;"	m	struct:Layer
fmt_write	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    fmt_write: &'a mut dyn fmt::Write,$/;"	m	struct:WriteAdaptor
fold	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^    fn fold<Acc, FnAcc>(self, acc: Acc, mut fn_acc: FnAcc) -> Acc$/;"	f
fold	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs	/^    fn fold<Acc, Fold>(self, init: Acc, mut fold_f: Fold) -> Acc$/;"	f
fold	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    fn fold<Acc, Fold>(self, init: Acc, fold_f: Fold) -> Acc$/;"	f
fold	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    fn fold<Acc, G>(mut self, init: Acc, mut f: G) -> Acc$/;"	f
fold	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    fn fold<Acc, G>(mut self, mut accum: Acc, mut f: G) -> Acc$/;"	f
fold	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    fn fold<Acc, G>(self, init: Acc, mut g: G) -> Acc$/;"	f
fold	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs	/^pub fn fold<I, B, F>(iterable: I, init: B, f: F) -> B$/;"	f
fold	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs	/^    pub fn fold<FO, R>(self, init: R, mut operation: FO) -> HashMap<K, R>$/;"	f
fold	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs	/^    fn fold<B, F>(mut self, init: B, mut f: F) -> B where$/;"	f
fold1	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn fold1<F>(mut self, f: F) -> Option<Self::Item>$/;"	P	interface:Itertools
fold_first	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs	/^    pub fn fold_first<FO>(self, mut operation: FO) -> HashMap<K, V>$/;"	f
fold_ok	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn fold_ok<A, E, B, F>(&mut self, mut start: B, mut f: F) -> Result<B, E>$/;"	P	interface:Itertools
fold_options	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn fold_options<A, B, F>(&mut self, mut start: B, mut f: F) -> Option<B>$/;"	P	interface:Itertools
fold_results	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn fold_results<A, E, B, F>(&mut self, start: B, f: F) -> Result<B, E>$/;"	P	interface:Itertools
fold_while	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn fold_while<B, F>(&mut self, init: B, mut f: F) -> FoldWhile<B>$/;"	P	interface:Itertools
follows_from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    fn follows_from(&self, from: &Id) {$/;"	P	implementation:Inner
follows_from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    pub fn follows_from(&self, from: impl Into<Option<Id>>) -> &Self {$/;"	P	implementation:Span
for_untracked	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn for_untracked(&mut self, find: bool) -> &mut DiffFindOptions {$/;"	P	implementation:DiffFindOptions
force	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn force(&mut self) -> &mut CheckoutBuilder<'cb> {$/;"	P	implementation:CheckoutBuilder
force_binary	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn force_binary(&mut self, force: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
force_text	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn force_text(&mut self, force: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
foreach	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn foreach($/;"	P	implementation:Diff
foreach	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    pub fn foreach<C>(&self, mut callback: C) -> Result<(), Error>$/;"	P	implementation:Odb
foreach	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    pub fn foreach<F>(&mut self, mut cb: F) -> Result<(), Error>$/;"	P	implementation:PackBuilder
foreach	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn foreach<F>(self, f: F)$/;"	P	interface:Itertools
foreach_all_callbacks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn foreach_all_callbacks() {$/;"	f	module:tests
foreach_c	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^extern "C" fn foreach_c(buf: *const c_void, size: size_t, data: *mut c_void) -> c_int {$/;"	f
foreach_cb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^extern "C" fn foreach_cb(id: *const raw::git_oid, payload: *mut c_void) -> c_int {$/;"	f
foreach_file_and_hunk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn foreach_file_and_hunk() {$/;"	f	module:tests
foreach_file_only	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn foreach_file_only() {$/;"	f	module:tests
foreach_smoke	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn foreach_smoke() {$/;"	f	module:tests
format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn format<'a>(&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>> {$/;"	f
format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn format<'a>(&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>> {$/;"	f
format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub fn format<'a, I, B>($/;"	f
format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub mod format;$/;"	n
format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn format<'a>(&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>> {$/;"	P	implementation:NaiveDate
format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn format<'a>(&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>> {$/;"	P	implementation:NaiveDateTime
format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn format<'a>(&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>> {$/;"	P	implementation:NaiveTime
format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/formatters.rs	/^    fn format(out: String, _fg: Color, _bg: Color, _style: Style) -> String {$/;"	P	implementation:NoColor
format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/formatters.rs	/^    fn format(out: String, fg: Color, bg: Color, style: Style) -> String;$/;"	P	interface:ColoringFormatter
format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^    pub fn format(&self, opts: Option<&DescribeFormatOptions>) -> Result<String, Error> {$/;"	P	implementation:Describe
format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs	/^    fn format<F>(&self, f: &mut fmt::Formatter, mut cb: F) -> fmt::Result$/;"	f
format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn format(self, sep: &str) -> Format<Self>$/;"	P	interface:Itertools
format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod format;$/;"	n
format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    format: Fmt<'a>$/;"	m	struct:TmFmt
format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    format: F,$/;"	m	struct:Format
format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^pub fn format() -> Format {$/;"	f
format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^pub mod format;$/;"	n
format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^    format: ChronoFmtType,$/;"	m	struct:ChronoLocal
format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^    format: ChronoFmtType,$/;"	m	struct:ChronoUtc
format_email	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn format_email($/;"	P	implementation:Diff
format_email_simple	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn format_email_simple() {$/;"	f	module:tests
format_event	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    fn format_event($/;"	f
format_event	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn format_event($/;"	P	interface:FormatEvent
format_event	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn format_event($/;"	f
format_event	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^    fn format_event($/;"	f
format_fields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    fn format_fields<R: RecordFields>($/;"	f
format_fields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    fn format_fields<R: RecordFields>($/;"	P	implementation:JsonFields
format_fields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn format_fields<R: RecordFields>($/;"	P	interface:FormatFields
format_fields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn format_fields<R: RecordFields>($/;"	f
format_fields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^    fn format_fields<R: RecordFields>($/;"	P	implementation:Pretty
format_inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^fn format_inner<'a>($/;"	f
format_item	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub fn format_item<'a>($/;"	f
format_item_localized	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub fn format_item_localized<'a>($/;"	f
format_localized	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn format_localized<'a>($/;"	f
format_localized	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn format_localized<'a>($/;"	f
format_localized	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub fn format_localized<'a, I, B>($/;"	f
format_localized_with_items	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn format_localized_with_items<'a, I, B>($/;"	f
format_localized_with_items	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn format_localized_with_items<'a, I, B>($/;"	f
format_nanos	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn format_nanos() {$/;"	f	module:test
format_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^        fn format_time(&self, w: &mut dyn fmt::Write) -> fmt::Result {$/;"	P	implementation:test::MockTime
format_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^        fn format_time(&self, w: &mut dyn fmt::Write) -> fmt::Result {$/;"	P	implementation:test::MockTime
format_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^    fn format_time(&self, _: &mut dyn fmt::Write) -> fmt::Result {$/;"	P	implementation:FormatTime
format_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^    fn format_time(&self, w: &mut dyn fmt::Write) -> fmt::Result {$/;"	P	implementation:ChronoLocal
format_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^    fn format_time(&self, w: &mut dyn fmt::Write) -> fmt::Result {$/;"	P	implementation:ChronoUtc
format_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^    fn format_time(&self, w: &mut dyn fmt::Write) -> fmt::Result {$/;"	P	implementation:Result
format_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^    fn format_time(&self, w: &mut dyn fmt::Write) -> fmt::Result {$/;"	P	implementation:SystemTime
format_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^    fn format_time(&self, w: &mut dyn fmt::Write) -> fmt::Result {$/;"	P	implementation:Uptime
format_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^    fn format_time(&self, w: &mut dyn fmt::Write) -> fmt::Result {$/;"	f
format_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^    fn format_time(&self, w: &mut dyn fmt::Write) -> fmt::Result;$/;"	P	interface:FormatTime
format_with	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn format_with<F>(self, sep: &str, format: F) -> FormatWith<Self, F>$/;"	P	interface:Itertools
format_with_items	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn format_with_items<'a, I, B>(&self, items: I) -> DelayedFormat<I>$/;"	f
format_with_items	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn format_with_items<'a, I, B>(&self, items: I) -> DelayedFormat<I>$/;"	f
format_with_items	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn format_with_items<'a, I, B>(&self, items: I) -> DelayedFormat<I>$/;"	P	implementation:NaiveDate
format_with_items	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn format_with_items<'a, I, B>(&self, items: I) -> DelayedFormat<I>$/;"	P	implementation:NaiveDateTime
format_with_items	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn format_with_items<'a, I, B>(&self, items: I) -> DelayedFormat<I>$/;"	P	implementation:NaiveTime
formatting	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn formatting() {$/;"	f	module:tests
four	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        fn four() {$/;"	f	module:tests::styles_combine_complex
frac	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    frac: u32,$/;"	m	struct:NaiveTime
free	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^pub mod free;$/;"	n
frequency	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn frequency() -> i64 {$/;"	f	module:inner
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    fn from(error: E) -> Self {$/;"	f
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    fn from(error: Error) -> Self {$/;"	P	implementation:Box
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn from(obj: TsSeconds<Tz>) -> DateTime<Tz> {$/;"	P	implementation:rustc_serialize::DateTime
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from(date: &js_sys::Date) -> DateTime<Utc> {$/;"	P	implementation:DateTime
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from(date: DateTime<Utc>) -> js_sys::Date {$/;"	P	implementation:Date
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from(date: js_sys::Date) -> DateTime<Utc> {$/;"	P	implementation:DateTime
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from(dt: DateTime<Tz>) -> SystemTime {$/;"	P	implementation:SystemTime
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from(src: DateTime<FixedOffset>) -> Self {$/;"	P	implementation:DateTime
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from(src: DateTime<Local>) -> Self {$/;"	P	implementation:DateTime
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from(src: DateTime<Utc>) -> Self {$/;"	P	implementation:DateTime
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from(t: SystemTime) -> DateTime<Local> {$/;"	P	implementation:DateTime
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from(t: SystemTime) -> DateTime<Utc> {$/;"	P	implementation:DateTime
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from<T, D>(me: LocalResult<T>, d: &mut D) -> Result<T, D::Error>$/;"	f	module:rustc_serialize
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn from(obj: TsSeconds) -> NaiveDateTime {$/;"	P	implementation:rustc_serialize::NaiveDateTime
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    fn from(src: &str) -> Self {$/;"	P	implementation:Color
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    fn from(src: String) -> Self {$/;"	P	implementation:Color
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn from(s: &'a str) -> Self {$/;"	P	implementation:ColoredString
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/error.rs	/^    fn from(_: NulError) -> Error {$/;"	P	implementation:Error
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/error.rs	/^    fn from(e: JoinPathsError) -> Error {$/;"	P	implementation:Error
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    fn from(mode: FileMode) -> i32 {$/;"	P	implementation:i32
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    fn from(mode: FileMode) -> u32 {$/;"	P	implementation:u32
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revspec.rs	/^    from: Option<Object<'repo>>,$/;"	m	struct:Revspec
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revspec.rs	/^    pub fn from(&self) -> Option<&Object<'repo>> {$/;"	P	implementation:Revspec
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    fn from(iter: I) -> Self {$/;"	P	implementation:Tuple1Combination
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn from(e: Box<dyn Error + Send + Sync>) -> Self {$/;"	P	implementation:ParseError
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn from(l: level::ParseError) -> Self {$/;"	P	implementation:ParseError
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn from(level: Level) -> Self {$/;"	P	implementation:Directive
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn from(level: LevelFilter) -> Self {$/;"	P	implementation:Directive
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    fn from(p: ParseError) -> Self {$/;"	P	implementation:FromEnvError
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    fn from(s: S) -> Self {$/;"	f
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    fn from(v: env::VarError) -> Self {$/;"	P	implementation:FromEnvError
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/datetime.rs	/^    fn from(timestamp: std::time::SystemTime) -> DateTime {$/;"	P	implementation:DateTime
from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^    fn from(epoch: Instant) -> Self {$/;"	P	implementation:Uptime
from_adhoc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    pub(crate) fn from_adhoc<M>(message: M, backtrace: Option<Backtrace>) -> Self$/;"	P	implementation:Error
from_args	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.21/src/lib.rs	/^    fn from_args() -> Self$/;"	P	interface:StructOpt
from_args_safe	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.21/src/lib.rs	/^    fn from_args_safe() -> Result<Self, clap::Error>$/;"	P	interface:StructOpt
from_blob_and_buffer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/patch.rs	/^    pub fn from_blob_and_buffer($/;"	P	implementation:Patch
from_blobs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/patch.rs	/^    pub fn from_blobs($/;"	P	implementation:Patch
from_boxed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    pub(crate) fn from_boxed($/;"	P	implementation:Error
from_buffer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn from_buffer(buffer: &[u8]) -> Result<Diff<'static>, Error> {$/;"	P	implementation:Diff
from_buffers	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/patch.rs	/^    pub fn from_buffers($/;"	P	implementation:Patch
from_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^    pub fn from_bytes(bytes: &[u8]) -> Result<Oid, Error> {$/;"	P	implementation:Oid
from_clap	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.21/src/lib.rs	/^    fn from_clap(matches: &clap::ArgMatches<'_>) -> Self {$/;"	P	implementation:Box
from_clap	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.21/src/lib.rs	/^    fn from_clap(matches: &clap::ArgMatches<'_>) -> Self;$/;"	P	interface:StructOpt
from_complete	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs	/^        fn from_complete(complete_state: CompleteState) -> usize {$/;"	f	function:count
from_context	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    pub(crate) fn from_context<C, E>(context: C, error: E, backtrace: Option<Backtrace>) -> Self$/;"	P	implementation:Error
from_default_env	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    pub fn from_default_env() -> Self {$/;"	P	implementation:EnvFilter
from_diff	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/patch.rs	/^    pub fn from_diff(diff: &Diff<'buffers>, idx: usize) -> Result<Option<Self>, Error> {$/;"	P	implementation:Patch
from_directives	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    fn from_directives(directives: impl IntoIterator<Item = Directive>) -> Self {$/;"	P	implementation:EnvFilter
from_display	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    pub(crate) fn from_display<M>(message: M, backtrace: Option<Backtrace>) -> Self$/;"	P	implementation:Error
from_env	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^    pub fn from_env() -> Self {$/;"	P	implementation:ShouldColorize
from_env	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    pub fn from_env<A: AsRef<str>>(env: A) -> Self {$/;"	P	implementation:EnvFilter
from_hms	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_hms(hour: u32, min: u32, sec: u32) -> NaiveTime {$/;"	P	implementation:NaiveTime
from_hms_micro	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_hms_micro(hour: u32, min: u32, sec: u32, micro: u32) -> NaiveTime {$/;"	P	implementation:NaiveTime
from_hms_micro_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_hms_micro_opt(hour: u32, min: u32, sec: u32, micro: u32) -> Option<NaiveTime> {$/;"	P	implementation:NaiveTime
from_hms_milli	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_hms_milli(hour: u32, min: u32, sec: u32, milli: u32) -> NaiveTime {$/;"	P	implementation:NaiveTime
from_hms_milli_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_hms_milli_opt(hour: u32, min: u32, sec: u32, milli: u32) -> Option<NaiveTime> {$/;"	P	implementation:NaiveTime
from_hms_nano	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_hms_nano(hour: u32, min: u32, sec: u32, nano: u32) -> NaiveTime {$/;"	P	implementation:NaiveTime
from_hms_nano_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_hms_nano_opt(hour: u32, min: u32, sec: u32, nano: u32) -> Option<NaiveTime> {$/;"	P	implementation:NaiveTime
from_hms_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_hms_opt(hour: u32, min: u32, sec: u32) -> Option<NaiveTime> {$/;"	P	implementation:NaiveTime
from_i64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn from_i64(n: i64) -> Option<Month> {$/;"	P	implementation:Month
from_i64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn from_i64(n: i64) -> Option<Weekday> {$/;"	P	implementation:Weekday
from_isoywd	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_isoywd(year: i32, week: u32, weekday: Weekday) -> NaiveDate {$/;"	P	implementation:NaiveDate
from_isoywd_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_isoywd_opt(year: i32, week: u32, weekday: Weekday) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
from_iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.21/src/lib.rs	/^    fn from_iter<I>(iter: I) -> Self$/;"	P	interface:StructOpt
from_iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn from_iter<I: IntoIterator<Item = T>>(iter: I) -> Self {$/;"	P	implementation:DirectiveSet
from_iter_safe	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.21/src/lib.rs	/^    fn from_iter_safe<I>(iter: I) -> Result<Self, clap::Error>$/;"	P	interface:StructOpt
from_local_date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn from_local_date(&self, local: &NaiveDate) -> LocalResult<Date<Local>> {$/;"	P	implementation:Local
from_local_date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn from_local_date(&self, local: &NaiveDate) -> LocalResult<Date<Self>> {$/;"	P	interface:TimeZone
from_local_datetime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn from_local_datetime(&self, local: &NaiveDateTime) -> LocalResult<DateTime<Local>> {$/;"	P	implementation:Local
from_local_datetime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn from_local_datetime(&self, local: &NaiveDateTime) -> LocalResult<DateTime<Self>> {$/;"	P	interface:TimeZone
from_mdf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn from_mdf(year: i32, mdf: Mdf) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
from_mdf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn from_mdf(Mdf(mdf): Mdf) -> Of {$/;"	P	implementation:Of
from_num_days_from_ce	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_num_days_from_ce(days: i32) -> NaiveDate {$/;"	P	implementation:NaiveDate
from_num_days_from_ce_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_num_days_from_ce_opt(days: i32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
from_num_seconds_from_midnight	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_num_seconds_from_midnight(secs: u32, nano: u32) -> NaiveTime {$/;"	P	implementation:NaiveTime
from_num_seconds_from_midnight_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_num_seconds_from_midnight_opt(secs: u32, nano: u32) -> Option<NaiveTime> {$/;"	P	implementation:NaiveTime
from_objects	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revspec.rs	/^    pub fn from_objects($/;"	P	implementation:Revspec
from_odb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn from_odb(odb: Odb<'_>) -> Result<Repository, Error> {$/;"	P	implementation:Repository
from_of	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn from_of(year: i32, of: Of) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
from_of	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn from_of(Of(of): Of) -> Mdf {$/;"	P	implementation:Mdf
from_offset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn from_offset(offset: &FixedOffset) -> FixedOffset {$/;"	P	implementation:FixedOffset
from_offset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn from_offset(_offset: &FixedOffset) -> Local {$/;"	P	implementation:Local
from_offset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn from_offset(offset: &Self::Offset) -> Self;$/;"	P	interface:TimeZone
from_offset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    fn from_offset(_state: &Utc) -> Utc {$/;"	P	implementation:Utc
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/apply.rs	/^    unsafe fn from_raw(raw: raw::git_apply_location_t) -> Self {$/;"	P	implementation:ApplyLocation
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    unsafe fn from_raw(opts: *mut raw::git_blame_options) -> BlameOptions {$/;"	P	implementation:BlameOptions
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    unsafe fn from_raw(raw: *mut raw::git_blame) -> Blame<'repo> {$/;"	P	implementation:Blame
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    unsafe fn from_raw(raw: *mut raw::git_blame_hunk) -> BlameHunk<'blame> {$/;"	P	implementation:BlameHunk
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^    unsafe fn from_raw(raw: *mut raw::git_blob) -> Blob<'repo> {$/;"	P	implementation:Blob
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^    unsafe fn from_raw(raw: *mut raw::git_writestream) -> BlobWriter<'repo> {$/;"	P	implementation:BlobWriter
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/branch.rs	/^    pub unsafe fn from_raw(raw: *mut raw::git_branch_iterator) -> Branches<'repo> {$/;"	P	implementation:Branches
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/buf.rs	/^    unsafe fn from_raw(raw: *mut raw::git_buf) -> Buf {$/;"	P	implementation:Buf
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cert.rs	/^    unsafe fn from_raw(raw: *mut raw::git_cert) -> Cert<'a> {$/;"	P	implementation:Cert
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    unsafe fn from_raw(raw: *mut raw::git_commit) -> Commit<'repo> {$/;"	P	implementation:Commit
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    unsafe fn from_raw(raw: *mut raw::git_config) -> Config {$/;"	P	implementation:Config
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    unsafe fn from_raw(raw: *mut raw::git_config_entry) -> ConfigEntry<'cfg> {$/;"	P	implementation:ConfigEntry
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    unsafe fn from_raw(raw: *mut raw::git_config_iterator) -> ConfigEntries<'cfg> {$/;"	P	implementation:ConfigEntries
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    unsafe fn from_raw(raw: *mut raw::git_cred) -> Cred {$/;"	P	implementation:Cred
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^    unsafe fn from_raw(_raw: *mut raw::git_describe_options) -> DescribeOptions {$/;"	P	implementation:DescribeOptions
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^    unsafe fn from_raw(raw: *mut raw::git_describe_result) -> Describe<'repo> {$/;"	P	implementation:Describe
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    unsafe fn from_raw(raw: *const raw::git_diff_binary) -> DiffBinary<'a> {$/;"	P	implementation:DiffBinary
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    unsafe fn from_raw(raw: *const raw::git_diff_binary_file) -> DiffBinaryFile<'a> {$/;"	P	implementation:DiffBinaryFile
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    unsafe fn from_raw(raw: *const raw::git_diff_file) -> DiffFile<'a> {$/;"	P	implementation:DiffFile
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    unsafe fn from_raw(raw: *const raw::git_diff_hunk) -> DiffHunk<'a> {$/;"	P	implementation:DiffHunk
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    unsafe fn from_raw(raw: *const raw::git_diff_line) -> DiffLine<'a> {$/;"	P	implementation:DiffLine
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    unsafe fn from_raw(raw: *mut raw::git_diff) -> Diff<'repo> {$/;"	P	implementation:Diff
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    unsafe fn from_raw(raw: *mut raw::git_diff_delta) -> DiffDelta<'a> {$/;"	P	implementation:DiffDelta
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    unsafe fn from_raw(raw: *mut raw::git_diff_stats) -> DiffStats {$/;"	P	implementation:DiffStats
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    unsafe fn from_raw(raw: raw::git_diff_binary_t) -> DiffBinaryKind {$/;"	P	implementation:DiffBinaryKind
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/error.rs	/^    unsafe fn from_raw(code: c_int, ptr: *const raw::git_error) -> Error {$/;"	P	implementation:Error
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    unsafe fn from_raw(raw: *mut raw::git_index) -> Index {$/;"	P	implementation:Index
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    unsafe fn from_raw(raw: *mut raw::git_index_conflict_iterator) -> IndexConflicts<'index> {$/;"	P	implementation:IndexConflicts
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    unsafe fn from_raw(raw: raw::git_index_entry) -> IndexEntry {$/;"	P	implementation:IndexEntry
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/indexer.rs	/^    unsafe fn from_raw(raw: *const raw::git_indexer_progress) -> Progress<'a> {$/;"	P	implementation:Progress
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    pub fn from_raw(raw: raw::git_config_level_t) -> ConfigLevel {$/;"	P	implementation:ConfigLevel
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    pub fn from_raw(raw: raw::git_object_t) -> Option<ObjectType> {$/;"	P	implementation:ObjectType
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    pub fn from_raw(raw: raw::git_reference_t) -> Option<ReferenceType> {$/;"	P	implementation:ReferenceType
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/mempack.rs	/^    unsafe fn from_raw(raw: *mut raw::git_odb_backend) -> Mempack<'odb> {$/;"	P	implementation:Mempack
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    unsafe fn from_raw(raw: *mut raw::git_annotated_commit) -> AnnotatedCommit<'repo> {$/;"	P	implementation:AnnotatedCommit
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^    unsafe fn from_raw(raw: *mut raw::git_note) -> Note<'repo> {$/;"	P	implementation:Note
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^    unsafe fn from_raw(raw: *mut raw::git_note_iterator) -> Notes<'repo> {$/;"	P	implementation:Notes
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    unsafe fn from_raw(raw: *mut raw::git_object) -> Object<'repo> {$/;"	P	implementation:Object
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    unsafe fn from_raw(raw: *mut raw::git_odb) -> Odb<'repo> {$/;"	P	implementation:Odb
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    unsafe fn from_raw(raw: *mut raw::git_odb_object) -> OdbObject<'a> {$/;"	P	implementation:OdbObject
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    unsafe fn from_raw(raw: *mut raw::git_odb_stream) -> OdbReader<'repo> {$/;"	P	implementation:OdbReader
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    unsafe fn from_raw(raw: *mut raw::git_odb_stream) -> OdbWriter<'repo> {$/;"	P	implementation:OdbWriter
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^    unsafe fn from_raw(oid: *const raw::git_oid) -> Oid {$/;"	P	implementation:Oid
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid_array.rs	/^    unsafe fn from_raw(raw: raw::git_oidarray) -> OidArray {$/;"	P	implementation:OidArray
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    unsafe fn from_raw(ptr: *mut raw::git_packbuilder) -> PackBuilder<'repo> {$/;"	P	implementation:PackBuilder
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    unsafe fn from_raw(raw: raw::git_packbuilder_stage_t) -> PackBuilderStage {$/;"	P	implementation:PackBuilderStage
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/patch.rs	/^    unsafe fn from_raw(raw: Self::Raw) -> Self {$/;"	P	implementation:Patch
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    unsafe fn from_raw(raw: *mut raw::git_pathspec) -> Pathspec {$/;"	P	implementation:Pathspec
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    unsafe fn from_raw(raw: *mut raw::git_pathspec_match_list) -> PathspecMatchList<'ps> {$/;"	P	implementation:PathspecMatchList
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/proxy_options.rs	/^    unsafe fn from_raw(_raw: raw::git_proxy_options) -> ProxyOptions<'a> {$/;"	P	implementation:ProxyOptions
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    pub fn from_raw(raw: raw::git_rebase_operation_t) -> Option<RebaseOperationType> {$/;"	P	implementation:RebaseOperationType
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    unsafe fn from_raw(raw: *const raw::git_rebase_operation) -> RebaseOperation<'rebase> {$/;"	P	implementation:RebaseOperation
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    unsafe fn from_raw(raw: *mut raw::git_rebase) -> Rebase<'repo> {$/;"	P	implementation:Rebase
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    unsafe fn from_raw(raw: *mut raw::git_reference) -> Reference<'repo> {$/;"	P	implementation:Reference
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    unsafe fn from_raw(raw: *mut raw::git_reference_iterator) -> References<'repo> {$/;"	P	implementation:References
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    unsafe fn from_raw(raw: *const raw::git_reflog_entry) -> ReflogEntry<'reflog> {$/;"	P	implementation:ReflogEntry
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    unsafe fn from_raw(raw: *mut raw::git_reflog) -> Reflog {$/;"	P	implementation:Reflog
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/refspec.rs	/^    unsafe fn from_raw(raw: *const raw::git_refspec) -> Refspec<'remote> {$/;"	P	implementation:Refspec
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    unsafe fn from_raw(_raw: raw::git_fetch_options) -> FetchOptions<'cb> {$/;"	P	implementation:FetchOptions
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    unsafe fn from_raw(_raw: raw::git_push_options) -> PushOptions<'cb> {$/;"	P	implementation:PushOptions
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    unsafe fn from_raw(raw: *mut raw::git_remote) -> Remote<'repo> {$/;"	P	implementation:Remote
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^    unsafe fn from_raw(_raw: raw::git_remote_callbacks) -> RemoteCallbacks<'a> {$/;"	P	implementation:RemoteCallbacks
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    unsafe fn from_raw(ptr: *mut raw::git_repository) -> Repository {$/;"	P	implementation:Repository
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revwalk.rs	/^    unsafe fn from_raw(raw: *mut raw::git_revwalk) -> Revwalk<'repo> {$/;"	P	implementation:Revwalk
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/signature.rs	/^    unsafe fn from_raw(raw: *mut raw::git_signature) -> Signature<'a> {$/;"	P	implementation:Signature
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    unsafe fn from_raw(raw: *const raw::git_status_entry) -> StatusEntry<'statuses> {$/;"	P	implementation:StatusEntry
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    unsafe fn from_raw(raw: *mut raw::git_status_list) -> Statuses<'repo> {$/;"	P	implementation:Statuses
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^    unsafe fn from_raw(raw: raw::git_strarray) -> StringArray {$/;"	P	implementation:StringArray
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    unsafe fn from_raw(raw: *mut raw::git_submodule) -> Submodule<'repo> {$/;"	P	implementation:Submodule
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^    unsafe fn from_raw(raw: *mut raw::git_tag) -> Tag<'repo> {$/;"	P	implementation:Tag
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^    unsafe fn from_raw(raw: raw::git_index_time) -> IndexTime {$/;"	P	implementation:IndexTime
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^    unsafe fn from_raw(raw: raw::git_time) -> Time {$/;"	P	implementation:Time
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    unsafe fn from_raw(raw: *mut raw::git_tree) -> Tree<'repo> {$/;"	P	implementation:Tree
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    unsafe fn from_raw(raw: *mut raw::git_tree_entry) -> TreeEntry<'a> {$/;"	P	implementation:TreeEntry
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/treebuilder.rs	/^    unsafe fn from_raw(raw: *mut raw::git_treebuilder) -> TreeBuilder<'repo> {$/;"	P	implementation:TreeBuilder
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^    unsafe fn from_raw(raw: Self::Raw) -> Self;$/;"	P	interface:Binding
from_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    unsafe fn from_raw(ptr: *mut raw::git_worktree) -> Worktree {$/;"	P	implementation:Worktree
from_raw_const	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    unsafe fn from_raw_const(raw: *const raw::git_blame_hunk) -> BlameHunk<'blame> {$/;"	P	implementation:BlameHunk
from_raw_const	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/signature.rs	/^pub unsafe fn from_raw_const<'b, T>(_lt: &'b T, raw: *const raw::git_signature) -> Signature<'b>/;"	f
from_raw_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^    unsafe fn from_raw_opt<T>(raw: T) -> Option<Self>$/;"	P	interface:Binding
from_root	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    pub fn from_root(&self) -> FromRoot<'a, R> {$/;"	f
from_std	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    pub(crate) fn from_std<E>(error: E, backtrace: Option<Backtrace>) -> Self$/;"	P	implementation:Error
from_std	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn from_std(duration: StdDuration) -> Result<Duration, OutOfRangeError> {$/;"	P	implementation:Duration
from_std	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn from_std(duration: StdDuration) -> Result<Duration, OutOfRangeError> {$/;"	P	implementation:Duration
from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from_str(s: &str) -> ParseResult<DateTime<Local>> {$/;"	P	implementation:DateTime
from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from_str(s: &str) -> ParseResult<DateTime<Utc>> {$/;"	P	implementation:DateTime
from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    fn from_str(s: &str) -> Result<Self, Self::Err> {$/;"	P	implementation:Month
from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    fn from_str(s: &str) -> Result<Self, Self::Err> {$/;"	P	implementation:Weekday
from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    fn from_str(s: &str) -> ParseResult<DateTime<FixedOffset>> {$/;"	P	implementation:DateTime
from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn from_str(s: &str) -> ParseResult<NaiveDate> {$/;"	P	implementation:NaiveDate
from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn from_str(s: &str) -> ParseResult<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn from_str(s: &str) -> ParseResult<NaiveTime> {$/;"	P	implementation:NaiveTime
from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    fn from_str(src: &str) -> Result<Self, Self::Err> {$/;"	P	implementation:Color
from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    mod from_str {$/;"	n	module:tests
from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/error.rs	/^    pub fn from_str(s: &str) -> Error {$/;"	P	implementation:Error
from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    pub fn from_str(s: &str) -> Option<ObjectType> {$/;"	P	implementation:ObjectType
from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^    fn from_str(s: &str) -> Result<Oid, Error> {$/;"	P	implementation:Oid
from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^    pub fn from_str(s: &str) -> Result<Oid, Error> {$/;"	P	implementation:Oid
from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn from_str(from: &str) -> Result<Self, Self::Err> {$/;"	P	implementation:Directive
from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    fn from_str(s: &str) -> Result<Self, Self::Err> {$/;"	P	implementation:Match
from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    fn from_str(s: &str) -> Result<Self, Self::Err> {$/;"	P	implementation:MatchPattern
from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    fn from_str(s: &str) -> Result<Self, Self::Err> {$/;"	P	implementation:ValueMatch
from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    fn from_str(spec: &str) -> Result<Self, Self::Err> {$/;"	P	implementation:EnvFilter
from_string	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    mod from_string {$/;"	n	module:tests
from_subcommand	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.21/src/lib.rs	/^    fn from_subcommand<'a, 'b>(_sub: (&'b str, Option<&'b clap::ArgMatches<'a>>)) -> Option<Self/;"	P	interface:StructOptInternal
from_subcommand	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.21/src/lib.rs	/^    fn from_subcommand<'a, 'b>(sub: (&'b str, Option<&'b clap::ArgMatches<'a>>)) -> Option<Self>/;"	P	implementation:Box
from_timestamp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn from_timestamp(secs: i64, nsecs: u32) -> NaiveDateTime {$/;"	P	implementation:NaiveDateTime
from_timestamp_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn from_timestamp_opt(secs: i64, nsecs: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
from_u32	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn from_u32(n: u32) -> Option<Month> {$/;"	P	implementation:Month
from_u64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn from_u64(n: u64) -> Option<Month> {$/;"	P	implementation:Month
from_u64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn from_u64(n: u64) -> Option<Weekday> {$/;"	P	implementation:Weekday
from_u8	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^    fn from_u8(u: u8) -> Option<Vec<Styles>> {$/;"	P	implementation:Styles
from_utc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn from_utc(date: NaiveDate, offset: Tz::Offset) -> Date<Tz> {$/;"	P	implementation:Date
from_utc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn from_utc(datetime: NaiveDateTime, offset: Tz::Offset) -> DateTime<Tz> {$/;"	P	implementation:DateTime
from_utc_date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn from_utc_date(&self, utc: &NaiveDate) -> Date<Local> {$/;"	P	implementation:Local
from_utc_date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn from_utc_date(&self, utc: &NaiveDate) -> Date<Self> {$/;"	P	interface:TimeZone
from_utc_datetime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn from_utc_datetime(&self, utc: &NaiveDateTime) -> DateTime<Local> {$/;"	P	implementation:Local
from_utc_datetime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn from_utc_datetime(&self, utc: &NaiveDateTime) -> DateTime<Self> {$/;"	P	interface:TimeZone
from_weekday_of_month	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_weekday_of_month(year: i32, month: u32, weekday: Weekday, n: u8) -> NaiveDate {$/;"	P	implementation:NaiveDate
from_weekday_of_month_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_weekday_of_month_opt($/;"	P	implementation:NaiveDate
from_year	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn from_year(year: i32) -> YearFlags {$/;"	P	implementation:YearFlags
from_year_mod_400	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn from_year_mod_400(year: i32) -> YearFlags {$/;"	P	implementation:YearFlags
from_ymd	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_ymd(year: i32, month: u32, day: u32) -> NaiveDate {$/;"	P	implementation:NaiveDate
from_ymd_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_ymd_opt(year: i32, month: u32, day: u32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
from_yo	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_yo(year: i32, ordinal: u32) -> NaiveDate {$/;"	P	implementation:NaiveDate
from_yo_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_yo_opt(year: i32, ordinal: u32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
fromstr	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    mod fromstr {$/;"	n	module:tests
fused	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    fused: Option<bool>,$/;"	m	struct:MergeBy
generate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs	/^    fn generate(&mut self) -> Item {$/;"	P	implementation:F
generate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs	/^    fn generate(&mut self) -> Item {$/;"	P	implementation:IntersperseElementSimple
generate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs	/^    fn generate(&mut self) -> Item;$/;"	P	interface:IntersperseElement
get	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/branch.rs	/^    pub fn get(&self) -> &Reference<'repo> {$/;"	P	implementation:Branch
get	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub fn get(&self, n: usize) -> Option<IndexEntry> {$/;"	P	implementation:Index
get	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    pub fn get(&self, i: usize) -> Option<ReflogEntry<'_>> {$/;"	P	implementation:Reflog
get	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub fn get(&self, index: usize) -> Option<StatusEntry<'_>> {$/;"	P	implementation:Statuses
get	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^    pub fn get(&self, i: usize) -> Option<&str> {$/;"	P	implementation:StringArray
get	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    pub fn get(&self, n: usize) -> Option<TreeEntry<'_>> {$/;"	P	implementation:Tree
get	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/treebuilder.rs	/^    pub fn get<P>(&self, filename: P) -> Result<Option<TreeEntry<'_>>, Error>$/;"	P	implementation:TreeBuilder
get	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^    pub fn get<T: 'static>(&self) -> Option<&T> {$/;"	P	implementation:Extensions
get	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^    pub(crate) fn get<T: 'static>(&self) -> Option<&T> {$/;"	P	implementation:ExtensionsInner
get	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn get(&self, id: &Id) -> Option<Ref<'_, DataInner>> {$/;"	P	implementation:Registry
get_attr	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn get_attr($/;"	P	implementation:Repository
get_attr_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn get_attr_bytes($/;"	P	implementation:Repository
get_bool	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn get_bool(&self, name: &str) -> Result<bool, Error> {$/;"	P	implementation:Config
get_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn get_bytes(&self, name: &str) -> Result<&[u8], Error> {$/;"	P	implementation:Config
get_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^    pub fn get_bytes(&self, i: usize) -> Option<&[u8]> {$/;"	P	implementation:StringArray
get_delta	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn get_delta(&self, i: usize) -> Option<DiffDelta<'_>> {$/;"	P	implementation:Diff
get_entry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn get_entry(&self, name: &str) -> Result<ConfigEntry<'_>, Error> {$/;"	P	implementation:Config
get_i32	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn get_i32(&self, name: &str) -> Result<i32, Error> {$/;"	P	implementation:Config
get_i64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn get_i64(&self, name: &str) -> Result<i64, Error> {$/;"	P	implementation:Config
get_id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    pub fn get_id(&self, id: Oid) -> Option<TreeEntry<'_>> {$/;"	P	implementation:Tree
get_index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    pub fn get_index(&self, index: usize) -> Option<BlameHunk<'_>> {$/;"	P	implementation:Blame
get_line	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    pub fn get_line(&self, lineno: usize) -> Option<BlameHunk<'_>> {$/;"	P	implementation:Blame
get_mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/branch.rs	/^    pub fn get_mut(&mut self) -> &mut Reference<'repo> {$/;"	P	implementation:Branch
get_mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^    pub fn get_mut<T: 'static>(&mut self) -> Option<&mut T> {$/;"	P	implementation:ExtensionsMut
get_mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^    pub(crate) fn get_mut<T: 'static>(&mut self) -> Option<&mut T> {$/;"	P	implementation:ExtensionsInner
get_mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/sync.rs	/^        pub(crate) fn get_mut(&mut self) -> LockResult<&mut T> {$/;"	P	implementation:parking_lot_impl::RwLock
get_name	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    pub fn get_name(&self, filename: &str) -> Option<TreeEntry<'_>> {$/;"	P	implementation:Tree
get_next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lazy_buffer.rs	/^    pub fn get_next(&mut self) -> bool {$/;"	f
get_note	/home/asayers/projects/orpa/src/main.rs	/^fn get_note(repo: &Repository, oid: Oid) -> anyhow::Result<Option<String>> {$/;"	f
get_path	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn get_path(&self, name: &str) -> Result<PathBuf, Error> {$/;"	P	implementation:Config
get_path	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub fn get_path(&self, path: &Path, stage: i32) -> Option<IndexEntry> {$/;"	P	implementation:Index
get_path	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    pub fn get_path(&self, path: &Path) -> Result<TreeEntry<'static>, Error> {$/;"	P	implementation:Tree
get_precise_ns	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        pub fn get_precise_ns() -> u64 {$/;"	f	module:inner::mac
get_precise_ns	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        pub fn get_precise_ns() -> u64 {$/;"	f	module:inner::unix
get_precise_ns	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn get_precise_ns() -> u64 {$/;"	f	module:inner
get_refspec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn get_refspec(&self, i: usize) -> Option<Refspec<'repo>> {$/;"	P	implementation:Remote
get_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn get_str(&self, name: &str) -> Result<&str, Error> {$/;"	P	implementation:Config
get_string	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn get_string(&self, name: &str) -> Result<String, Error> {$/;"	P	implementation:Config
get_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn get_time() -> Timespec {$/;"	f
get_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        pub fn get_time() -> (i64, i32) {$/;"	f	module:inner::mac
get_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        pub fn get_time() -> (i64, i32) {$/;"	f	module:inner::unix
get_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn get_time() -> (i64, i32) {$/;"	f	module:inner
gid	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub gid: u32,$/;"	m	struct:IndexEntry
gitignore	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    fn gitignore() {$/;"	f	module:tests
graph_ahead_behind	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn graph_ahead_behind(&self, local: Oid, upstream: Oid) -> Result<(usize, usize), Error>/;"	P	implementation:Repository
graph_descendant_of	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn graph_descendant_of(&self, commit: Oid, ancestor: Oid) -> Result<bool, Error> {$/;"	P	implementation:Repository
graph_repo_init	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    fn graph_repo_init() -> (TempDir, Repository) {$/;"	f	module:tests
green	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn green(self) -> ColoredString$/;"	P	interface:Colorize
group_by	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn group_by<K, F>(self, key: F) -> GroupBy<K, Self, F>$/;"	P	interface:Itertools
group_key	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    fn group_key(&mut self, client: usize) -> K {$/;"	f
group_map	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod group_map;$/;"	n
groupbylazy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod groupbylazy;$/;"	n
grouping_map	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod grouping_map;$/;"	n
handle	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^    pub fn handle(&self) -> Handle<L, S> {$/;"	f
handled_first	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs	/^    handled_first: bool,$/;"	m	struct:WithPosition
hardlinks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    hardlinks: bool,$/;"	m	struct:RepoBuilder
hardlinks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn hardlinks(&mut self, links: bool) -> &mut RepoBuilder<'cb> {$/;"	P	implementation:RepoBuilder
has_colors	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn has_colors(&self) -> bool {$/;"	P	implementation:ColoredString
has_conflicts	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub fn has_conflicts(&self) -> bool {$/;"	P	implementation:Index
has_dynamics	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    has_dynamics: bool,$/;"	m	struct:EnvFilter
has_field	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    pub fn has_field<Q: ?Sized>(&self, field: &Q) -> bool$/;"	P	implementation:Span
has_fields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    pub(super) fn has_fields(&self) -> bool {$/;"	P	implementation:Directive
has_left	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs	/^    pub fn has_left(&self) -> bool {$/;"	P	implementation:EitherOrBoth
has_manual_override	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^    has_manual_override: AtomicBool,$/;"	m	struct:ShouldColorize
has_matched	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    has_matched: AtomicBool,$/;"	m	struct:SpanMatch
has_name	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    pub(super) fn has_name(&self) -> bool {$/;"	P	implementation:Directive
has_right	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs	/^    pub fn has_right(&self) -> bool {$/;"	P	implementation:EitherOrBoth
has_username	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    pub fn has_username(&self) -> bool {$/;"	P	implementation:Cred
has_value	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn has_value(&self) -> bool {$/;"	P	implementation:ConfigEntry
has_value	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    pub(crate) fn has_value(&self) -> bool {$/;"	P	implementation:Match
has_value_filters	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    pub(crate) fn has_value_filters(&self) -> bool {$/;"	P	implementation:Dynamics
hash	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) {$/;"	P	implementation:Date
hash	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) {$/;"	P	implementation:DateTime
hash	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) {$/;"	P	implementation:NaiveDateTime
hash	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) {$/;"	P	implementation:NaiveTime
hash	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^    fn hash<H: Hasher>(&self, into: &mut H) {$/;"	P	implementation:Oid
hash	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    pub fn hash(&self) -> Option<Oid> {$/;"	P	implementation:PackBuilder
hash	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    fn hash<H: Hasher>(&self, hasher: &mut H) {$/;"	P	implementation:Span
hash	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    fn hash<H: Hasher>(&self, state: &mut H) {$/;"	P	implementation:Inner
hash_file	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^    fn hash_file() {$/;"	f	module:tests
hash_file	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^    pub fn hash_file<P: AsRef<Path>>(kind: ObjectType, path: P) -> Result<Oid, Error> {$/;"	P	implementation:Oid
hash_md5	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cert.rs	/^    pub fn hash_md5(&self) -> Option<&[u8; 16]> {$/;"	P	implementation:CertHostkey
hash_object	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^    fn hash_object() {$/;"	f	module:tests
hash_object	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^    pub fn hash_object(kind: ObjectType, bytes: &[u8]) -> Result<Oid, Error> {$/;"	P	implementation:Oid
hash_sha1	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cert.rs	/^    pub fn hash_sha1(&self) -> Option<&[u8; 20]> {$/;"	P	implementation:CertHostkey
hash_sha256	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cert.rs	/^    pub fn hash_sha256(&self) -> Option<&[u8; 32]> {$/;"	P	implementation:CertHostkey
head	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn head(&self) -> Result<Reference<'_>, Error> {$/;"	P	implementation:Repository
head	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs	/^    head: I::Item,$/;"	m	struct:HeadTail
head_detached	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn head_detached(&self) -> Result<bool, Error> {$/;"	P	implementation:Repository
head_id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    pub fn head_id(&self) -> Option<Oid> {$/;"	P	implementation:Submodule
head_to_index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub fn head_to_index(&self) -> Option<DiffDelta<'statuses>> {$/;"	P	implementation:StatusEntry
header	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn header(&self) -> &'a [u8] {$/;"	P	implementation:DiffHunk
heap	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs	/^    heap: Vec<HeadTail<I>>,$/;"	m	struct:KMergeBy
heapify	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs	/^fn heapify<T, S>(data: &mut [T], mut less_than: S)$/;"	f
hidden	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn hidden(mut self) -> ColoredString {$/;"	P	implementation:ColoredString
hidden	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn hidden(self) -> ColoredString {$/;"	P	implementation:str
hidden	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn hidden(self) -> ColoredString;$/;"	P	interface:Colorize
hide	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revwalk.rs	/^    pub fn hide(&mut self, oid: Oid) -> Result<(), Error> {$/;"	P	implementation:Revwalk
hide_glob	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revwalk.rs	/^    pub fn hide_glob(&mut self, glob: &str) -> Result<(), Error> {$/;"	P	implementation:Revwalk
hide_head	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revwalk.rs	/^    pub fn hide_head(&mut self) -> Result<(), Error> {$/;"	P	implementation:Revwalk
hide_ref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revwalk.rs	/^    pub fn hide_ref(&mut self, reference: &str) -> Result<(), Error> {$/;"	P	implementation:Revwalk
hms	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn hms(&self) -> (u32, u32, u32) {$/;"	P	implementation:NaiveTime
host	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    host: Option<String>,$/;"	m	struct:CredentialHelper
hour	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn hour(&self) -> u32 {$/;"	P	implementation:DateTime
hour	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn hour(&self) -> u32;$/;"	P	interface:Timelike
hour	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn hour(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
hour	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn hour(&self) -> u32 {$/;"	P	implementation:NaiveTime
hour	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/datetime.rs	/^    hour: u8,$/;"	m	struct:DateTime
hour12	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn hour12(&self) -> (bool, u32) {$/;"	P	interface:Timelike
hour_div_12	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub hour_div_12: Option<u32>,$/;"	m	struct:Parsed
hour_mod_12	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub hour_mod_12: Option<u32>,$/;"	m	struct:Parsed
hours	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn hours(hours: i64) -> Duration {$/;"	P	implementation:Duration
hours	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn hours(hours: i64) -> Duration {$/;"	P	implementation:Duration
hunk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub hunk: Option<&'e mut HunkCb<'f>>,$/;"	m	struct:DiffCallbacks
hunk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/patch.rs	/^    pub fn hunk(&self, hunk_idx: usize) -> Result<(DiffHunk<'buffers>, usize), Error> {$/;"	P	implementation:Patch
hunk_callback	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/apply.rs	/^    pub fn hunk_callback<F>(&mut self, cb: F) -> &mut Self$/;"	P	implementation:ApplyOptions
hunk_cb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/apply.rs	/^    hunk_cb: Option<Box<HunkCB<'cb>>>,$/;"	m	struct:ApplyOptions
hunk_cb_c	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/apply.rs	/^extern "C" fn hunk_cb_c(hunk: *const raw::git_diff_hunk, data: *mut c_void) -> c_int {$/;"	f
hunk_cb_c	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^pub extern "C" fn hunk_cb_c($/;"	f
i32	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl From<FileMode> for i32 {$/;"	c
i64_to_large_integer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn i64_to_large_integer(i: i64) -> LARGE_INTEGER {$/;"	f	module:inner
id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^    pub fn id(&self) -> Oid {$/;"	P	implementation:Blob
id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    pub fn id(&self) -> Oid {$/;"	P	implementation:Commit
id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn id(&self) -> Oid {$/;"	P	implementation:DiffFile
id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub id: Oid,$/;"	m	struct:IndexEntry
id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    pub fn id(&self) -> Oid {$/;"	P	implementation:AnnotatedCommit
id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^    pub fn id(&self) -> Oid {$/;"	P	implementation:Note
id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    pub fn id(&self) -> Oid {$/;"	P	implementation:Object
id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    pub fn id(&self) -> Oid {$/;"	P	implementation:OdbObject
id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    pub fn id(&self) -> Oid {$/;"	P	implementation:RebaseOperation
id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^    pub fn id(&self) -> Oid {$/;"	P	implementation:Tag
id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    pub fn id(&self) -> Oid {$/;"	P	implementation:Tree
id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    pub fn id(&self) -> Oid {$/;"	P	implementation:TreeEntry
id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tee.rs	/^    id: bool,$/;"	m	struct:Tee
id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    fn id(&self) -> Id {$/;"	P	implementation:Inner
id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    id: Id,$/;"	m	struct:Inner
id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    pub fn id(&self) -> Option<Id> {$/;"	P	implementation:Span
id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/lib.rs	/^    pub fn id(&self) -> Option<Id> {$/;"	P	implementation:CurrentSpan
id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    fn id(&self) -> Id;$/;"	P	interface:SpanData
id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    pub fn id(&self) -> Id {$/;"	f
id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn id(&self) -> Id {$/;"	P	implementation:Data
id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    id: Id,$/;"	m	struct:CloseGuard
id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/stack.rs	/^    id: Id,$/;"	m	struct:ContextId
id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/thread.rs	/^    id: usize,$/;"	m	struct:Id
id_abbrev	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn id_abbrev(&mut self, abbrev: u16) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
id_new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    pub fn id_new(&self) -> Oid {$/;"	P	implementation:ReflogEntry
id_old	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    pub fn id_old(&self) -> Oid {$/;"	P	implementation:ReflogEntry
id_to_idx	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^fn id_to_idx(id: &Id) -> usize {$/;"	f
idle	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    idle: u64,$/;"	m	struct:Timings
idx_to_id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^fn idx_to_id(idx: usize) -> Id {$/;"	f
if_log_enabled	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/macros.rs	/^macro_rules! if_log_enabled {$/;"	M
ignore_case	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn ignore_case(&mut self, ignore: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
ignore_filemode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn ignore_filemode(&mut self, ignore: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
ignore_ident	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^macro_rules! ignore_ident{$/;"	M
ignore_leading_whitespace	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn ignore_leading_whitespace(&mut self, ignore: bool) -> &mut DiffFindOptions {$/;"	P	implementation:DiffFindOptions
ignore_submodules	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn ignore_submodules(&mut self, ignore: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
ignore_whitespace	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    pub fn ignore_whitespace(&mut self, opt: bool) -> &mut BlameOptions {$/;"	P	implementation:BlameOptions
ignore_whitespace	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn ignore_whitespace(&mut self, ignore: bool) -> &mut DiffFindOptions {$/;"	P	implementation:DiffFindOptions
ignore_whitespace	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn ignore_whitespace(&mut self, ignore: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
ignore_whitespace	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    pub fn ignore_whitespace(&mut self, ignore: bool) -> &mut MergeOptions {$/;"	P	implementation:MergeOptions
ignore_whitespace_change	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn ignore_whitespace_change(&mut self, ignore: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
ignore_whitespace_change	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    pub fn ignore_whitespace_change(&mut self, ignore: bool) -> &mut MergeOptions {$/;"	P	implementation:MergeOptions
ignore_whitespace_eol	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn ignore_whitespace_eol(&mut self, ignore: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
ignore_whitespace_eol	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    pub fn ignore_whitespace_eol(&mut self, ignore: bool) -> &mut MergeOptions {$/;"	P	implementation:MergeOptions
impl_cons_iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/cons_tuples_impl.rs	/^macro_rules! impl_cons_iter($/;"	M
impl_format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs	/^macro_rules! impl_format {$/;"	M
impl_macros	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod impl_macros;$/;"	n
impl_tuple_collect	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^macro_rules! impl_tuple_collect {$/;"	M
impl_tuple_combination	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^macro_rules! impl_tuple_combination {$/;"	M
impl_zip_iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs	/^macro_rules! impl_zip_iter {$/;"	M
impls	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^mod impls {$/;"	n
impls	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    fn impls() {$/;"	f	module:test
impls	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    fn impls() {$/;"	f	module:test
in_between	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn in_between(start: i32, end: i32, div: i32) -> i32 {$/;"	f	function:test_num_days_from_ce_against_alternative_impl
in_current_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/instrument.rs	/^    fn in_current_span(self) -> Instrumented<Self> {$/;"	P	interface:Instrument
in_progress	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs	/^    fn in_progress(&self) -> bool {$/;"	f
in_scope	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    pub fn in_scope<F: FnOnce() -> T, T>(&self, f: F) -> T {$/;"	P	implementation:Span
in_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    in_span: Option<String>,$/;"	m	struct:Directive
include_depth	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn include_depth(&self) -> u32 {$/;"	P	implementation:ConfigEntry
include_ignored	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn include_ignored(&mut self, include: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
include_ignored	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub fn include_ignored(&mut self, include: bool) -> &mut StatusOptions {$/;"	P	implementation:StatusOptions
include_typechange	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn include_typechange(&mut self, include: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
include_typechange_trees	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn include_typechange_trees(&mut self, include: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
include_unmodified	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn include_unmodified(&mut self, include: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
include_unmodified	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub fn include_unmodified(&mut self, include: bool) -> &mut StatusOptions {$/;"	P	implementation:StatusOptions
include_unreadable	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn include_unreadable(&mut self, include: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
include_unreadable	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub fn include_unreadable(&mut self, include: bool) -> &mut StatusOptions {$/;"	P	implementation:StatusOptions
include_unreadable_as_untracked	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn include_unreadable_as_untracked(&mut self, include: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
include_unreadable_as_untracked	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub fn include_unreadable_as_untracked(&mut self, include: bool) -> &mut StatusOptions {$/;"	P	implementation:StatusOptions
include_untracked	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn include_untracked(&mut self, include: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
include_untracked	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub fn include_untracked(&mut self, include: bool) -> &mut StatusOptions {$/;"	P	implementation:StatusOptions
indent_heuristic	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn indent_heuristic(&mut self, heuristic: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    index: &'index Index,$/;"	m	struct:IndexEntries
index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod index;$/;"	n
index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn index(&self) -> Result<Index, Error> {$/;"	P	implementation:Repository
index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    index: Cell<usize>,$/;"	m	struct:GroupBy
index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    index: Cell<usize>,$/;"	m	struct:IntoChunks
index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    index: usize,$/;"	m	struct:Chunk
index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    index: usize,$/;"	m	struct:ChunkIndex
index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    index: usize,$/;"	m	struct:Group
index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lazy_buffer.rs	/^    fn index(&self, _index: J) -> &Self::Output {$/;"	f
index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs	/^    index: usize,$/;"	m	struct:MultiPeek
index_id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    pub fn index_id(&self) -> Option<Oid> {$/;"	P	implementation:Submodule
index_matched_path_cb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^extern "C" fn index_matched_path_cb($/;"	f
index_to_workdir	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub fn index_to_workdir(&self) -> Option<DiffDelta<'statuses>> {$/;"	P	implementation:StatusEntry
indexed_deltas	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/indexer.rs	/^    pub fn indexed_deltas(&self) -> usize {$/;"	P	implementation:Progress
indexed_objects	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/indexer.rs	/^    pub fn indexed_objects(&self) -> usize {$/;"	P	implementation:Progress
indexer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod indexer;$/;"	n
indices	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs	/^    indices: Vec<usize>,$/;"	m	struct:Combinations
indices	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations_with_replacement.rs	/^    indices: Vec<usize>,$/;"	m	struct:CombinationsWithReplacement
inflated_len	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn inflated_len(&self) -> usize {$/;"	P	implementation:DiffBinaryFile
info	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn info() -> &'static mach_timebase_info {$/;"	f	module:inner::mac
info	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/macros.rs	/^macro_rules! info {$/;"	M
info_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/macros.rs	/^macro_rules! info_span {$/;"	M
inherit_fields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn inherit_fields(self, inherit_fields: bool) -> Self {$/;"	P	implementation:SubscriberBuilder
init	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^fn init() {$/;"	f
init	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn init<P: AsRef<Path>>(path: P) -> Result<Repository, Error> {$/;"	P	implementation:Repository
init	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    pub fn init(&mut self, overwrite: bool) -> Result<(), Error> {$/;"	P	implementation:Submodule
init	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn init(self) {$/;"	f
init	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^pub fn init() {$/;"	f
init	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/util.rs	/^    fn init(self) {$/;"	P	interface:SubscriberInitExt
init_bare	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn init_bare<P: AsRef<Path>>(path: P) -> Result<Repository, Error> {$/;"	P	implementation:Repository
init_opts	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn init_opts<P: AsRef<Path>>($/;"	P	implementation:Repository
initial_head	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    initial_head: Option<CString>,$/;"	m	struct:RepositoryInitOptions
initial_head	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn initial_head(&mut self, head: &str) -> &mut RepositoryInitOptions {$/;"	P	implementation:RepositoryInitOptions
inmemory	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    pub fn inmemory(&mut self, inmemory: bool) -> &mut RebaseOptions<'cb> {$/;"	P	implementation:RebaseOptions
inmemory_index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    pub fn inmemory_index(&mut self) -> Result<Index, Error> {$/;"	P	implementation:Rebase
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/fmt.rs	/^    inner: &'a mut D,$/;"	m	struct:Indented
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/lib.rs	/^    inner: Own<ErrorImpl>,$/;"	m	struct:Error
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^                inner: &'a D,$/;"	m	struct:serde::DateTime::serialize::FormatWrapped
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^                inner: &'a D,$/;"	m	struct:serde::NaiveDate::serialize::FormatWrapped
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^                inner: &'a D,$/;"	m	struct:serde::NaiveDateTime::serialize::FormatWrapped
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^mod inner;$/;"	n
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/branch.rs	/^    inner: Reference<'repo>,$/;"	m	struct:Branch
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    inner: &'references mut References<'repo>,$/;"	m	struct:ReferenceNames
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs	/^    inner: I,$/;"	m	struct:ExactlyOneError
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs	/^    inner: RefCell<Option<(I, F)>>,$/;"	m	struct:FormatWith
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs	/^    inner: RefCell<Option<I>>,$/;"	m	struct:Format
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    inner: RefCell<GroupInner<K, I, F>>,$/;"	m	struct:GroupBy
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    inner: RefCell<GroupInner<usize, I, ChunkIndex>>,$/;"	m	struct:IntoChunks
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^        fn inner<T, II, FF>(stop: usize, it: &mut II, f: &mut FF) -> State<T>$/;"	f	method:Itertools::tree_fold1
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^mod inner {$/;"	n
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/instrument.rs	/^    pub fn inner(&self) -> &T {$/;"	P	implementation:Instrumented
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    inner: Option<Inner>,$/;"	m	struct:Span
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^    inner: V,$/;"	m	struct:Delimited
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^    inner: V,$/;"	m	struct:VisitDelimited
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    inner: &'a SpanMatch,$/;"	m	struct:MatchVisitor
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    inner: Layer<Registry, N, E, W>,$/;"	m	struct:SubscriberBuilder
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    inner: layer::Layered<F, Formatter<N, E, W>>,$/;"	m	struct:Subscriber
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^    inner: Box<dyn MakeWriter<Writer = Box<dyn Write>> + Send + Sync>,$/;"	m	struct:BoxMakeWriter
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    inner: I,$/;"	m	struct:Layered
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^    inner: RwLockReadGuard<'a, ExtensionsInner>,$/;"	m	struct:Extensions
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^    inner: RwLockWriteGuard<'a, ExtensionsInner>,$/;"	m	struct:ExtensionsMut
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    inner: std::iter::Rev<smallvec::IntoIter<SpanRefVecArray<'a, R>>>,$/;"	m	struct:FromRoot
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    inner: std::iter::Rev<std::vec::IntoIter<SpanRef<'a, R>>>,$/;"	m	struct:FromRoot
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^        inner: Arc<Mutex<CloseState>>,$/;"	m	struct:tests::CloseLayer
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    inner: Ref<'a, DataInner>,$/;"	m	struct:Data
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^    inner: Arc<RwLock<L>>,$/;"	m	struct:Layer
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^    inner: Weak<RwLock<L>>,$/;"	m	struct:Handle
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/sync.rs	/^        inner: parking_lot::RwLock<T>,$/;"	m	struct:parking_lot_impl::RwLock
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/thread.rs	/^    inner: RwLock<Inner<T>>,$/;"	m	struct:Local
inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/util.rs	/^    inner: Box<dyn Error + Send + Sync + 'static>,$/;"	m	struct:TryInitError
inner0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^        fn inner0<T, II, FF>(it: &mut II, f: &mut FF) -> State<T>$/;"	f	method:Itertools::tree_fold1
inner_mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/instrument.rs	/^    pub fn inner_mut(&mut self) -> &mut T {$/;"	P	implementation:Instrumented
inner_pin_mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/instrument.rs	/^    pub fn inner_pin_mut(self: Pin<&mut Self>) -> Pin<&mut T> {$/;"	P	implementation:Instrumented
inner_pin_ref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/instrument.rs	/^    pub fn inner_pin_ref(self: Pin<&Self>) -> Pin<&T> {$/;"	P	implementation:Instrumented
ino	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub ino: u32,$/;"	m	struct:IndexEntry
input	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    input: String,$/;"	m	struct:ColoredString
insert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/treebuilder.rs	/^    pub fn insert<P: IntoCString>($/;"	P	implementation:TreeBuilder
insert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^    pub fn insert<T: Send + Sync + 'static>(&mut self, val: T) {$/;"	P	implementation:ExtensionsMut
insert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^    pub(crate) fn insert<T: Send + Sync + 'static>(&mut self, val: T) -> Option<T> {$/;"	P	implementation:ExtensionsInner
insert_commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    pub fn insert_commit(&mut self, id: Oid) -> Result<(), Error> {$/;"	P	implementation:PackBuilder
insert_commit_write_buf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    fn insert_commit_write_buf() {$/;"	f	module:tests
insert_object	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    pub fn insert_object(&mut self, id: Oid, name: Option<&str>) -> Result<(), Error> {$/;"	P	implementation:PackBuilder
insert_recursive	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    pub fn insert_recursive(&mut self, id: Oid, name: Option<&str>) -> Result<(), Error> {$/;"	P	implementation:PackBuilder
insert_tree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    pub fn insert_tree(&mut self, id: Oid) -> Result<(), Error> {$/;"	P	implementation:PackBuilder
insert_tree_write_buf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    fn insert_tree_write_buf() {$/;"	f	module:tests
insert_walk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    pub fn insert_walk(&mut self, walk: &mut Revwalk<'_>) -> Result<(), Error> {$/;"	P	implementation:PackBuilder
insert_write_buf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    fn insert_write_buf() {$/;"	f	module:tests
insertions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn insertions(&self) -> usize {$/;"	P	implementation:DiffStats
instrument	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/instrument.rs	/^    fn instrument(self, span: Span) -> Instrumented<Self> {$/;"	P	interface:Instrument
instrument	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/lib.rs	/^pub mod instrument;$/;"	n
interest	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/lib.rs	/^        interest: AtomicUsize,$/;"	m	struct:__macro_support::MacroCallsite
interest	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/lib.rs	/^        pub fn interest(&'static self) -> Interest {$/;"	P	implementation:__macro_support::MacroCallsite
interhunk_lines	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn interhunk_lines(&mut self, lines: u32) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
interleave	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub fn interleave<I, J>(i: I, j: J) -> Interleave<<I as IntoIterator>::IntoIter, <J as IntoItera/;"	f
interleave	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn interleave<J>(self, other: J) -> Interleave<Self, J::IntoIter>$/;"	P	interface:Itertools
interleave_shortest	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub fn interleave_shortest<I, J>(a: I, b: J) -> InterleaveShortest<I, J>$/;"	f
interleave_shortest	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn interleave_shortest<J>(self, other: J) -> InterleaveShortest<Self, J::IntoIter>$/;"	P	interface:Itertools
internal_fix	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^macro_rules! internal_fix {$/;"	M
internals	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    mod internals;$/;"	n	module:naive
intersperse	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs	/^pub fn intersperse<I>(iter: I, elt: I::Item) -> Intersperse<I>$/;"	f
intersperse	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn intersperse(self, element: Self::Item) -> Intersperse<Self>$/;"	P	interface:Itertools
intersperse	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod intersperse;$/;"	n
intersperse_with	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs	/^pub fn intersperse_with<I, ElemF>(iter: I, elt: ElemF) -> IntersperseWith<I, ElemF>$/;"	f
intersperse_with	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn intersperse_with<F>(self, element: F) -> IntersperseWith<Self, F>$/;"	P	interface:Itertools
into	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    fn into(self) -> i32 {$/;"	P	implementation:TreeWalkResult
into	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    fn into(self) -> raw::git_treewalk_mode {$/;"	P	implementation:TreeWalkMode
into	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs	/^    fn into(self) -> Option<Either<A, B>> {$/;"	P	implementation:EitherOrBoth
into	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    fn into(self) -> Option<&'a Id> {$/;"	P	implementation:Span
into	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    fn into(self) -> Option<Id> {$/;"	P	implementation:Span
into	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    fn into(self) -> tracing_core::Dispatch {$/;"	f
into_blob	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    pub fn into_blob(self) -> Result<Blob<'repo>, Object<'repo>> {$/;"	P	implementation:Object
into_buffer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^    pub fn into_buffer(self) -> TupleBuffer<T> {$/;"	f
into_c_string	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^    fn into_c_string(self) -> Result<CString, Error> {$/;"	P	implementation:CString
into_c_string	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^    fn into_c_string(self) -> Result<CString, Error> {$/;"	P	implementation:OsStr
into_c_string	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^    fn into_c_string(self) -> Result<CString, Error> {$/;"	P	implementation:OsString
into_c_string	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^    fn into_c_string(self) -> Result<CString, Error> {$/;"	P	implementation:Path
into_c_string	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^    fn into_c_string(self) -> Result<CString, Error> {$/;"	P	implementation:PathBuf
into_c_string	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^    fn into_c_string(self) -> Result<CString, Error> {$/;"	P	implementation:String
into_c_string	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^    fn into_c_string(self) -> Result<CString, Error> {$/;"	P	implementation:T
into_c_string	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^    fn into_c_string(self) -> Result<CString, Error> {$/;"	P	implementation:Vec
into_c_string	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^    fn into_c_string(self) -> Result<CString, Error> {$/;"	P	implementation:str
into_c_string	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^    fn into_c_string(self) -> Result<CString, Error> {$/;"	P	implementation:u8
into_c_string	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^    fn into_c_string(self) -> Result<CString, Error>;$/;"	P	interface:IntoCString
into_commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    pub fn into_commit(self) -> Result<Commit<'repo>, Object<'repo>> {$/;"	P	implementation:Object
into_group_map	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/group_map.rs	/^pub fn into_group_map<I, K, V>(iter: I) -> HashMap<K, Vec<V>>$/;"	f
into_group_map	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn into_group_map<K, V>(self) -> HashMap<K, Vec<V>>$/;"	P	interface:Itertools
into_group_map_by	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/group_map.rs	/^pub fn into_group_map_by<I, K, V>(iter: I, f: impl Fn(&V) -> K) -> HashMap<K, Vec<V>>$/;"	f
into_group_map_by	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn into_group_map_by<K, V, F>(self, f: F) -> HashMap<K, Vec<V>>$/;"	P	interface:Itertools
into_grouping_map	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn into_grouping_map<K, V>(self) -> GroupingMap<Self>$/;"	P	interface:Itertools
into_grouping_map_by	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn into_grouping_map_by<K, V, F>(self, key_mapper: F) -> GroupingMapBy<Self, F>$/;"	P	interface:Itertools
into_inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    pub fn into_inner(self) -> T {$/;"	P	implementation:FoldWhile
into_inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs	/^    pub fn into_inner(self) -> T {$/;"	P	implementation:Position
into_inner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/instrument.rs	/^    pub fn into_inner(self) -> T {$/;"	P	implementation:Instrumented
into_iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	P	implementation:StringArray
into_iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	P	implementation:Tree
into_iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs	/^    fn into_iter(self) -> RcIter<I> {$/;"	f
into_object	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^    pub fn into_object(self) -> Object<'repo> {$/;"	P	implementation:Blob
into_object	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    pub fn into_object(self) -> Object<'repo> {$/;"	P	implementation:Commit
into_object	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^    pub fn into_object(self) -> Object<'repo> {$/;"	P	implementation:Tag
into_object	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    pub fn into_object(self) -> Object<'repo> {$/;"	P	implementation:Tree
into_opt_c_string	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^pub fn into_opt_c_string<S>(opt_s: Option<S>) -> Result<Option<CString>, Error>$/;"	f
into_option	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs	/^    pub fn into_option(self) -> Option<(T,T)> {$/;"	P	implementation:MinMaxResult
into_parts	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    pub fn into_parts(self) -> (Option<I::Item>, I) {$/;"	f
into_reference	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/branch.rs	/^    pub fn into_reference(self) -> Reference<'repo> {$/;"	P	implementation:Branch
into_tag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    pub fn into_tag(self) -> Result<Tag<'repo>, Object<'repo>> {$/;"	P	implementation:Object
into_tree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    pub fn into_tree(self) -> Result<Tree<'repo>, Object<'repo>> {$/;"	P	implementation:Object
iproduct	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^macro_rules! iproduct {$/;"	M
is	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    pub fn is<E>(&self) -> bool$/;"	P	implementation:Error
is_bare	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn is_bare(&self) -> bool {$/;"	P	implementation:Repository
is_binary	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^    pub fn is_binary(&self) -> bool {$/;"	P	implementation:Blob
is_binary	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn is_binary(&self) -> bool {$/;"	P	implementation:DiffFile
is_bit_set	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^macro_rules! is_bit_set {$/;"	M
is_both	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs	/^    pub fn is_both(&self) -> bool {$/;"	P	implementation:EitherOrBoth
is_boundary	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    pub fn is_boundary(&self) -> bool {$/;"	P	implementation:BlameHunk
is_branch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    pub fn is_branch(&self) -> bool {$/;"	P	implementation:Reference
is_closed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^        fn is_closed(&self, span: &str) -> bool {$/;"	P	implementation:tests::CloseState
is_closing	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    is_closing: bool,$/;"	m	struct:CloseGuard
is_closing	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    pub(crate) fn is_closing(&mut self) {$/;"	P	implementation:CloseGuard
is_disabled	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    pub fn is_disabled(&self) -> bool {$/;"	P	implementation:Span
is_done	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    pub fn is_done(&self) -> bool {$/;"	P	implementation:FoldWhile
is_dropped	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^    pub fn is_dropped(&self) -> bool {$/;"	P	implementation:Error
is_dynamic	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    pub(super) fn is_dynamic(&self) -> bool {$/;"	P	implementation:Directive
is_empty	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:Blame
is_empty	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:Index
is_empty	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:Reflog
is_empty	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn is_empty(&self) -> Result<bool, Error> {$/;"	P	implementation:Repository
is_empty	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:Statuses
is_empty	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:StringArray
is_empty	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:Tree
is_empty	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/treebuilder.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:TreeBuilder
is_empty	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    pub(crate) fn is_empty(&self) -> bool {$/;"	P	implementation:DirectiveSet
is_empty	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    is_empty: bool,$/;"	m	struct:DefaultVisitor
is_empty	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^    is_empty: bool,$/;"	m	struct:PrettyVisitor
is_enabled	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/lib.rs	/^        pub fn is_enabled(&self, interest: Interest) -> bool {$/;"	P	implementation:__macro_support::MacroCallsite
is_force	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/refspec.rs	/^    pub fn is_force(&self) -> bool {$/;"	P	implementation:Refspec
is_head	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/branch.rs	/^    pub fn is_head(&self) -> bool {$/;"	P	implementation:Branch
is_leap_year	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/display.rs	/^fn is_leap_year(year: i32) -> bool {$/;"	f
is_left	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs	/^    pub fn is_left(&self) -> bool {$/;"	P	implementation:EitherOrBoth
is_local	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn is_local(&self) -> bool {$/;"	P	implementation:RemoteHead
is_locked	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    pub fn is_locked(&self) -> Result<WorktreeLockStatus, Error> {$/;"	P	implementation:Worktree
is_lookup_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    fn is_lookup_span() {$/;"	f	module:test
is_lookup_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    fn is_lookup_span() {$/;"	f	module:test
is_loose	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    pub fn is_loose(&self) -> bool {$/;"	P	implementation:ObjectType
is_matched	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    pub(crate) fn is_matched(&self) -> bool {$/;"	P	implementation:SpanMatch
is_matched_slow	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    fn is_matched_slow(&self) -> bool {$/;"	P	implementation:SpanMatch
is_none	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    pub fn is_none(&self) -> bool {$/;"	P	implementation:Span
is_not_binary	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn is_not_binary(&self) -> bool {$/;"	P	implementation:DiffFile
is_note	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    pub fn is_note(&self) -> bool {$/;"	P	implementation:Reference
is_open	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^        fn is_open(&self, span: &str) -> bool {$/;"	P	implementation:tests::CloseState
is_path_ignored	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn is_path_ignored<P: AsRef<Path>>(&self, path: P) -> Result<bool, Error> {$/;"	P	implementation:Repository
is_plain	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    pub fn is_plain(&self) -> bool {$/;"	P	implementation:ColoredString
is_poisoned	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^    pub fn is_poisoned(&self) -> bool {$/;"	P	implementation:Error
is_poisoned	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/thread.rs	/^    pub(crate) fn is_poisoned(self) -> bool {$/;"	P	implementation:Id
is_prunable	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    pub fn is_prunable(&self, opts: Option<&mut WorktreePruneOptions>) -> Result<bool, Error> {$/;"	P	implementation:Worktree
is_ptr_null	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^    fn is_ptr_null(&self) -> bool {$/;"	P	implementation:T
is_ptr_null	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^    fn is_ptr_null(&self) -> bool;$/;"	P	interface:IsNull
is_remote	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    pub fn is_remote(&self) -> bool {$/;"	P	implementation:Reference
is_right	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs	/^    pub fn is_right(&self) -> bool {$/;"	P	implementation:EitherOrBoth
is_shallow	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn is_shallow(&self) -> bool {$/;"	P	implementation:Repository
is_sorted_icase	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn is_sorted_icase(&self) -> bool {$/;"	P	implementation:Diff
is_static	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn is_static(&self) -> bool {$/;"	P	implementation:Directive
is_subcommand	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.21/src/lib.rs	/^    fn is_subcommand() -> bool {$/;"	P	implementation:Box
is_subcommand	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.21/src/lib.rs	/^    fn is_subcommand() -> bool {$/;"	P	interface:StructOptInternal
is_tag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    pub fn is_tag(&self) -> bool {$/;"	P	implementation:Reference
is_valid_id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn is_valid_id(&self) -> bool {$/;"	P	implementation:DiffFile
is_valid_name	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    pub fn is_valid_name(refname: &str) -> bool {$/;"	P	implementation:Reference
is_valid_name	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn is_valid_name(remote_name: &str) -> bool {$/;"	P	implementation:Remote
is_worktree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn is_worktree(&self) -> bool {$/;"	P	implementation:Repository
is_zero	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn is_zero(&self) -> bool {$/;"	P	implementation:Duration
is_zero	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^    pub fn is_zero(&self) -> bool {$/;"	P	implementation:Oid
is_zero	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn is_zero(&self) -> bool {$/;"	P	implementation:Duration
iso_week	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn iso_week(&self) -> IsoWeek {$/;"	P	implementation:Date
iso_week	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn iso_week(&self) -> IsoWeek {$/;"	P	implementation:DateTime
iso_week	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn iso_week(&self) -> IsoWeek;$/;"	P	interface:Datelike
iso_week	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn iso_week(&self) -> IsoWeek {$/;"	P	implementation:NaiveDate
iso_week	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn iso_week(&self) -> IsoWeek {$/;"	P	implementation:NaiveDateTime
iso_week	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/display.rs	/^fn iso_week(fmt: &mut fmt::Formatter, ch:char, tm: &Tm) -> fmt::Result {$/;"	f
iso_week_days	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/display.rs	/^fn iso_week_days(yday: i32, wday: i32) -> i32 {$/;"	f
iso_week_from_yof	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^pub fn iso_week_from_yof(year: i32, of: Of) -> IsoWeek {$/;"	f
isoweek	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub isoweek: Option<u32>,$/;"	m	struct:Parsed
isoweek	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    mod isoweek;$/;"	n	module:naive
isoweek_delta	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn isoweek_delta(&self) -> u32 {$/;"	P	implementation:YearFlags
isoweekdate_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn isoweekdate_raw(&self) -> (u32, Weekday) {$/;"	P	implementation:Of
isoyear	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub isoyear: Option<i32>,$/;"	m	struct:Parsed
isoyear_div_100	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub isoyear_div_100: Option<i32>,$/;"	m	struct:Parsed
isoyear_mod_100	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub isoyear_mod_100: Option<i32>,$/;"	m	struct:Parsed
isoywd	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn isoywd(&self, year: i32, week: u32, weekday: Weekday) -> Date<Self> {$/;"	P	interface:TimeZone
isoywd_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn isoywd_opt(&self, year: i32, week: u32, weekday: Weekday) -> LocalResult<Date<Self>> {$/;"	P	interface:TimeZone
it	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lazy_buffer.rs	/^    pub it: I,$/;"	m	struct:LazyBuffer
it0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    it0: I,$/;"	m	struct:InterleaveShortest
it1	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    it1: J,$/;"	m	struct:InterleaveShortest
it_works	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn it_works() {$/;"	f	module:tests
italic	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn italic(mut self) -> ColoredString {$/;"	P	implementation:ColoredString
italic	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn italic(self) -> ColoredString {$/;"	P	implementation:str
italic	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn italic(self) -> ColoredString;$/;"	P	interface:Colorize
items	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    items: I,$/;"	m	struct:DelayedFormat
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    pub fn iter(&self) -> BlameIter<'_> {$/;"	P	implementation:Blame
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub fn iter(&self) -> IndexEntries<'_> {$/;"	P	implementation:Index
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    pub fn iter(&self) -> ReflogIter<'_> {$/;"	P	implementation:Reflog
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub fn iter(&self) -> StatusIter<'_> {$/;"	P	implementation:Statuses
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^    pub fn iter(&self) -> Iter<'_> {$/;"	P	implementation:StringArray
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    pub fn iter(&self) -> TreeIter<'_> {$/;"	P	implementation:Tree
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^    iter: I,$/;"	m	struct:CoalesceBy
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs	/^    iter: I,$/;"	m	struct:MapSpecialCase
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    iter: &'a mut I,$/;"	m	struct:TakeWhileRef
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    iter: Fuse<I>,$/;"	m	struct:Step
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:Batching
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:FilterMapOk
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:FilterOk
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:Positions
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:PutBack
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:Tuple1Combination
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:Update
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:WhileSome
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    iter: T::Combination,$/;"	m	struct:TupleCombinations
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs	/^    iter: I,$/;"	m	struct:MultiProductIter
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/cons_tuples_impl.rs	/^    iter: I,$/;"	m	struct:ConsTuples
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    iter: I,$/;"	m	struct:GroupInner
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs	/^    iter: I,$/;"	m	struct:GroupingMap
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs	/^    iter: Fuse<I>,$/;"	m	struct:IntersperseWith
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs	/^    iter: Fuse<I>,$/;"	m	struct:MultiPeek
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/pad_tail.rs	/^    iter: Fuse<I>,$/;"	m	struct:PadUsing
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs	/^    iter: Fuse<I>,$/;"	m	struct:PeekNth
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs	/^    iter: &'a mut I,$/;"	m	struct:PeekingTakeWhile
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs	/^    iter: I,$/;"	m	struct:ProcessResults
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs	/^    iter: I,$/;"	m	struct:PutBackN
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tee.rs	/^    iter: I,$/;"	m	struct:TeeBuffer
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^    iter: Fuse<I>,$/;"	m	struct:Tuples
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^    iter: I,$/;"	m	struct:TupleWindows
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^    iter: Take<TupleWindows<Cycle<I>, T>>,$/;"	m	struct:CircularTupleWindows
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs	/^    iter: I,$/;"	m	struct:UniqueBy
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs	/^    iter: UniqueBy<I, I::Item, ()>,$/;"	m	struct:Unique
iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    pub(crate) fn iter(&self) -> std::slice::Iter<'_, T> {$/;"	P	implementation:DirectiveSet
iter2cstrs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^pub fn iter2cstrs<T, I>($/;"	f
iter2cstrs_paths	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^pub fn iter2cstrs_paths<T, I>($/;"	f
iter_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^    pub fn iter_bytes(&self) -> IterBytes<'_> {$/;"	P	implementation:StringArray
iter_days	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn iter_days(&self) -> NaiveDateDaysIterator {$/;"	P	implementation:NaiveDate
iter_orig	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs	/^    iter_orig: I,$/;"	m	struct:MultiProductIter
iter_weeks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn iter_weeks(&self) -> NaiveDateWeeksIterator {$/;"	P	implementation:NaiveDate
iterate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs	/^    fn iterate(&mut self) {$/;"	f
iterate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs	/^pub fn iterate<St, F>(initial_value: St, f: F) -> Iterate<St, F>$/;"	f
iterate_last	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs	/^    fn iterate_last($/;"	f
izip	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^macro_rules! izip {$/;"	M
join	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs	/^pub fn join<I>(iterable: I, sep: &str) -> String$/;"	f
join	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn join(&mut self, sep: &str) -> String$/;"	P	interface:Itertools
json	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn json(self) -> Layer<S, format::JsonFields, format::Format<format::Json, T>, W> {$/;"	f
json	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    fn json() {$/;"	f	module:test
json	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    pub fn json(self) -> Format<Json, T> {$/;"	P	implementation:Format
json	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^mod json;$/;"	n
json	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^pub fn json() -> Format<Json> {$/;"	f
json	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn json($/;"	f
json_disabled_current_span_event	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    fn json_disabled_current_span_event() {$/;"	f	module:test
json_disabled_span_list_event	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    fn json_disabled_span_list_event() {$/;"	f	module:test
json_flattened_event	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    fn json_flattened_event() {$/;"	f	module:test
json_nested_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    fn json_nested_span() {$/;"	f	module:test
json_no_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    fn json_no_span() {$/;"	f	module:test
k	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs	/^    pub fn k(&self) -> usize { self.indices.len() }$/;"	P	implementation:Combinations
k_smallest	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/k_smallest.rs	/^pub(crate) fn k_smallest<T: Ord, I: Iterator<Item = T>>(mut iter: I, k: usize) -> BinaryHeap<T> /;"	f
k_smallest	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn k_smallest(self, k: usize) -> VecIntoIter<Self::Item>$/;"	P	interface:Itertools
k_smallest	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod k_smallest;$/;"	n
keeping_original_author_msg	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    fn keeping_original_author_msg() {$/;"	f	module:tests
key	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    key: F,$/;"	m	struct:GroupInner
key	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    key: usize,$/;"	m	struct:ChunkIndex
kind	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/lib.rs	/^    pub mod kind {$/;"	n	module:private
kind	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/lib.rs	/^mod kind;$/;"	n
kind	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn kind(&self) -> DiffBinaryKind {$/;"	P	implementation:DiffBinaryFile
kind	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    pub fn kind(&self) -> Option<ObjectType> {$/;"	P	implementation:Object
kind	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    pub fn kind(&self) -> ObjectType {$/;"	P	implementation:OdbObject
kind	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    pub fn kind(&self) -> Option<RebaseOperationType> {$/;"	P	implementation:RebaseOperation
kind	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    pub fn kind(&self) -> Option<ReferenceType> {$/;"	P	implementation:Reference
kind	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    pub fn kind(&self) -> Option<ObjectType> {$/;"	P	implementation:TreeEntry
kind	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    kind: ParseErrorKind,$/;"	m	struct:ParseError
kind	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    kind: ErrorKind,$/;"	m	struct:FromEnvError
kind	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^    kind: ErrorKind,$/;"	m	struct:Error
klass	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/error.rs	/^    klass: c_int,$/;"	m	struct:Error
kmerge	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs	/^pub fn kmerge<I>(iterable: I) -> KMerge<<I::Item as IntoIterator>::IntoIter>$/;"	f
kmerge	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn kmerge(self) -> KMerge<<Self::Item as IntoIterator>::IntoIter>$/;"	P	interface:Itertools
kmerge_by	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs	/^pub fn kmerge_by<I, F>(iterable: I, mut less_than: F)$/;"	f
kmerge_by	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn kmerge_by<F>(self, first: F)$/;"	P	interface:Itertools
kmerge_impl	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod kmerge_impl;$/;"	n
kmerge_pred	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs	/^    fn kmerge_pred(&mut self, a: &T, b: &T) -> bool {$/;"	P	implementation:F
kmerge_pred	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs	/^    fn kmerge_pred(&mut self, a: &T, b: &T) -> bool {$/;"	P	implementation:KMergeByLt
kmerge_pred	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs	/^    fn kmerge_pred(&mut self, a: &T, b: &T) -> bool;$/;"	P	interface:KMergePredicate
large_integer_to_i64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn large_integer_to_i64(l: LARGE_INTEGER) -> i64 {$/;"	f	module:inner
last	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^    last: Option<T>,$/;"	m	struct:CoalesceBy
last	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    fn last(self) -> Option<Self::Item> {$/;"	f
last	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs	/^    fn last(self) -> Option<Self::Item> {$/;"	f
last	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs	/^    fn last(mut self) -> Option<Self::Item> {$/;"	f
last	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^    last: Option<T>,$/;"	m	struct:TupleWindows
last	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    last: Instant,$/;"	m	struct:Timings
last_error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^pub fn last_error(code: libc::c_int) -> Error {$/;"	f
last_error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/error.rs	/^    pub fn last_error(code: c_int) -> Option<Error> {$/;"	P	implementation:Error
latest	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn latest(self) -> Option<T> {$/;"	P	implementation:LocalResult
layer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^pub fn layer<S>() -> Layer<S> {$/;"	f
layer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    layer: L,$/;"	m	struct:Layered
layer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/lib.rs	/^pub mod layer;$/;"	n
layer_is_subscriber	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn layer_is_subscriber() {$/;"	f	module:tests
lazy_buffer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod lazy_buffer;$/;"	n
left	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs	/^    pub fn left(self) -> Option<A> {$/;"	P	implementation:EitherOrBoth
left	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs	/^    left: PutBack<Fuse<I>>,$/;"	m	struct:MergeJoinBy
left_and_then	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs	/^    pub fn left_and_then<F, L>(self, f: F) -> EitherOrBoth<L, B>$/;"	P	implementation:EitherOrBoth
left_shift_push	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^    fn left_shift_push(&mut self, item: Self::Item);$/;"	P	interface:TupleCollect
len	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/chain.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Chain
len	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Blame
len	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Index
len	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:OdbObject
len	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Rebase
len	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Reflog
len	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Statuses
len	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:StringArray
len	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Tree
len	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/treebuilder.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:TreeBuilder
len	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lazy_buffer.rs	/^    pub fn len(&self) -> usize {$/;"	f
less_than	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs	/^    less_than: F,$/;"	m	struct:KMergeBy
level	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn level(&self) -> ConfigLevel {$/;"	P	implementation:ConfigEntry
level	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn level(&self) -> &LevelFilter {$/;"	P	implementation:Directive
level	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn level(&self) -> &LevelFilter {$/;"	P	implementation:StaticDirective
level	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn level(&self) -> &LevelFilter;$/;"	P	interface:Match
level	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    level: LevelFilter,$/;"	m	struct:StaticDirective
level	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    pub(crate) fn level(&self) -> LevelFilter {$/;"	P	implementation:SpanMatcher
level	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    level: LevelFilter,$/;"	m	struct:SpanMatch
level	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/mod.rs	/^mod level;$/;"	n
level	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    level: &'a Level,$/;"	m	struct:FmtLevel
level_enabled	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/macros.rs	/^macro_rules! level_enabled {$/;"	M
level_filters	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/lib.rs	/^pub mod level_filters;$/;"	n
level_to_log	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/macros.rs	/^macro_rules! level_to_log {$/;"	M
lifetime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^    lifetime: PhantomData<&'a T>,$/;"	m	struct:Ref
lifetime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^    lifetime: PhantomData<&'a mut T>,$/;"	m	struct:Mut
line	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub line: Option<&'g mut LineCb<'h>>,$/;"	m	struct:DiffCallbacks
line_cb_c	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^pub extern "C" fn line_cb_c($/;"	f
line_in_hunk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/patch.rs	/^    pub fn line_in_hunk($/;"	P	implementation:Patch
line_stats	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/patch.rs	/^    pub fn line_stats(&self) -> Result<(usize, usize, usize), Error> {$/;"	P	implementation:Patch
lines_in_hunk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    pub fn lines_in_hunk(&self) -> usize {$/;"	P	implementation:BlameHunk
list	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    list: &'list PathspecMatchList<'list>,$/;"	m	struct:PathspecDiffEntries
list	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    list: &'list PathspecMatchList<'list>,$/;"	m	struct:PathspecEntries
list	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    list: &'list PathspecMatchList<'list>,$/;"	m	struct:PathspecFailedEntries
list	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn list(&self) -> Result<&[RemoteHead<'_>], Error> {$/;"	P	implementation:Remote
list	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn list(&self) -> Result<&[RemoteHead<'_>], Error> {$/;"	P	implementation:RemoteConnection
list	/home/asayers/projects/orpa/src/main.rs	/^fn list(repo: &Repository) -> anyhow::Result<()> {$/;"	f
lit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^macro_rules! lit {$/;"	M
lite	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^    fn lite() {$/;"	f	module:tests
local	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^mod local;$/;"	n
local	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub fn local(self) -> Tm {$/;"	P	implementation:Timespec
local	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    local: bool,$/;"	m	struct:RepoBuilder
local	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn local(&mut self, local: bool) -> &mut RepoBuilder<'cb> {$/;"	P	implementation:RepoBuilder
local_minus_utc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    local_minus_utc: i32,$/;"	m	struct:FixedOffset
local_minus_utc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    pub fn local_minus_utc(&self) -> i32 {$/;"	P	implementation:FixedOffset
local_objects	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/indexer.rs	/^    pub fn local_objects(&self) -> usize {$/;"	P	implementation:Progress
local_tm_to_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/stub.rs	/^pub fn local_tm_to_time(tm: &Tm) -> i64 {$/;"	f
local_tm_to_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^pub fn local_tm_to_time(rust_tm: &Tm) -> i64 {$/;"	f
local_tm_to_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^pub fn local_tm_to_time(tm: &Tm) -> i64 {$/;"	f
local_tm_to_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn local_tm_to_time(rust_tm: &Tm) -> i64 {$/;"	f	module:inner
local_tm_to_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn local_tm_to_time(tm: &Tm) -> i64 {$/;"	f	module:inner
locale	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    locale: Option<Locale>,$/;"	m	struct:DelayedFormat
locales	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub(crate) mod locales;$/;"	n
lock	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    pub fn lock(&mut self, enabled: bool) -> &mut WorktreeAddOptions<'a> {$/;"	P	implementation:WorktreeAddOptions
lock	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    pub fn lock(&self, reason: Option<&str>) -> Result<(), Error> {$/;"	P	implementation:Worktree
locked	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    pub fn locked(&mut self, locked: bool) -> &mut WorktreePruneOptions {$/;"	P	implementation:WorktreePruneOptions
log	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    fn log(&self, target: &str, level: log::Level, message: fmt::Arguments<'_>) {$/;"	P	implementation:Span
loid	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn loid(&self) -> Oid {$/;"	P	implementation:RemoteHead
long_months	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/locales.rs	/^pub(crate) fn long_months(locale: Locale) -> &'static [&'static str] {$/;"	f
long_weekdays	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/locales.rs	/^pub(crate) fn long_weekdays(locale: Locale) -> &'static [&'static str] {$/;"	f
lookup	/home/asayers/projects/orpa/src/main.rs	/^fn lookup(repo: &Repository, oid: Oid) -> anyhow::Result<Status> {$/;"	f
lookup_buffer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    fn lookup_buffer(&mut self, client: usize) -> Option<I::Item> {$/;"	f
lookup_current	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn lookup_current(&self) -> Option<SpanRef<'_, S>>$/;"	f
lookup_current	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    pub fn lookup_current(&self) -> Option<registry::SpanRef<'_, S>>$/;"	f
mac	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    mod mac {$/;"	n	module:inner
macros	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/lib.rs	/^mod macros;$/;"	n
macros	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/lib.rs	/^mod macros;$/;"	n
magenta	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn magenta(self) -> ColoredString$/;"	P	interface:Colorize
main	/home/asayers/projects/orpa/src/main.rs	/^fn main() {$/;"	f
main_2	/home/asayers/projects/orpa/src/main.rs	/^fn main_2(opts: Opts) -> anyhow::Result<()> {$/;"	f
mainline	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cherrypick.rs	/^    mainline: u32,$/;"	m	struct:CherrypickOptions
mainline	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cherrypick.rs	/^    pub fn mainline(&mut self, mainline: u32) -> &mut Self {$/;"	P	implementation:CherrypickOptions
mainline	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revert.rs	/^    mainline: u32,$/;"	m	struct:RevertOptions
mainline	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revert.rs	/^    pub fn mainline(&mut self, mainline: u32) -> &mut Self {$/;"	P	implementation:RevertOptions
make_ctx	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    fn make_ctx<'a>(&'a self, ctx: Context<'a, S>) -> FmtContext<'a, S, N> {$/;"	f
make_stash	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/stash.rs	/^    fn make_stash<C>(next: C)$/;"	f	module:tests
make_tables	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    pub(super) fn make_tables($/;"	P	implementation:Directive
make_test	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^        macro_rules! make_test {$/;"	M	module:tests::from_str
make_test	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^        macro_rules! make_test {$/;"	M	module:tests::from_string
make_visitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/debug.rs	/^    fn make_visitor(&self, target: T) -> Self::Visitor {$/;"	f
make_visitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^    fn make_visitor(&self, target: T) -> Self::Visitor {$/;"	f
make_visitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/display.rs	/^    fn make_visitor(&self, target: T) -> Self::Visitor {$/;"	f
make_visitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^        fn make_visitor(&self, w: &'a mut dyn fmt::Write) -> DebugVisitor<'a> {$/;"	P	implementation:test_util::MakeDebug
make_visitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    fn make_visitor(&self, target: T) -> Self::Visitor {$/;"	f
make_visitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    fn make_visitor(&self, target: T) -> Self::Visitor;$/;"	P	interface:MakeVisitor
make_visitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn make_visitor(&self, target: &'a mut dyn Write) -> Self::Visitor {$/;"	P	implementation:DefaultFields
make_visitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn make_visitor(&self, writer: &'a mut dyn fmt::Write) -> Self::Visitor {$/;"	f
make_with	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    fn make_with($/;"	P	implementation:Span
make_writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    make_writer: W,$/;"	m	struct:Layer
make_writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^        fn make_writer(&self) -> Self::Writer {$/;"	P	implementation:test::MockMakeWriter
make_writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^    fn make_writer(&self) -> Self::Writer {$/;"	P	implementation:BoxMakeWriter
make_writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^    fn make_writer(&self) -> Self::Writer {$/;"	P	implementation:TestWriter
make_writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^    fn make_writer(&self) -> Self::Writer {$/;"	f
make_writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^    fn make_writer(&self) -> Self::Writer;$/;"	P	interface:MakeWriter
makes_dirs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    fn makes_dirs() {$/;"	f	module:tests
manual_override	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^    manual_override: AtomicBool,$/;"	m	struct:ShouldColorize
map	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn map<U, F: FnMut(T) -> U>(self, mut f: F) -> LocalResult<U> {$/;"	P	implementation:LocalResult
map	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^mod map;$/;"	n
map	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^    map: AnyMap,$/;"	m	struct:ExtensionsInner
map_any	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs	/^    pub fn map_any<F, L, G, R>(self, f: F, g: G) -> EitherOrBoth<L, R>$/;"	P	implementation:EitherOrBoth
map_error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^        pub(crate) fn map_error<Guard>(err: TryLockError<Guard>) -> io::Error {$/;"	P	implementation:test::MockWriter
map_into	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs	/^pub fn map_into<I, R>(iter: I) -> MapInto<I, R> {$/;"	f
map_into	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn map_into<R>(self) -> MapInto<Self, R>$/;"	P	interface:Itertools
map_left	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs	/^    pub fn map_left<F, M>(self, f: F) -> EitherOrBoth<M, B>$/;"	P	implementation:EitherOrBoth
map_local	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^fn map_local<Tz: TimeZone, F>(d: &Date<Tz>, mut f: F) -> Option<Date<Tz>>$/;"	f
map_local	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^fn map_local<Tz: TimeZone, F>(dt: &DateTime<Tz>, mut f: F) -> Option<DateTime<Tz>>$/;"	f
map_ok	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs	/^pub fn map_ok<I, F, T, U, E>(iter: I, f: F) -> MapOk<I, F>$/;"	f
map_ok	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn map_ok<F, T, U, E>(self, f: F) -> MapOk<Self, F>$/;"	P	interface:Itertools
map_results	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn map_results<F, T, U, E>(self, f: F) -> MapOk<Self, F>$/;"	P	interface:Itertools
map_right	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs	/^    pub fn map_right<F, M>(self, f: F) -> EitherOrBoth<A, M>$/;"	P	implementation:EitherOrBoth
match_diff	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    pub fn match_diff($/;"	P	implementation:Pathspec
match_digits	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/parse.rs	/^fn match_digits(ss: &mut &str, min_digits : usize, max_digits: usize, ws: bool) -> Option<i32> {$/;"	f
match_digits_i64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/parse.rs	/^fn match_digits_i64(ss: &mut &str, min_digits : usize, max_digits: usize, ws: bool) -> Option<i6/;"	f
match_digits_in_range	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/parse.rs	/^fn match_digits_in_range(ss: &mut &str,$/;"	f
match_fractional_seconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/parse.rs	/^fn match_fractional_seconds(ss: &mut &str) -> i32 {$/;"	f
match_index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    pub fn match_index($/;"	P	implementation:Pathspec
match_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/parse.rs	/^fn match_str(s: &mut &str, needle: &str) -> bool {$/;"	f
match_strs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/parse.rs	/^fn match_strs(ss: &mut &str, strs: &[(&str, i32)]) -> Option<i32> {$/;"	f
match_tree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    pub fn match_tree($/;"	P	implementation:Pathspec
match_workdir	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    pub fn match_workdir($/;"	P	implementation:Pathspec
matcher	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    pub(crate) fn matcher(&self, metadata: &Metadata<'_>) -> Option<CallsiteMatcher> {$/;"	P	implementation:Dynamics
matches_path	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    pub fn matches_path(&self, path: &Path, flags: PathspecFlags) -> bool {$/;"	P	implementation:Pathspec
max	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs	/^pub fn max<I>(iterable: I) -> Option<I::Item>$/;"	f
max	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs	/^    pub fn max(self) -> HashMap<K, V>$/;"	f
max	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/size_hint.rs	/^pub fn max(a: SizeHint, b: SizeHint) -> SizeHint {$/;"	f
max_by	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs	/^    pub fn max_by<F>(self, mut compare: F) -> HashMap<K, V>$/;"	f
max_by_key	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs	/^    pub fn max_by_key<F, CK>(self, mut f: F) -> HashMap<K, V>$/;"	f
max_candidates_tags	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^    pub fn max_candidates_tags(&mut self, max: u32) -> &mut Self {$/;"	P	implementation:DescribeOptions
max_level_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    fn max_level_hint(&self) -> Option<LevelFilter> {$/;"	P	implementation:EnvFilter
max_level_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/level.rs	/^    fn max_level_hint(&self) -> Option<LevelFilter> {$/;"	P	implementation:LevelFilter
max_level_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn max_level_hint(&self) -> Option<LevelFilter> {$/;"	P	interface:Layer
max_level_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn max_level_hint(&self) -> Option<LevelFilter> {$/;"	f
max_size	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn max_size(&mut self, size: i64) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
max_value	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn max_value() -> Duration {$/;"	P	implementation:Duration
max_value	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn max_value() -> Duration { MAX }$/;"	P	implementation:Duration
maybe_pad	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn maybe_pad(&mut self) {$/;"	P	implementation:DefaultVisitor
maybe_pad	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^    fn maybe_pad(&mut self) {$/;"	P	implementation:PrettyVisitor
mdf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn mdf(&self) -> Mdf {$/;"	P	implementation:NaiveDate
mempack	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod mempack;$/;"	n
merge	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn merge(&mut self, from: &Diff<'repo>) -> Result<(), Error> {$/;"	P	implementation:Diff
merge	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod merge;$/;"	n
merge	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn merge($/;"	P	implementation:Repository
merge	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub fn merge<I, J>(i: I, j: J) -> Merge<<I as IntoIterator>::IntoIter, <J as IntoIterator>::Into/;"	f
merge	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn merge<J>(self, other: J) -> Merge<Self, J::IntoIter>$/;"	P	interface:Itertools
merge_analysis	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn merge_analysis($/;"	P	implementation:Repository
merge_base	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn merge_base(&self, one: Oid, two: Oid) -> Result<Oid, Error> {$/;"	P	implementation:Repository
merge_base_many	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn merge_base_many(&self, oids: &[Oid]) -> Result<Oid, Error> {$/;"	P	implementation:Repository
merge_bases	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn merge_bases(&self, one: Oid, two: Oid) -> Result<OidArray, Error> {$/;"	P	implementation:Repository
merge_bases_many	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn merge_bases_many(&self, oids: &[Oid]) -> Result<OidArray, Error> {$/;"	P	implementation:Repository
merge_by	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn merge_by<J, F>(self, other: J, is_first: F) -> MergeBy<Self, J::IntoIter, F>$/;"	P	interface:Itertools
merge_by_new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub fn merge_by_new<I, J, F>(a: I, b: J, cmp: F) -> MergeBy<I::IntoIter, J::IntoIter, F>$/;"	f
merge_commits	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn merge_commits($/;"	P	implementation:Repository
merge_join	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod merge_join;$/;"	n
merge_join_by	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn merge_join_by<J, F>(self, other: J, cmp_fn: F) -> MergeJoinBy<Self, J::IntoIter, F>$/;"	P	interface:Itertools
merge_join_by	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs	/^pub fn merge_join_by<I, J, F>(left: I, right: J, cmp_fn: F)$/;"	f
merge_options	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    merge_options: Option<MergeOptions>,$/;"	m	struct:RebaseOptions
merge_options	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    pub fn merge_options(&mut self, opts: MergeOptions) -> &mut RebaseOptions<'cb> {$/;"	P	implementation:RebaseOptions
merge_opts	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cherrypick.rs	/^    merge_opts: Option<MergeOptions>,$/;"	m	struct:CherrypickOptions
merge_opts	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cherrypick.rs	/^    pub fn merge_opts(&mut self, merge_opts: MergeOptions) -> &mut Self {$/;"	P	implementation:CherrypickOptions
merge_opts	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revert.rs	/^    merge_opts: Option<MergeOptions>,$/;"	m	struct:RevertOptions
merge_opts	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revert.rs	/^    pub fn merge_opts(&mut self, merge_opts: MergeOptions) -> &mut Self {$/;"	P	implementation:RevertOptions
merge_pred	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    fn merge_pred(&mut self, a: &T, b: &T) -> bool {$/;"	P	implementation:F
merge_pred	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    fn merge_pred(&mut self, a: &T, b: &T) -> bool {$/;"	P	implementation:MergeLte
merge_pred	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    fn merge_pred(&mut self, a: &T, b: &T) -> bool;$/;"	P	interface:MergePredicate
merge_trees	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn merge_trees($/;"	P	implementation:Repository
message	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    pub fn message(&self) -> Option<&str> {$/;"	P	implementation:Commit
message	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/error.rs	/^    message: String,$/;"	m	struct:Error
message	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/error.rs	/^    pub fn message(&self) -> &str {$/;"	P	implementation:Error
message	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod message;$/;"	n
message	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^    pub fn message(&self) -> Option<&str> {$/;"	P	implementation:Note
message	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    pub fn message(&self) -> Option<&str> {$/;"	P	implementation:ReflogEntry
message	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn message(&self) -> Result<String, Error> {$/;"	P	implementation:Repository
message	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^    pub fn message(&self) -> Option<&str> {$/;"	P	implementation:Tag
message_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    pub fn message_bytes(&self) -> &[u8] {$/;"	P	implementation:Commit
message_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^    pub fn message_bytes(&self) -> &[u8] {$/;"	P	implementation:Note
message_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    pub fn message_bytes(&self) -> Option<&[u8]> {$/;"	P	implementation:ReflogEntry
message_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^    pub fn message_bytes(&self) -> Option<&[u8]> {$/;"	P	implementation:Tag
message_encoding	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    pub fn message_encoding(&self) -> Option<&str> {$/;"	P	implementation:Commit
message_prettify	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/message.rs	/^pub fn message_prettify<T: IntoCString>($/;"	f
message_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    pub fn message_raw(&self) -> Option<&str> {$/;"	P	implementation:Commit
message_raw_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    pub fn message_raw_bytes(&self) -> &[u8] {$/;"	P	implementation:Commit
meta	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/lib.rs	/^        meta: &'static Metadata<'static>,$/;"	m	struct:__macro_support::MacroCallsite
meta	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    meta: Option<&'static Metadata<'static>>,$/;"	m	struct:Span
metadata	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/lib.rs	/^        fn metadata(&self) -> &Metadata<'static> {$/;"	P	implementation:__macro_support::MacroCallsite
metadata	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    pub fn metadata(&self) -> Option<&'static Metadata<'static>> {$/;"	P	implementation:Span
metadata	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^        fn metadata(&self) -> &Metadata<'_> {$/;"	P	implementation:test_util::TestCallsite1
metadata	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^        fn metadata(&self) -> &Metadata<'_> {$/;"	P	implementation:tests::Cs
metadata	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn metadata(&self, id: &Id) -> Option<&'static Metadata<'static>>$/;"	f
metadata	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    pub fn metadata(&self, id: &span::Id) -> Option<&'static Metadata<'static>>$/;"	f
metadata	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    fn metadata(&self) -> &'static Metadata<'static>;$/;"	P	interface:SpanData
metadata	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    pub fn metadata(&self) -> &'static Metadata<'static> {$/;"	f
metadata	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^            fn metadata(&self) -> &Metadata<'_> {$/;"	P	implementation:DataInner::default::NullCallsite
metadata	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn metadata(&self) -> &'static Metadata<'static> {$/;"	P	implementation:Data
metadata	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    metadata: &'static Metadata<'static>,$/;"	m	struct:DataInner
microseconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn microseconds(microseconds: i64) -> Duration {$/;"	P	implementation:Duration
microseconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn microseconds(microseconds: i64) -> Duration {$/;"	P	implementation:Duration
milliseconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn milliseconds(milliseconds: i64) -> Duration {$/;"	P	implementation:Duration
milliseconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn milliseconds(milliseconds: i64) -> Duration {$/;"	P	implementation:Duration
min	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs	/^pub fn min<I>(iterable: I) -> Option<I::Item>$/;"	f
min	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs	/^    pub fn min(self) -> HashMap<K, V>$/;"	f
min	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/pad_tail.rs	/^    min: usize,$/;"	m	struct:PadUsing
min	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/size_hint.rs	/^pub fn min(a: SizeHint, b: SizeHint) -> SizeHint {$/;"	f
min_by	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs	/^    pub fn min_by<F>(self, mut compare: F) -> HashMap<K, V>$/;"	f
min_by_key	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs	/^    pub fn min_by_key<F, CK>(self, mut f: F) -> HashMap<K, V>$/;"	f
min_value	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn min_value() -> Duration {$/;"	P	implementation:Duration
min_value	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn min_value() -> Duration { MIN }$/;"	P	implementation:Duration
minimal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn minimal(&mut self, minimal: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
minimal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    pub fn minimal(&mut self, minimal: bool) -> &mut MergeOptions {$/;"	P	implementation:MergeOptions
minmax	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs	/^    pub fn minmax(self) -> HashMap<K, MinMaxResult<V>>$/;"	f
minmax	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn minmax(self) -> MinMaxResult<Self::Item>$/;"	P	interface:Itertools
minmax	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod minmax;$/;"	n
minmax_by	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs	/^    pub fn minmax_by<F>(self, mut compare: F) -> HashMap<K, MinMaxResult<V>>$/;"	f
minmax_by	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn minmax_by<F>(self, mut compare: F) -> MinMaxResult<Self::Item>$/;"	P	interface:Itertools
minmax_by_key	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs	/^    pub fn minmax_by_key<F, CK>(self, mut f: F) -> HashMap<K, MinMaxResult<V>>$/;"	f
minmax_by_key	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn minmax_by_key<K, F>(self, key: F) -> MinMaxResult<Self::Item>$/;"	P	interface:Itertools
minmax_impl	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs	/^pub fn minmax_impl<I, K, F, L>(mut it: I, mut key_for: F,$/;"	f
minute	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn minute(&self) -> u32 {$/;"	P	implementation:DateTime
minute	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub minute: Option<u32>,$/;"	m	struct:Parsed
minute	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn minute(&self) -> u32;$/;"	P	interface:Timelike
minute	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn minute(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
minute	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn minute(&self) -> u32 {$/;"	P	implementation:NaiveTime
minute	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/datetime.rs	/^    minute: u8,$/;"	m	struct:DateTime
minutes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn minutes(minutes: i64) -> Duration {$/;"	P	implementation:Duration
minutes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn minutes(minutes: i64) -> Duration {$/;"	P	implementation:Duration
mkdir	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn mkdir(&mut self, enabled: bool) -> &mut RepositoryInitOptions {$/;"	P	implementation:RepositoryInitOptions
mkpath	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn mkpath(&mut self, enabled: bool) -> &mut RepositoryInitOptions {$/;"	P	implementation:RepositoryInitOptions
mod_floor_64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^fn mod_floor_64(this: i64, other: i64) -> i64 {$/;"	f
mod_floor_64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^fn mod_floor_64(this: i64, other: i64) -> i64 {$/;"	f
mode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn mode(&self) -> FileMode {$/;"	P	implementation:DiffFile
mode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub mode: u32,$/;"	m	struct:IndexEntry
mode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    mode: u32,$/;"	m	struct:RepositoryInitOptions
mode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn mode(&mut self, mode: RepositoryInitMode) -> &mut RepositoryInitOptions {$/;"	P	implementation:RepositoryInitOptions
mode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revspec.rs	/^    mode: RevparseMode,$/;"	m	struct:Revspec
mode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revspec.rs	/^    pub fn mode(&self) -> RevparseMode {$/;"	P	implementation:Revspec
modify	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^    pub fn modify(&self, f: impl FnOnce(&mut L)) -> Result<(), Error> {$/;"	f
month	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn month(&self) -> u32 {$/;"	P	implementation:Date
month	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn month(&self) -> u32 {$/;"	P	implementation:DateTime
month	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub month: Option<u32>,$/;"	m	struct:Parsed
month	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn month(&self) -> u32;$/;"	P	interface:Datelike
month	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn month(&self) -> u32 {$/;"	P	implementation:NaiveDate
month	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn month(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
month	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn month(&self) -> u32 {$/;"	P	implementation:Mdf
month	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/datetime.rs	/^    month: u8,$/;"	m	struct:DateTime
month0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn month0(&self) -> u32 {$/;"	P	implementation:Date
month0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn month0(&self) -> u32 {$/;"	P	implementation:DateTime
month0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn month0(&self) -> u32;$/;"	P	interface:Datelike
month0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn month0(&self) -> u32 {$/;"	P	implementation:NaiveDate
month0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn month0(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
month_serde	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^mod month_serde {$/;"	n
msg	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    pub fn msg<M>(message: M) -> Self$/;"	P	implementation:Error
mtime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub mtime: IndexTime,$/;"	m	struct:IndexEntry
mul	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn mul(self, rhs: i32) -> Duration {$/;"	P	implementation:Duration
mul	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/size_hint.rs	/^pub fn mul(a: SizeHint, b: SizeHint) -> SizeHint {$/;"	f
mul	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn mul(self, rhs: i32) -> Duration {$/;"	P	implementation:Duration
mul_div_i64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn mul_div_i64(value: i64, numer: i64, denom: i64) -> i64 {$/;"	f	module:inner
mul_scalar	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/size_hint.rs	/^pub fn mul_scalar(sh: SizeHint, x: usize) -> SizeHint {$/;"	f
multi_cartesian_product	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs	/^pub fn multi_cartesian_product<H>(iters: H) -> MultiProduct<<H::Item as IntoIterator>::IntoIter>$/;"	f
multi_cartesian_product	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn multi_cartesian_product(self) -> MultiProduct<<Self::Item as IntoIterator>::IntoIter>$/;"	P	interface:Itertools
multi_product	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^mod multi_product;$/;"	n
multipeek	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn multipeek(self) -> MultiPeek<Self>$/;"	P	interface:Itertools
multipeek	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs	/^pub fn multipeek<I>(iterable: I) -> MultiPeek<I::IntoIter>$/;"	f
multipeek_impl	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod multipeek_impl;$/;"	n
multiple_layers_can_access_closed_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn multiple_layers_can_access_closed_span() {$/;"	f	module:tests
multivar	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    fn multivar() {$/;"	f	module:tests
multivar	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn multivar(&self, name: &str, regexp: Option<&str>) -> Result<ConfigEntries<'_>, Error>/;"	P	implementation:Config
multizip	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs	/^pub fn multizip<T, U>(t: U) -> Zip<T>$/;"	f
my_try	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^        macro_rules! my_try( ($e:expr) => ($/;"	M	function:execute_cmd
n	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs	/^    pub fn n(&self) -> usize { self.pool.len() }$/;"	P	implementation:Combinations
n	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/repeatn.rs	/^    n: usize,$/;"	m	struct:RepeatN
naive	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub mod naive {$/;"	n
naive_local	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn naive_local(&self) -> NaiveDate {$/;"	P	implementation:Date
naive_local	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn naive_local(&self) -> NaiveDateTime {$/;"	P	implementation:DateTime
naive_utc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn naive_utc(&self) -> NaiveDate {$/;"	P	implementation:Date
naive_utc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn naive_utc(&self) -> NaiveDateTime {$/;"	P	implementation:DateTime
name	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn name(&self) -> &'static str {$/;"	P	implementation:Month
name	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/branch.rs	/^    pub fn name(&self) -> Result<Option<&str>, Error> {$/;"	P	implementation:Branch
name	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn name(&self) -> Option<&str> {$/;"	P	implementation:ConfigEntry
name	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    pub fn name(&self) -> Option<&str> {$/;"	P	implementation:Reference
name	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn name(&self) -> &str {$/;"	P	implementation:RemoteHead
name	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn name(&self) -> Option<&str> {$/;"	P	implementation:Remote
name	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/signature.rs	/^    pub fn name(&self) -> Option<&str> {$/;"	P	implementation:Signature
name	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    pub fn name(&self) -> Option<&str> {$/;"	P	implementation:Submodule
name	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^    pub fn name(&self) -> Option<&str> {$/;"	P	implementation:Tag
name	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    pub fn name(&self) -> Option<&str> {$/;"	P	implementation:TreeEntry
name	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    pub fn name(&self) -> Option<&str> {$/;"	P	implementation:Worktree
name	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    name: String,$/;"	m	struct:BadName
name	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    pub(crate) fn name(&self) -> String {$/;"	P	implementation:Match
name	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    name: &'a str,$/;"	m	struct:FmtThreadName
name	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    pub fn name(&self) -> &'static str {$/;"	f
name_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/branch.rs	/^    pub fn name_bytes(&self) -> Result<&[u8], Error> {$/;"	P	implementation:Branch
name_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn name_bytes(&self) -> &[u8] {$/;"	P	implementation:ConfigEntry
name_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    pub fn name_bytes(&self) -> &[u8] {$/;"	P	implementation:Reference
name_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn name_bytes(&self) -> Option<&[u8]> {$/;"	P	implementation:Remote
name_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/signature.rs	/^    pub fn name_bytes(&self) -> &[u8] {$/;"	P	implementation:Signature
name_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    pub fn name_bytes(&self) -> &[u8] {$/;"	P	implementation:Submodule
name_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^    pub fn name_bytes(&self) -> &[u8] {$/;"	P	implementation:Tag
name_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    pub fn name_bytes(&self) -> &[u8] {$/;"	P	implementation:TreeEntry
names	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    pub fn names<'a>(&'a mut self) -> ReferenceNames<'repo, 'a> {$/;"	P	implementation:References
namespace	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn namespace(&self) -> Option<&str> {$/;"	P	implementation:Repository
namespace_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn namespace_bytes(&self) -> Option<&[u8]> {$/;"	P	implementation:Repository
nanos	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    nanos: i32, \/\/ Always 0 <= nanos < NANOS_PER_SEC$/;"	m	struct:Duration
nanos	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    nanos: i32, \/\/ Always 0 <= nanos < NANOS_PER_SEC$/;"	m	struct:Duration
nanos	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/datetime.rs	/^    nanos: u32,$/;"	m	struct:DateTime
nanos_mod_sec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn nanos_mod_sec(&self) -> i32 {$/;"	P	implementation:Duration
nanos_mod_sec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn nanos_mod_sec(&self) -> i32 {$/;"	P	implementation:Duration
nanosecond	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn nanosecond(&self) -> u32 {$/;"	P	implementation:DateTime
nanosecond	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub nanosecond: Option<u32>,$/;"	m	struct:Parsed
nanosecond	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn nanosecond(s: &str) -> ParseResult<(&str, i64)> {$/;"	f
nanosecond	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn nanosecond(&self) -> u32;$/;"	P	interface:Timelike
nanosecond	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn nanosecond(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
nanosecond	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn nanosecond(&self) -> u32 {$/;"	P	implementation:NaiveTime
nanosecond_fixed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn nanosecond_fixed(s: &str, digits: usize) -> ParseResult<(&str, i64)> {$/;"	f
nanoseconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn nanoseconds(nanos: i64) -> Duration {$/;"	P	implementation:Duration
nanoseconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^    pub fn nanoseconds(&self) -> u32 {$/;"	P	implementation:IndexTime
nanoseconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn nanoseconds(nanos: i64) -> Duration {$/;"	P	implementation:Duration
ndays	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn ndays(&self) -> u32 {$/;"	P	implementation:YearFlags
ne_timestamp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^fn ne_timestamp<T: fmt::Display>(ts: T) -> SerdeError<T, u8> {$/;"	f
need_cleanup	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^    need_cleanup: bool,$/;"	m	struct:BlobWriter
neg	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn neg(self) -> Duration {$/;"	P	implementation:Duration
neg	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn neg(self) -> Duration {$/;"	P	implementation:Duration
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/chain.rs	/^    pub fn new(head: &'a (dyn StdError + 'static)) -> Self {$/;"	P	implementation:Chain
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    pub fn new<E>(error: E) -> Self$/;"	P	implementation:Error
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/kind.rs	/^    pub fn new(self, error: Box<dyn StdError + Send + Sync>) -> Error {$/;"	P	implementation:Boxed
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/kind.rs	/^    pub fn new<E>(self, error: E) -> Error$/;"	P	implementation:Trait
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/kind.rs	/^    pub fn new<M>(self, message: M) -> Error$/;"	P	implementation:Adhoc
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^    pub fn new(ptr: &'a T) -> Self {$/;"	P	implementation:Ref
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^    pub fn new(ptr: &'a mut T) -> Self {$/;"	P	implementation:Mut
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^    pub fn new(ptr: Box<T>) -> Self {$/;"	P	implementation:Own
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    pub fn new(date: Option<NaiveDate>, time: Option<NaiveTime>, items: I) -> DelayedFormat<I> {$/;"	P	implementation:DelayedFormat
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn new() -> Parsed {$/;"	P	implementation:Parsed
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^    pub fn new(s: &'a str) -> StrftimeItems<'a> {$/;"	P	implementation:StrftimeItems
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn new(date: NaiveDate, time: NaiveTime) -> NaiveDateTime {$/;"	P	implementation:NaiveDateTime
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn new(month: u32, day: u32, YearFlags(flags): YearFlags) -> Mdf {$/;"	P	implementation:Mdf
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn new(ordinal: u32, YearFlags(flags): YearFlags) -> Of {$/;"	P	implementation:Of
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/apply.rs	/^    pub fn new() -> Self {$/;"	P	implementation:ApplyOptions
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    pub fn new() -> BlameOptions {$/;"	P	implementation:BlameOptions
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/buf.rs	/^    pub fn new() -> Buf {$/;"	P	implementation:Buf
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn new() -> CheckoutBuilder<'cb> {$/;"	P	implementation:CheckoutBuilder
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn new() -> RepoBuilder<'cb> {$/;"	P	implementation:RepoBuilder
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn new() -> Self {$/;"	P	implementation:TreeUpdateBuilder
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cherrypick.rs	/^    pub fn new() -> CherrypickOptions<'cb> {$/;"	P	implementation:CherrypickOptions
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn new() -> Result<Config, Error> {$/;"	P	implementation:Config
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    pub fn new(url: &str) -> CredentialHelper {$/;"	P	implementation:CredentialHelper
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^    pub fn new() -> DescribeFormatOptions {$/;"	P	implementation:DescribeFormatOptions
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^    pub fn new() -> DescribeOptions {$/;"	P	implementation:DescribeOptions
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn new() -> DiffFindOptions {$/;"	P	implementation:DiffFindOptions
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn new() -> DiffOptions {$/;"	P	implementation:DiffOptions
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn new() -> Self {$/;"	P	implementation:DiffFormatEmailOptions
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/error.rs	/^    pub fn new<S: AsRef<str>>(code: ErrorCode, class: ErrorClass, message: S) -> Self {$/;"	P	implementation:Error
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub fn new() -> Result<Index, Error> {$/;"	P	implementation:Index
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    pub fn new() -> MergeOptions {$/;"	P	implementation:MergeOptions
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    pub fn new<'a>() -> Result<Odb<'a>, Error> {$/;"	P	implementation:Odb
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    pub fn new<I, T>(specs: I) -> Result<Pathspec, Error>$/;"	P	implementation:Pathspec
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/proxy_options.rs	/^    pub fn new() -> ProxyOptions<'a> {$/;"	P	implementation:ProxyOptions
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    pub fn new() -> RebaseOptions<'cb> {$/;"	P	implementation:RebaseOptions
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn new() -> FetchOptions<'cb> {$/;"	P	implementation:FetchOptions
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn new() -> PushOptions<'cb> {$/;"	P	implementation:PushOptions
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^    pub fn new() -> RemoteCallbacks<'a> {$/;"	P	implementation:RemoteCallbacks
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn new() -> RepositoryInitOptions {$/;"	P	implementation:RepositoryInitOptions
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revert.rs	/^    pub fn new() -> RevertOptions<'cb> {$/;"	P	implementation:RevertOptions
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/signature.rs	/^    pub fn new(name: &str, email: &str, time: &Time) -> Result<Signature<'static>, Error> {$/;"	P	implementation:Signature
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/stash.rs	/^    pub fn new() -> StashApplyOptions<'cb> {$/;"	P	implementation:StashApplyOptions
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub fn new() -> StatusOptions {$/;"	P	implementation:StatusOptions
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    pub fn new() -> Self {$/;"	P	implementation:SubmoduleUpdateOptions
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^    pub fn new(seconds: i32, nanoseconds: u32) -> IndexTime {$/;"	P	implementation:IndexTime
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^    pub fn new(time: i64, offset: i32) -> Time {$/;"	P	implementation:Time
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    pub fn new() -> WorktreeAddOptions<'a> {$/;"	P	implementation:WorktreeAddOptions
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    pub fn new() -> WorktreePruneOptions {$/;"	P	implementation:WorktreePruneOptions
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs	/^    fn new(iter: I) -> Self {$/;"	f
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs	/^    pub(crate) fn new(first_two: Option<Either<[I::Item; 2], I::Item>>, inner: I) -> Self {$/;"	f
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    fn new(size: usize) -> Self {$/;"	P	implementation:ChunkIndex
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^pub fn new<K, J, F>(iter: J, f: F) -> GroupBy<K, J::IntoIter, F>$/;"	f
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs	/^    pub(crate) fn new(iter: I, key_mapper: F) -> Self {$/;"	P	implementation:MapForGrouping
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs	/^pub fn new<I, K, V>(iter: I) -> GroupingMap<I>$/;"	f
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs	/^    fn new(mut it: I) -> Option<HeadTail<I>> {$/;"	f
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lazy_buffer.rs	/^    pub fn new(it: I) -> LazyBuffer<I> {$/;"	f
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tee.rs	/^pub fn new<I>(iter: I) -> (Tee<I>, Tee<I>)$/;"	f
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^    fn new(buf: T::Buffer) -> Self {$/;"	f
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn new(sec: i64, nsec: i32) -> Timespec {$/;"	P	implementation:Timespec
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/lib.rs	/^        pub const fn new(meta: &'static Metadata<'static>) -> Self {$/;"	P	implementation:__macro_support::MacroCallsite
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    fn new(id: Id, subscriber: &Dispatch) -> Self {$/;"	P	implementation:Inner
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    pub fn new(meta: &'static Metadata<'static>, values: &field::ValueSet<'_>) -> Span {$/;"	P	implementation:Span
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/debug.rs	/^    pub fn new(inner: V) -> Self {$/;"	P	implementation:Alt
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^    pub fn new(delimiter: D, inner: V) -> Self {$/;"	P	implementation:Delimited
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^    pub fn new(delimiter: D, inner: V) -> Self {$/;"	P	implementation:VisitDelimited
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/display.rs	/^    pub fn new(inner: V) -> Self {$/;"	P	implementation:Messages
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^        pub(crate) fn new(writer: &'a mut dyn fmt::Write) -> Self {$/;"	P	implementation:test_util::DebugVisitor
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn new() -> Self {$/;"	P	implementation:ParseError
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    pub fn new<S: AsRef<str>>(dirs: S) -> Self {$/;"	P	implementation:EnvFilter
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    fn new() -> Self {$/;"	P	implementation:Timings
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn new() -> Self {$/;"	P	implementation:Layer
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn new(fields: String) -> Self {$/;"	P	implementation:FormattedFields
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    fn new(fmt_write: &'a mut dyn fmt::Write) -> Self {$/;"	P	implementation:WriteAdaptor
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    pub fn new() -> Self {$/;"	P	implementation:JsonFields
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    pub fn new(writer: &'a mut dyn Write) -> Self {$/;"	P	implementation:JsonVisitor
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn new() -> Self {$/;"	P	implementation:Style
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    pub fn new() -> Self {$/;"	P	implementation:DefaultFields
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    pub fn new(writer: &'a mut dyn Write, is_empty: bool) -> Self {$/;"	P	implementation:DefaultVisitor
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    pub(crate) fn new($/;"	f
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    pub(crate) fn new(ctx: &'a FmtContext<'_, S, N>, span: Option<&'a span::Id>) -> Self {$/;"	f
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    pub(crate) fn new(ctx: &'a FmtContext<'a, S, N>, span: Option<&'a span::Id>) -> Self {$/;"	f
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    pub(crate) fn new(level: &'a Level) -> Self {$/;"	P	implementation:FmtLevel
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    pub(crate) fn new(level: &'a Level, ansi: bool) -> Self {$/;"	P	implementation:FmtLevel
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    pub(crate) fn new(name: &'a str) -> Self {$/;"	P	implementation:FmtThreadName
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^    pub fn new(writer: &'a mut dyn Write, is_empty: bool) -> Self {$/;"	P	implementation:PrettyVisitor
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^        pub(crate) fn new(buf: &'a Mutex<Vec<u8>>) -> Self {$/;"	P	implementation:test::MockMakeWriter
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^        pub(crate) fn new(buf: &'a Mutex<Vec<u8>>) -> Self {$/;"	P	implementation:test::MockWriter
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn new() -> Self {$/;"	P	implementation:Subscriber
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^    pub fn new() -> Self {$/;"	P	implementation:TestWriter
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^    pub fn new<M>(make_writer: M) -> Self$/;"	P	implementation:BoxMakeWriter
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    pub fn new() -> Self {$/;"	P	implementation:Identity
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/lib.rs	/^    pub fn new() -> Self {$/;"	P	implementation:CurrentSpan
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^    pub(crate) fn new() -> ExtensionsInner {$/;"	P	implementation:ExtensionsInner
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^    pub(crate) fn new(inner: RwLockReadGuard<'a, ExtensionsInner>) -> Self {$/;"	P	implementation:Extensions
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^    pub(crate) fn new(inner: RwLockWriteGuard<'a, ExtensionsInner>) -> Self {$/;"	P	implementation:ExtensionsMut
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^        fn new() -> (Self, CloseHandle) {$/;"	P	implementation:tests::CloseLayer
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^    pub fn new(inner: L) -> (Self, Handle<L, S>) {$/;"	f
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/sync.rs	/^        pub(crate) fn new(val: T) -> Self {$/;"	P	implementation:parking_lot_impl::RwLock
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/thread.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:Local
new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/util.rs	/^    fn new(e: impl Into<Box<dyn Error + Send + Sync + 'static>>) -> Self {$/;"	P	implementation:TryInitError
new_adhoc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/lib.rs	/^    pub fn new_adhoc<M>(message: M) -> Error$/;"	f	module:private
new_chunks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^pub fn new_chunks<J>(iter: J, size: usize) -> IntoChunks<J::IntoIter>$/;"	f
new_disabled	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    pub fn new_disabled(meta: &'static Metadata<'static>) -> Span {$/;"	P	implementation:Span
new_file	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn new_file(&self) -> DiffBinaryFile<'a> {$/;"	P	implementation:DiffBinary
new_file	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn new_file(&self) -> DiffFile<'a> {$/;"	P	implementation:DiffDelta
new_format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs	/^pub fn new_format<I, F>(iter: I, separator: &str, f: F) -> FormatWith<'_, I, F>$/;"	f
new_format_default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs	/^pub fn new_format_default<I>(iter: I, separator: &str) -> Format<'_, I>$/;"	f
new_lineno	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn new_lineno(&self) -> Option<u32> {$/;"	P	implementation:DiffLine
new_lines	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn new_lines(&self) -> u32 {$/;"	P	implementation:DiffHunk
new_prefix	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    new_prefix: Option<CString>,$/;"	m	struct:DiffOptions
new_prefix	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn new_prefix<T: IntoCString>(&mut self, t: T) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
new_root	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    pub fn new_root(meta: &'static Metadata<'static>, values: &field::ValueSet<'_>) -> Span {$/;"	P	implementation:Span
new_root_with	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    pub fn new_root_with($/;"	P	implementation:Span
new_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^        fn new_span(&self, _: &span::Attributes<'_>) -> span::Id {$/;"	P	implementation:tests::NoSubscriber
new_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    fn new_span(&self, attrs: &span::Attributes<'_>, id: &span::Id, _: Context<'_, S>) {$/;"	P	implementation:EnvFilter
new_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    fn new_span(&self, attrs: &Attributes<'_>, id: &Id, ctx: Context<'_, S>) {$/;"	f
new_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    fn new_span(&self, attrs: &span::Attributes<'_>) -> span::Id {$/;"	f
new_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^        fn new_span(&self, _: &span::Attributes<'_>) -> span::Id {$/;"	P	implementation:tests::NopSubscriber
new_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^        fn new_span(&self, _: &span::Attributes<'_>) -> span::Id {$/;"	P	implementation:tests::StringSubscriber
new_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn new_span(&self, attrs: &span::Attributes<'_>, id: &span::Id, ctx: Context<'_, S>) {$/;"	P	interface:Layer
new_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn new_span(&self, attrs: &span::Attributes<'_>, id: &span::Id, ctx: Context<'_, S>) {$/;"	f
new_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn new_span(&self, span: &span::Attributes<'_>) -> span::Id {$/;"	f
new_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^        fn new_span(&self, _: &Attributes<'_>, id: &Id, ctx: Context<'_, S>) {$/;"	f	module:tests
new_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn new_span(&self, attrs: &span::Attributes<'_>) -> span::Id {$/;"	P	implementation:Registry
new_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^    fn new_span(&self, attrs: &span::Attributes<'_>, id: &span::Id, ctx: layer::Context<'_, S>) /;"	f
new_start	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn new_start(&self) -> u32 {$/;"	P	implementation:DiffHunk
new_thread	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/thread.rs	/^    fn new_thread(&self, i: usize, new: impl FnOnce() -> T) {$/;"	P	implementation:Local
new_thread	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/thread.rs	/^    fn new_thread(local: &Cell<Option<Id>>) -> Self {$/;"	P	implementation:Id
new_with	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    pub fn new_with($/;"	P	implementation:Span
new_with_locale	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    pub fn new_with_locale($/;"	P	implementation:DelayedFormat
new_with_locale	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^    pub fn new_with_locale(s: &'a str, locale: Locale) -> StrftimeItems<'a> {$/;"	P	implementation:StrftimeItems
new_with_offset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    pub fn new_with_offset<Off>($/;"	P	implementation:DelayedFormat
new_with_offset_and_locale	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    pub fn new_with_offset_and_locale<Off>($/;"	P	implementation:DelayedFormat
newest_commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    pub fn newest_commit(&mut self, id: Oid) -> &mut BlameOptions {$/;"	P	implementation:BlameOptions
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/chain.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:Chain
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^                macro_rules! next {$/;"	M	method:StrftimeItems::next
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^    fn next(&mut self) -> Option<Item<'a>> {$/;"	P	implementation:StrftimeItems
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:NaiveDateDaysIterator
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:NaiveDateWeeksIterator
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    fn next(&mut self) -> Option<BlameHunk<'blame>> {$/;"	P	implementation:BlameIter
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/branch.rs	/^    fn next(&mut self) -> Option<Result<(Branch<'repo>, BranchType), Error>> {$/;"	P	implementation:Branches
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    fn next(&mut self) -> Option<Commit<'repo>> {$/;"	P	implementation:Parents
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    fn next(&mut self) -> Option<Oid> {$/;"	P	implementation:ParentIds
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    fn next(&mut self) -> Option<Result<ConfigEntry<'b>, Error>> {$/;"	P	implementation:ConfigEntries
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn next(&mut self) -> Option<DiffDelta<'diff>> {$/;"	P	implementation:Deltas
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    fn next(&mut self) -> Option<IndexEntry> {$/;"	P	implementation:IndexEntries
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    fn next(&mut self) -> Option<Result<IndexConflict, Error>> {$/;"	P	implementation:IndexConflicts
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^    fn next(&mut self) -> Option<Result<(Oid, Oid), Error>> {$/;"	P	implementation:Notes
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    fn next(&mut self) -> Option<&'list [u8]> {$/;"	P	implementation:PathspecEntries
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    fn next(&mut self) -> Option<&'list [u8]> {$/;"	P	implementation:PathspecFailedEntries
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    fn next(&mut self) -> Option<DiffDelta<'list>> {$/;"	P	implementation:PathspecDiffEntries
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    fn next(&mut self) -> Option<Result<RebaseOperation<'rebase>, Error>> {$/;"	P	implementation:Rebase
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    fn next(&mut self) -> Option<Result<&'references str, Error>> {$/;"	P	implementation:ReferenceNames
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    fn next(&mut self) -> Option<Result<Reference<'repo>, Error>> {$/;"	P	implementation:References
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    fn next(&mut self) -> Option<ReflogEntry<'reflog>> {$/;"	P	implementation:ReflogIter
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    fn next(&mut self) -> Option<Refspec<'repo>> {$/;"	P	implementation:Refspecs
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revwalk.rs	/^    fn next(&mut self) -> Option<Result<Oid, Error>> {$/;"	P	implementation:Revwalk
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    fn next(&mut self) -> Option<StatusEntry<'a>> {$/;"	P	implementation:StatusIter
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^    fn next(&mut self) -> Option<&'a [u8]> {$/;"	P	implementation:IterBytes
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^    fn next(&mut self) -> Option<Option<&'a str>> {$/;"	P	implementation:Iter
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^        fn next(&mut self) -> Option<TreeEntry<'a>> {$/;"	P	implementation:tests::TestTreeIter
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    fn next(&mut self) -> Option<TreeEntry<'tree>> {$/;"	P	implementation:TreeIter
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:Tuple1Combination
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations_with_replacement.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/pad_tail.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/powerset.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:PutBackN
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/repeatn.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tee.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:WithPosition
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_longest.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:Scope
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    next: Option<Id>,$/;"	m	struct:Parents
next	/home/asayers/projects/orpa/src/main.rs	/^fn next(repo: &Repository) -> anyhow::Result<()> {$/;"	f
next_back	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/chain.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	P	implementation:Chain
next_back	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    fn next_back(&mut self) -> Option<BlameHunk<'blame>> {$/;"	P	implementation:BlameIter
next_back	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    fn next_back(&mut self) -> Option<Commit<'repo>> {$/;"	P	implementation:Parents
next_back	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    fn next_back(&mut self) -> Option<Oid> {$/;"	P	implementation:ParentIds
next_back	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn next_back(&mut self) -> Option<DiffDelta<'diff>> {$/;"	P	implementation:Deltas
next_back	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    fn next_back(&mut self) -> Option<&'list [u8]> {$/;"	P	implementation:PathspecEntries
next_back	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    fn next_back(&mut self) -> Option<&'list [u8]> {$/;"	P	implementation:PathspecFailedEntries
next_back	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    fn next_back(&mut self) -> Option<DiffDelta<'list>> {$/;"	P	implementation:PathspecDiffEntries
next_back	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    fn next_back(&mut self) -> Option<ReflogEntry<'reflog>> {$/;"	P	implementation:ReflogIter
next_back	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    fn next_back(&mut self) -> Option<Refspec<'repo>> {$/;"	P	implementation:Refspecs
next_back	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    fn next_back(&mut self) -> Option<StatusEntry<'a>> {$/;"	P	implementation:StatusIter
next_back	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^    fn next_back(&mut self) -> Option<&'a [u8]> {$/;"	P	implementation:IterBytes
next_back	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^    fn next_back(&mut self) -> Option<Option<&'a str>> {$/;"	P	implementation:Iter
next_back	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    fn next_back(&mut self) -> Option<TreeEntry<'tree>> {$/;"	P	implementation:TreeIter
next_back	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/pad_tail.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/repeatn.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_longest.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_element	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    fn next_element(&mut self) -> Option<I::Item> {$/;"	f
next_tuple	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn next_tuple<T>(&mut self) -> Option<T>$/;"	P	interface:Itertools
nfiles	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn nfiles(&self) -> u16 {$/;"	P	implementation:DiffDelta
nisoweeks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn nisoweeks(&self) -> u32 {$/;"	P	implementation:YearFlags
no_digits	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/fmt.rs	/^    fn no_digits() {$/;"	f	module:tests
no_dotgit_dir	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn no_dotgit_dir(&mut self, enabled: bool) -> &mut RepositoryInitOptions {$/;"	P	implementation:RepositoryInitOptions
no_recursive	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    pub fn no_recursive(&mut self, disable: bool) -> &mut MergeOptions {$/;"	P	implementation:MergeOptions
no_refresh	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub fn no_refresh(&mut self, include: bool) -> &mut StatusOptions {$/;"	P	implementation:StatusOptions
no_reinit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn no_reinit(&mut self, enabled: bool) -> &mut RepositoryInitOptions {$/;"	P	implementation:RepositoryInitOptions
no_std	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/stdlib.rs	/^mod no_std {$/;"	n
none	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    pub const fn none() -> Span {$/;"	P	implementation:Span
none	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    pub(crate) fn none() -> Self {$/;"	P	implementation:Context
norm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn norm<Tz: TimeZone>(dt: &Option<DateTime<Tz>>) -> Option<(&DateTime<Tz>, &Tz::Offset)> {$/;"	f	function:test_decodable_json
norm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn norm<Tz: TimeZone>(dt: &Option<DateTime<Tz>>) -> Option<(&DateTime<Tz>, &Tz::Offset)> {$/;"	f	function:test_decodable_json_timestamps
normal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn normal(self) -> ColoredString {$/;"	P	implementation:ColoredString
normal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn normal(self) -> ColoredString {$/;"	P	implementation:str
normal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn normal(self) -> ColoredString;$/;"	P	interface:Colorize
normalize_env	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^    fn normalize_env(env_res: Result<String, env::VarError>) -> Option<bool> {$/;"	P	implementation:ShouldColorize
normalize_name	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    pub fn normalize_name(refname: &str, flags: ReferenceFormat) -> Result<String, Error> {$/;"	P	implementation:Reference
note	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod note;$/;"	n
note	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn note($/;"	P	implementation:Repository
note_default_ref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn note_default_ref(&self) -> Result<String, Error> {$/;"	P	implementation:Repository
note_delete	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn note_delete($/;"	P	implementation:Repository
notes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn notes(&self, notes_ref: Option<&str>) -> Result<Notes<'_>, Error> {$/;"	P	implementation:Repository
notify	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    notify: Option<Box<Notify<'cb>>>,$/;"	m	struct:CheckoutBuilder
notify	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn notify<F>(&mut self, cb: F) -> &mut CheckoutBuilder<'cb>$/;"	P	implementation:CheckoutBuilder
notify_cb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^extern "C" fn notify_cb($/;"	f
notify_flags	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    notify_flags: CheckoutNotificationType,$/;"	m	struct:CheckoutBuilder
notify_on	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn notify_on($/;"	P	implementation:CheckoutBuilder
now	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    pub fn now() -> DateTime<Local> {$/;"	P	implementation:Local
now	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    pub fn now() -> DateTime<Utc> {$/;"	P	implementation:Utc
now	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub fn now() -> Timespec {$/;"	P	implementation:Timespec
now	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/signature.rs	/^    pub fn now(name: &str, email: &str) -> Result<Signature<'static>, Error> {$/;"	P	implementation:Signature
now	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn now() -> PreciseTime {$/;"	P	implementation:PreciseTime
now	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn now() -> SteadyTime {$/;"	P	implementation:SteadyTime
now	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn now() -> Tm {$/;"	f
now	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            pub fn now() -> SteadyTime {$/;"	P	implementation:inner::mac::SteadyTime
now	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            pub fn now() -> SteadyTime {$/;"	P	implementation:inner::unix::SteadyTime
now	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        pub fn now() -> SteadyTime {$/;"	P	implementation:inner::SteadyTime
now_utc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn now_utc() -> Tm {$/;"	f
nsec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub nsec: i32,$/;"	m	struct:Timespec
nsec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub struct Timespec { pub sec: i64, pub nsec: i32 }$/;"	m	struct:Timespec
nsec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^                type nsec = i64;$/;"	t	method:inner::unix::SteadyTime::add
nsec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^                type nsec = libc::c_long;$/;"	t	method:inner::unix::SteadyTime::add
nth	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    pub fn nth(&mut self, n: usize) -> Option<RebaseOperation<'_>> {$/;"	P	implementation:Rebase
nth	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    fn nth(&mut self, n: usize) -> Option<Self::Item> {$/;"	f
nth	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs	/^    fn nth(&mut self, mut n: usize) -> Option<Self::Item> {$/;"	f
num	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^macro_rules! num {$/;"	M
num0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^macro_rules! num0 {$/;"	M
num_days	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn num_days(&self) -> i64 {$/;"	P	implementation:Duration
num_days	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn num_days(&self) -> i64 {$/;"	P	implementation:Duration
num_days_from_ce	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn num_days_from_ce(&self) -> i32 {$/;"	P	interface:Datelike
num_days_from_ce	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn num_days_from_ce<Date: Datelike>(date: &Date) -> i32 {$/;"	f	function:test_num_days_from_ce_against_alternative_impl
num_days_from_monday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn num_days_from_monday(&self) -> u32 {$/;"	P	implementation:Weekday
num_days_from_sunday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn num_days_from_sunday(&self) -> u32 {$/;"	P	implementation:Weekday
num_hours	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn num_hours(&self) -> i64 {$/;"	P	implementation:Duration
num_hours	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn num_hours(&self) -> i64 {$/;"	P	implementation:Duration
num_hunks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/patch.rs	/^    pub fn num_hunks(&self) -> usize {$/;"	P	implementation:Patch
num_items	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^    fn num_items() -> usize;$/;"	P	interface:TupleCollect
num_lines	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn num_lines(&self) -> u32 {$/;"	P	implementation:DiffLine
num_lines_in_hunk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/patch.rs	/^    pub fn num_lines_in_hunk(&self, hunk_idx: usize) -> Result<usize, Error> {$/;"	P	implementation:Patch
num_microseconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn num_microseconds(&self) -> Option<i64> {$/;"	P	implementation:Duration
num_microseconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn num_microseconds(&self) -> Option<i64> {$/;"	P	implementation:Duration
num_milliseconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn num_milliseconds(&self) -> i64 {$/;"	P	implementation:Duration
num_milliseconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn num_milliseconds(&self) -> i64 {$/;"	P	implementation:Duration
num_minutes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn num_minutes(&self) -> i64 {$/;"	P	implementation:Duration
num_minutes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn num_minutes(&self) -> i64 {$/;"	P	implementation:Duration
num_nanoseconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn num_nanoseconds(&self) -> Option<i64> {$/;"	P	implementation:Duration
num_nanoseconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn num_nanoseconds(&self) -> Option<i64> {$/;"	P	implementation:Duration
num_seconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn num_seconds(&self) -> i64 {$/;"	P	implementation:Duration
num_seconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn num_seconds(&self) -> i64 {$/;"	P	implementation:Duration
num_seconds_from_midnight	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn num_seconds_from_midnight(&self) -> u32 {$/;"	P	interface:Timelike
num_seconds_from_midnight	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn num_seconds_from_midnight(&self) -> u32 {$/;"	P	implementation:NaiveTime
num_weeks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn num_weeks(&self) -> i64 {$/;"	P	implementation:Duration
num_weeks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn num_weeks(&self) -> i64 {$/;"	P	implementation:Duration
number	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/fmt.rs	/^    number: Option<usize>,$/;"	m	struct:Indented
number	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn number(s: &str, min: usize, max: usize) -> ParseResult<(&str, i64)> {$/;"	f
number_from_monday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn number_from_monday(&self) -> u32 {$/;"	P	implementation:Weekday
number_from_month	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn number_from_month(&self) -> u32 {$/;"	P	implementation:Month
number_from_sunday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn number_from_sunday(&self) -> u32 {$/;"	P	implementation:Weekday
nums	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^macro_rules! nums {$/;"	M
obj	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^    obj: Box<dyn SmartSubtransport>,$/;"	m	struct:RawSmartSubtransport
obj	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^    obj: Box<dyn SmartSubtransportStream>,$/;"	m	struct:RawSmartSubtransportStream
object	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod object;$/;"	n
object_boxed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    object_boxed: unsafe fn(Own<ErrorImpl>) -> Box<dyn StdError + Send + Sync + 'static>,$/;"	m	struct:ErrorVTable
object_boxed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^unsafe fn object_boxed<E>(e: Own<ErrorImpl>) -> Box<dyn StdError + Send + Sync + 'static>$/;"	f
object_count	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    pub fn object_count(&self) -> usize {$/;"	P	implementation:PackBuilder
object_downcast	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    object_downcast: unsafe fn(Ref<ErrorImpl>, TypeId) -> Option<Ref<()>>,$/;"	m	struct:ErrorVTable
object_downcast	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^unsafe fn object_downcast<E>(e: Ref<ErrorImpl>, target: TypeId) -> Option<Ref<()>>$/;"	f
object_downcast_mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    object_downcast_mut: unsafe fn(Mut<ErrorImpl>, TypeId) -> Option<Mut<()>>,$/;"	m	struct:ErrorVTable
object_downcast_mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^unsafe fn object_downcast_mut<E>(e: Mut<ErrorImpl>, target: TypeId) -> Option<Mut<()>>$/;"	f
object_drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    object_drop: unsafe fn(Own<ErrorImpl>),$/;"	m	struct:ErrorVTable
object_drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^unsafe fn object_drop<E>(e: Own<ErrorImpl>) {$/;"	f
object_drop_front	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^unsafe fn object_drop_front<E>(e: Own<ErrorImpl>, target: TypeId) {$/;"	f
object_drop_rest	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    object_drop_rest: unsafe fn(Own<ErrorImpl>, TypeId),$/;"	m	struct:ErrorVTable
object_mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    object_mut: unsafe fn(Mut<ErrorImpl>) -> &mut (dyn StdError + Send + Sync + 'static),$/;"	m	struct:ErrorVTable
object_mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^unsafe fn object_mut<E>(e: Mut<ErrorImpl>) -> &mut (dyn StdError + Send + Sync + 'static)$/;"	f
object_ref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    object_ref: unsafe fn(Ref<ErrorImpl>) -> &(dyn StdError + Send + Sync + 'static),$/;"	m	struct:ErrorVTable
object_ref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^unsafe fn object_ref<E>(e: Ref<ErrorImpl>) -> &(dyn StdError + Send + Sync + 'static)$/;"	f
odb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod odb;$/;"	n
odb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn odb(&self) -> Result<Odb<'_>, Error> {$/;"	P	implementation:Repository
of	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn of(&self) -> Of {$/;"	P	implementation:NaiveDate
off	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    off: Option<(String, FixedOffset)>,$/;"	m	struct:DelayedFormat
offset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    offset: Tz::Offset,$/;"	m	struct:Date
offset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn offset(&self) -> &Tz::Offset {$/;"	P	implementation:Date
offset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    offset: Tz::Offset,$/;"	m	struct:DateTime
offset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn offset(&self) -> &Tz::Offset {$/;"	P	implementation:DateTime
offset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub offset: Option<i32>,$/;"	m	struct:Parsed
offset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub mod offset;$/;"	n
offset_from_local_date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn offset_from_local_date(&self, _local: &NaiveDate) -> LocalResult<FixedOffset> {$/;"	P	implementation:FixedOffset
offset_from_local_date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn offset_from_local_date(&self, local: &NaiveDate) -> LocalResult<FixedOffset> {$/;"	P	implementation:Local
offset_from_local_date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn offset_from_local_date(&self, local: &NaiveDate) -> LocalResult<Self::Offset>;$/;"	P	interface:TimeZone
offset_from_local_date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    fn offset_from_local_date(&self, _local: &NaiveDate) -> LocalResult<Utc> {$/;"	P	implementation:Utc
offset_from_local_datetime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn offset_from_local_datetime(&self, _local: &NaiveDateTime) -> LocalResult<FixedOffset> {$/;"	P	implementation:FixedOffset
offset_from_local_datetime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn offset_from_local_datetime(&self, local: &NaiveDateTime) -> LocalResult<FixedOffset> {$/;"	P	implementation:Local
offset_from_local_datetime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn offset_from_local_datetime(&self, local: &NaiveDateTime) -> LocalResult<Self::Offset>;$/;"	P	interface:TimeZone
offset_from_local_datetime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    fn offset_from_local_datetime(&self, _local: &NaiveDateTime) -> LocalResult<Utc> {$/;"	P	implementation:Utc
offset_from_utc_date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn offset_from_utc_date(&self, _utc: &NaiveDate) -> FixedOffset {$/;"	P	implementation:FixedOffset
offset_from_utc_date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn offset_from_utc_date(&self, utc: &NaiveDate) -> FixedOffset {$/;"	P	implementation:Local
offset_from_utc_date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn offset_from_utc_date(&self, utc: &NaiveDate) -> Self::Offset;$/;"	P	interface:TimeZone
offset_from_utc_date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    fn offset_from_utc_date(&self, _utc: &NaiveDate) -> Utc {$/;"	P	implementation:Utc
offset_from_utc_datetime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn offset_from_utc_datetime(&self, _utc: &NaiveDateTime) -> FixedOffset {$/;"	P	implementation:FixedOffset
offset_from_utc_datetime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn offset_from_utc_datetime(&self, utc: &NaiveDateTime) -> FixedOffset {$/;"	P	implementation:Local
offset_from_utc_datetime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn offset_from_utc_datetime(&self, utc: &NaiveDateTime) -> Self::Offset;$/;"	P	interface:TimeZone
offset_from_utc_datetime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    fn offset_from_utc_datetime(&self, _utc: &NaiveDateTime) -> Utc {$/;"	P	implementation:Utc
offset_minutes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^    pub fn offset_minutes(&self) -> i32 {$/;"	P	implementation:Time
oid	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod oid;$/;"	n
oid	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn oid(&self) -> Oid {$/;"	P	implementation:RemoteHead
oid_array	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^pub mod oid_array;$/;"	n
old	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        old: TIME_ZONE_INFORMATION,$/;"	m	struct:inner::TzReset
old_file	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn old_file(&self) -> DiffBinaryFile<'a> {$/;"	P	implementation:DiffBinary
old_file	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn old_file(&self) -> DiffFile<'a> {$/;"	P	implementation:DiffDelta
old_lineno	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn old_lineno(&self) -> Option<u32> {$/;"	P	implementation:DiffLine
old_lines	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn old_lines(&self) -> u32 {$/;"	P	implementation:DiffHunk
old_prefix	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    old_prefix: Option<CString>,$/;"	m	struct:DiffOptions
old_prefix	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn old_prefix<T: IntoCString>(&mut self, t: T) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
old_start	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn old_start(&self) -> u32 {$/;"	P	implementation:DiffHunk
oldest_buffered_group	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    oldest_buffered_group: usize,$/;"	m	struct:GroupInner
oldest_commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    pub fn oldest_commit(&mut self, id: Oid) -> &mut BlameOptions {$/;"	P	implementation:BlameOptions
oldtime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^mod oldtime;$/;"	n
on_black	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_black(self) -> ColoredString$/;"	P	interface:Colorize
on_blue	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_blue(self) -> ColoredString$/;"	P	interface:Colorize
on_bright_black	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_bright_black(self) -> ColoredString$/;"	P	interface:Colorize
on_bright_blue	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_bright_blue(self) -> ColoredString$/;"	P	interface:Colorize
on_bright_color_fn	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_bright_color_fn() {$/;"	f	module:tests
on_bright_cyan	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_bright_cyan(self) -> ColoredString$/;"	P	interface:Colorize
on_bright_green	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_bright_green(self) -> ColoredString$/;"	P	interface:Colorize
on_bright_magenta	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_bright_magenta(self) -> ColoredString$/;"	P	interface:Colorize
on_bright_purple	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_bright_purple(self) -> ColoredString$/;"	P	interface:Colorize
on_bright_red	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_bright_red(self) -> ColoredString$/;"	P	interface:Colorize
on_bright_white	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_bright_white(self) -> ColoredString$/;"	P	interface:Colorize
on_bright_yellow	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_bright_yellow(self) -> ColoredString$/;"	P	interface:Colorize
on_close	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    fn on_close(&self, id: span::Id, _: Context<'_, S>) {$/;"	P	implementation:EnvFilter
on_close	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    fn on_close(&self, id: Id, ctx: Context<'_, S>) {$/;"	f
on_close	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn on_close(&self, _id: span::Id, _ctx: Context<'_, S>) {}$/;"	P	interface:Layer
on_close	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn on_close(&self, id: span::Id, ctx: Context<'_, S>) {$/;"	f
on_close	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^        fn on_close(&self, id: Id, ctx: Context<'_, S>) {$/;"	f	module:tests
on_close	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^    fn on_close(&self, id: span::Id, ctx: layer::Context<'_, S>) {$/;"	f
on_color	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_color<S: Into<Color>>(mut self, color: S) -> ColoredString {$/;"	P	implementation:ColoredString
on_color	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_color<S: Into<Color>>(self, color: S) -> ColoredString {$/;"	P	implementation:str
on_color	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_color<S: Into<Color>>(self, color: S) -> ColoredString;$/;"	P	interface:Colorize
on_color_fn	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_color_fn() {$/;"	f	module:tests
on_cyan	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_cyan(self) -> ColoredString$/;"	P	interface:Colorize
on_enter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    fn on_enter(&self, id: &span::Id, _: Context<'_, S>) {$/;"	P	implementation:EnvFilter
on_enter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    fn on_enter(&self, id: &Id, ctx: Context<'_, S>) {$/;"	f
on_enter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn on_enter(&self, _id: &span::Id, _ctx: Context<'_, S>) {}$/;"	P	interface:Layer
on_enter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn on_enter(&self, id: &span::Id, ctx: Context<'_, S>) {$/;"	f
on_enter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^    fn on_enter(&self, id: &span::Id, ctx: layer::Context<'_, S>) {$/;"	f
on_event	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    fn on_event(&self, event: &Event<'_>, ctx: Context<'_, S>) {$/;"	f
on_event	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn on_event<E2>(self, fmt_event: E2) -> SubscriberBuilder<N, E2, F, W>$/;"	P	implementation:SubscriberBuilder
on_event	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn on_event(&self, _event: &Event<'_>, _ctx: Context<'_, S>) {}$/;"	P	interface:Layer
on_event	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn on_event(&self, event: &Event<'_>, ctx: Context<'_, S>) {$/;"	f
on_event	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^    fn on_event(&self, event: &Event<'_>, ctx: layer::Context<'_, S>) {$/;"	f
on_exit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    fn on_exit(&self, id: &span::Id, _: Context<'_, S>) {$/;"	P	implementation:EnvFilter
on_exit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    fn on_exit(&self, id: &Id, ctx: Context<'_, S>) {$/;"	f
on_exit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn on_exit(&self, _id: &span::Id, _ctx: Context<'_, S>) {}$/;"	P	interface:Layer
on_exit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn on_exit(&self, id: &span::Id, ctx: Context<'_, S>) {$/;"	f
on_exit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^    fn on_exit(&self, id: &span::Id, ctx: layer::Context<'_, S>) {$/;"	f
on_follows_from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn on_follows_from(&self, _span: &span::Id, _follows: &span::Id, _ctx: Context<'_, S>) {}$/;"	P	interface:Layer
on_follows_from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn on_follows_from(&self, span: &span::Id, follows: &span::Id, ctx: Context<'_, S>) {$/;"	f
on_follows_from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^    fn on_follows_from(&self, span: &span::Id, follows: &span::Id, ctx: layer::Context<'_, S>) {$/;"	f
on_green	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_green(self) -> ColoredString$/;"	P	interface:Colorize
on_id_change	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn on_id_change(&self, _old: &span::Id, _new: &span::Id, _ctx: Context<'_, S>) {}$/;"	P	interface:Layer
on_id_change	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn on_id_change(&self, old: &span::Id, new: &span::Id, ctx: Context<'_, S>) {$/;"	f
on_id_change	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^    fn on_id_change(&self, old: &span::Id, new: &span::Id, ctx: layer::Context<'_, S>) {$/;"	f
on_magenta	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_magenta(self) -> ColoredString$/;"	P	interface:Colorize
on_purple	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_purple(self) -> ColoredString$/;"	P	interface:Colorize
on_record	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    fn on_record(&self, id: &span::Id, values: &span::Record<'_>, _: Context<'_, S>) {$/;"	P	implementation:EnvFilter
on_record	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    fn on_record(&self, id: &Id, values: &Record<'_>, ctx: Context<'_, S>) {$/;"	f
on_record	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn on_record(&self, _span: &span::Id, _values: &span::Record<'_>, _ctx: Context<'_, S>) {}$/;"	P	interface:Layer
on_record	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn on_record(&self, span: &span::Id, values: &span::Record<'_>, ctx: Context<'_, S>) {$/;"	f
on_record	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^    fn on_record(&self, span: &span::Id, values: &span::Record<'_>, ctx: layer::Context<'_, S>) /;"	f
on_red	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_red(self) -> ColoredString$/;"	P	interface:Colorize
on_truecolor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_truecolor(self, r: u8, g: u8, b: u8) -> ColoredString$/;"	P	interface:Colorize
on_white	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_white(self) -> ColoredString$/;"	P	interface:Colorize
on_yellow	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn on_yellow(self) -> ColoredString$/;"	P	interface:Colorize
one	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            one: Option<i64>,$/;"	m	struct:serde::test_serde_bincode_optional::Test
one_digit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/fmt.rs	/^    fn one_digit() {$/;"	f	module:tests
only_follow_first_parent	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^    pub fn only_follow_first_parent(&mut self, follow: bool) -> &mut Self {$/;"	P	implementation:DescribeOptions
open	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn open(path: &Path) -> Result<Config, Error> {$/;"	P	implementation:Config
open	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub fn open(index_path: &Path) -> Result<Index, Error> {$/;"	P	implementation:Index
open	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn open<P: AsRef<Path>>(path: P) -> Result<Repository, Error> {$/;"	P	implementation:Repository
open	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    pub fn open(&self) -> Result<Repository, Error> {$/;"	P	implementation:Submodule
open	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^        open: HashMap<&'static str, Weak<()>>,$/;"	m	struct:tests::CloseState
open_bare	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn open_bare<P: AsRef<Path>>(path: P) -> Result<Repository, Error> {$/;"	P	implementation:Repository
open_default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn open_default() -> Result<Config, Error> {$/;"	P	implementation:Config
open_ext	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn open_ext<P, O, I>($/;"	P	implementation:Repository
open_from_env	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn open_from_env() -> Result<Repository, Error> {$/;"	P	implementation:Repository
open_from_repository	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    pub fn open_from_repository(repo: &Repository) -> Result<Worktree, Error> {$/;"	P	implementation:Worktree
open_from_worktree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn open_from_worktree(worktree: &Worktree) -> Result<Repository, Error> {$/;"	P	implementation:Repository
open_global	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn open_global(&mut self) -> Result<Config, Error> {$/;"	P	implementation:Config
open_level	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn open_level(&self, level: ConfigLevel) -> Result<Config, Error> {$/;"	P	implementation:Config
open_rebase	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn open_rebase(&self, opts: Option<&mut RebaseOptions<'_>>) -> Result<Rebase<'_>, Error>/;"	P	implementation:Repository
openssl_env_init	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^fn openssl_env_init() {$/;"	f
openssl_env_init	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^fn openssl_env_init() {}$/;"	f
operation_current	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    pub fn operation_current(&mut self) -> Option<usize> {$/;"	P	implementation:Rebase
opt_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^unsafe fn opt_bytes<'a, T>(_anchor: &'a T, c: *const libc::c_char) -> Option<&'a [u8]> {$/;"	f
opt_cstr	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^fn opt_cstr<T: IntoCString>(o: Option<T>) -> Result<Option<CString>, Error> {$/;"	f
opt_url_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    pub fn opt_url_bytes(&self) -> Option<&[u8]> {$/;"	P	implementation:Submodule
opts	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^pub mod opts;$/;"	n
ordinal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn ordinal(&self) -> u32 {$/;"	P	implementation:Date
ordinal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn ordinal(&self) -> u32 {$/;"	P	implementation:DateTime
ordinal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub ordinal: Option<u32>,$/;"	m	struct:Parsed
ordinal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn ordinal(&self) -> u32;$/;"	P	interface:Datelike
ordinal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn ordinal(&self) -> u32 {$/;"	P	implementation:NaiveDate
ordinal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn ordinal(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
ordinal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn ordinal(&self) -> u32 {$/;"	P	implementation:Of
ordinal0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn ordinal0(&self) -> u32 {$/;"	P	implementation:Date
ordinal0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn ordinal0(&self) -> u32 {$/;"	P	implementation:DateTime
ordinal0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn ordinal0(&self) -> u32;$/;"	P	interface:Datelike
ordinal0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn ordinal0(&self) -> u32 {$/;"	P	implementation:NaiveDate
ordinal0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn ordinal0(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
orig_commit_id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    pub fn orig_commit_id(&self) -> Oid {$/;"	P	implementation:BlameHunk
orig_head_id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    pub fn orig_head_id(&self) -> Option<Oid> {$/;"	P	implementation:Rebase
orig_head_name	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    pub fn orig_head_name(&self) -> Option<&str> {$/;"	P	implementation:Rebase
orig_signature	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    pub fn orig_signature(&self) -> Signature<'_> {$/;"	P	implementation:BlameHunk
orig_start_line	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    pub fn orig_start_line(&self) -> usize {$/;"	P	implementation:BlameHunk
origin	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn origin(&self) -> char {$/;"	P	implementation:DiffLine
origin_url	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    origin_url: Option<CString>,$/;"	m	struct:RepositoryInitOptions
origin_url	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn origin_url(&mut self, url: &str) -> &mut RepositoryInitOptions {$/;"	P	implementation:RepositoryInitOptions
our	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub our: Option<IndexEntry>,$/;"	m	struct:IndexConflict
our_label	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    our_label: Option<CString>,$/;"	m	struct:CheckoutBuilder
our_label	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn our_label(&mut self, label: &str) -> &mut CheckoutBuilder<'cb> {$/;"	P	implementation:CheckoutBuilder
overflowing_add_signed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn overflowing_add_signed(&self, mut rhs: OldDuration) -> (NaiveTime, i64) {$/;"	P	implementation:NaiveTime
overflowing_sub_signed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn overflowing_sub_signed(&self, rhs: OldDuration) -> (NaiveTime, i64) {$/;"	P	implementation:NaiveTime
overridden_parents	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn overridden_parents() {$/;"	f	module:test
overridden_parents_in_scope	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn overridden_parents_in_scope() {$/;"	f	module:test
overwrite_ignored	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn overwrite_ignored(&mut self, overwrite: bool) -> &mut CheckoutBuilder<'cb> {$/;"	P	implementation:CheckoutBuilder
owned	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    owned: bool,$/;"	m	struct:ConfigEntry
owned	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/signature.rs	/^    owned: bool,$/;"	m	struct:Signature
owned	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^    owned: bool,$/;"	m	struct:Transport
owned	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    owned: bool,$/;"	m	struct:TreeEntry
owner	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tee.rs	/^    owner: bool,$/;"	m	struct:TeeBuffer
pack_header	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    fn pack_header(len: u8) -> Vec<u8> {$/;"	f	module:tests
pack_progress	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^    pack_progress: Option<Box<PackProgress<'a>>>,$/;"	m	struct:RemoteCallbacks
pack_progress	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^    pub fn pack_progress<F>(&mut self, cb: F) -> &mut RemoteCallbacks<'a>$/;"	P	implementation:RemoteCallbacks
pack_progress_cb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^extern "C" fn pack_progress_cb($/;"	f
packbuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod packbuilder;$/;"	n
packbuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn packbuilder(&self) -> Result<PackBuilder<'_>, Error> {$/;"	P	implementation:Repository
packbuilder_parallelism	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn packbuilder_parallelism(&mut self, parallel: u32) -> &mut Self {$/;"	P	implementation:PushOptions
packwriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    fn packwriter() {$/;"	f	module:tests
packwriter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    pub fn packwriter(&self) -> Result<OdbPackwriter<'_>, Error> {$/;"	P	implementation:Odb
packwriter_progress	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    fn packwriter_progress() {$/;"	f	module:tests
pad_tail	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod pad_tail;$/;"	n
pad_using	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn pad_using<F>(self, min: usize, f: F) -> PadUsing<Self, F>$/;"	P	interface:Itertools
pad_using	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/pad_tail.rs	/^pub fn pad_using<I, F>(iter: I, min: usize, filler: F) -> PadUsing<I, F>$/;"	f
paint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn paint(&self, d: impl fmt::Display) -> impl fmt::Display {$/;"	P	implementation:Style
panic	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod panic;$/;"	n
panicked	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/panic.rs	/^pub fn panicked() -> bool {$/;"	f
parent	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    pub fn parent(&self, i: usize) -> Result<Commit<'repo>, Error> {$/;"	P	implementation:Commit
parent	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    parent: &'a GroupBy<K, I, F>,$/;"	m	struct:Group
parent	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    parent: &'a GroupBy<K, I, F>,$/;"	m	struct:Groups
parent	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    parent: &'a IntoChunks<I>,$/;"	m	struct:Chunk
parent	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    parent: &'a IntoChunks<I>,$/;"	m	struct:Chunks
parent	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    fn parent(&self) -> Option<&Id>;$/;"	P	interface:SpanData
parent	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    pub fn parent(&self) -> Option<Self> {$/;"	f
parent	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn parent(&self) -> Option<&Id> {$/;"	P	implementation:Data
parent	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    parent: Option<Id>,$/;"	m	struct:DataInner
parent_count	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    pub fn parent_count(&self) -> usize {$/;"	P	implementation:Commit
parent_id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    pub fn parent_id(&self, i: usize) -> Result<Oid, Error> {$/;"	P	implementation:Commit
parent_id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    pub fn parent_id(&self) -> Option<&Id> {$/;"	f
parent_ids	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    pub fn parent_ids(&self) -> ParentIds<'_> {$/;"	P	implementation:Commit
parents	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    pub fn parents<'a>(&'a self) -> Parents<'a, 'repo> {$/;"	P	implementation:Commit
parents	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    pub fn parents(&self) -> Parents<'a, R> {$/;"	f
parking_lot_impl	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/sync.rs	/^mod parking_lot_impl {$/;"	n
parse	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^mod parse;$/;"	n
parse	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^pub fn parse<'a, I, B>(parsed: &mut Parsed, s: &str, items: I) -> ParseResult<()>$/;"	f
parse	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^        macro_rules! parse {$/;"	M	function:tests::test_parsed_to_datetime
parse	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^        macro_rules! parse {$/;"	M	function:tests::test_parsed_to_datetime_with_timezone
parse	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^        macro_rules! parse {$/;"	M	function:tests::test_parsed_to_naive_date
parse	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^        macro_rules! parse {$/;"	M	function:tests::test_parsed_to_naive_datetime_with_offset
parse	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^        macro_rules! parse {$/;"	M	function:tests::test_parsed_to_naive_time
parse	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^        fn parse() {$/;"	f	module:tests::fromstr
parse	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    fn parse() {$/;"	f	module:tests
parse	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^mod parse;$/;"	n
parse_all	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    fn parse_all(s: &str, items: &[Item]) -> ParseResult<Parsed> {$/;"	f	function:test_parse
parse_and_collect	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^    fn parse_and_collect<'a>(s: &'a str) -> Vec<Item<'a>> {$/;"	f	function:test_strftime_items
parse_bool	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn parse_bool<S: IntoCString>(s: S) -> Result<bool, Error> {$/;"	P	implementation:Config
parse_char	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/parse.rs	/^fn parse_char(s: &mut &str, c: char) -> Result<(), ParseError> {$/;"	f
parse_directives	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn parse_directives(dirs: impl AsRef<str>) -> Vec<Directive> {$/;"	f	module:test
parse_directives_empty_level	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn parse_directives_empty_level() {$/;"	f	module:test
parse_directives_global	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn parse_directives_global() {$/;"	f	module:test
parse_directives_invalid_crate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn parse_directives_invalid_crate() {$/;"	f	module:test
parse_directives_invalid_level	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn parse_directives_invalid_level() {$/;"	f	module:test
parse_directives_ralith	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn parse_directives_ralith() {$/;"	f	module:test
parse_directives_string_level	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn parse_directives_string_level() {$/;"	f	module:test
parse_directives_valid	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn parse_directives_valid() {$/;"	f	module:test
parse_directives_valid_with_spans	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn parse_directives_valid_with_spans() {$/;"	f	module:test
parse_directives_with_dash_in_target_name	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn parse_directives_with_dash_in_target_name() {$/;"	f	module:test
parse_from_rfc2822	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn parse_from_rfc2822(s: &str) -> ParseResult<DateTime<FixedOffset>> {$/;"	P	implementation:DateTime
parse_from_rfc3339	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn parse_from_rfc3339(s: &str) -> ParseResult<DateTime<FixedOffset>> {$/;"	P	implementation:DateTime
parse_from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn parse_from_str(s: &str, fmt: &str) -> ParseResult<DateTime<FixedOffset>> {$/;"	P	implementation:DateTime
parse_from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn parse_from_str(s: &str, fmt: &str) -> ParseResult<NaiveDate> {$/;"	P	implementation:NaiveDate
parse_from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn parse_from_str(s: &str, fmt: &str) -> ParseResult<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
parse_from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn parse_from_str(s: &str, fmt: &str) -> ParseResult<NaiveTime> {$/;"	P	implementation:NaiveTime
parse_i32	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn parse_i32<S: IntoCString>(s: S) -> Result<i32, Error> {$/;"	P	implementation:Config
parse_i64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn parse_i64<S: IntoCString>(s: S) -> Result<i64, Error> {$/;"	P	implementation:Config
parse_internal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^fn parse_internal<'a, 'b, I, B>($/;"	f
parse_level_directives	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn parse_level_directives() {$/;"	f	module:test
parse_numeric_level_directives	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn parse_numeric_level_directives() {$/;"	f	module:test
parse_output	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    fn parse_output(&self, output: Vec<u8>) -> (Option<String>, Option<String>) {$/;"	f
parse_rfc2822	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^fn parse_rfc2822<'a>(parsed: &mut Parsed, mut s: &'a str) -> ParseResult<(&'a str, ())> {$/;"	f
parse_rfc3339	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^fn parse_rfc3339<'a>(parsed: &mut Parsed, mut s: &'a str) -> ParseResult<(&'a str, ())> {$/;"	f
parse_rfc850	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^fn parse_rfc850() {$/;"	f
parse_type	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/display.rs	/^fn parse_type(fmt: &mut fmt::Formatter, ch: char, tm: &Tm) -> fmt::Result {$/;"	f
parse_type	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/parse.rs	/^fn parse_type(s: &mut &str, ch: char, tm: &mut Tm) -> Result<(), ParseError> {$/;"	f
parse_uppercase_level_directives	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn parse_uppercase_level_directives() {$/;"	f	module:test
parsed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^mod parsed;$/;"	n
partial_cmp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn partial_cmp(&self, other: &Date<Tz>) -> Option<Ordering> {$/;"	P	implementation:Date
partial_cmp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn partial_cmp(&self, other: &DateTime<Tz2>) -> Option<Ordering> {$/;"	P	implementation:DateTime
partial_cmp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^    fn partial_cmp(&self, other: &Oid) -> Option<Ordering> {$/;"	P	implementation:Oid
partial_cmp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    fn partial_cmp(&self, other: &Reference<'repo>) -> Option<Ordering> {$/;"	P	implementation:Reference
partial_cmp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^    fn partial_cmp(&self, other: &IndexTime) -> Option<Ordering> {$/;"	P	implementation:IndexTime
partial_cmp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^    fn partial_cmp(&self, other: &Time) -> Option<Ordering> {$/;"	P	implementation:Time
partial_cmp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    fn partial_cmp(&self, other: &TreeEntry<'a>) -> Option<Ordering> {$/;"	P	implementation:TreeEntry
partial_cmp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn partial_cmp(&self, other: &Tm) -> Option<Ordering> {$/;"	P	implementation:Tm
partial_cmp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn partial_cmp(&self, other: &SteadyTime) -> Option<Ordering> {$/;"	P	implementation:inner::unix::SteadyTime
partial_cmp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn partial_cmp(&self, other: &Directive) -> Option<Ordering> {$/;"	P	implementation:Directive
partial_cmp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn partial_cmp(&self, other: &Self) -> Option<Ordering> {$/;"	P	implementation:StaticDirective
partial_cmp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    fn partial_cmp(&self, other: &Self) -> Option<Ordering> {$/;"	P	implementation:Match
partial_cmp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    fn partial_cmp(&self, other: &Self) -> Option<Ordering> {$/;"	P	implementation:MatchPattern
partition	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^pub fn partition<'a, A: 'a, I, F>(iter: I, mut pred: F) -> usize$/;"	f
partition_map	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn partition_map<A, B, F, L, R>(self, mut predicate: F) -> (A, B)$/;"	P	interface:Itertools
patch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod patch;$/;"	n
path	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    pub fn path(&self) -> Option<&Path> {$/;"	P	implementation:BlameHunk
path	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^    fn path() {$/;"	f	module:tests
path	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn path<T: IntoCString>(&mut self, path: T) -> &mut CheckoutBuilder<'cb> {$/;"	P	implementation:CheckoutBuilder
path	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn path(&self) -> Option<&'a Path> {$/;"	P	implementation:DiffFile
path	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub fn path(&self) -> Option<&Path> {$/;"	P	implementation:Index
path	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub path: Vec<u8>,$/;"	m	struct:IndexEntry
path	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn path(&self) -> &Path {$/;"	P	implementation:Repository
path	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub fn path(&self) -> Option<&str> {$/;"	P	implementation:StatusEntry
path	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    pub fn path(&self) -> &Path {$/;"	P	implementation:Submodule
path	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    pub fn path(&self) -> &Path {$/;"	P	implementation:Worktree
path2url	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/test.rs	/^pub fn path2url(path: &Path) -> String {$/;"	f
path_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn path_bytes(&self) -> Option<&'a [u8]> {$/;"	P	implementation:DiffFile
path_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub fn path_bytes(&self) -> &[u8] {$/;"	P	implementation:StatusEntry
path_ptrs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    path_ptrs: Vec<*const c_char>,$/;"	m	struct:CheckoutBuilder
path_to_repo_path	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^pub fn path_to_repo_path(path: &Path) -> Result<CString, Error> {$/;"	f
path_to_repo_path_no_absolute	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^    fn path_to_repo_path_no_absolute() {$/;"	f	module:tests
path_to_repo_path_no_weird	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^    fn path_to_repo_path_no_weird() {$/;"	f	module:tests
path_to_repo_path_translate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^    fn path_to_repo_path_translate() {$/;"	f	module:tests
paths	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    paths: Vec<CString>,$/;"	m	struct:CheckoutBuilder
paths	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    paths: Vec<CString>,$/;"	m	struct:TreeUpdateBuilder
pathspec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pathspec: Vec<CString>,$/;"	m	struct:DiffOptions
pathspec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn pathspec<T: IntoCString>(&mut self, pathspec: T) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
pathspec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod pathspec;$/;"	n
pathspec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pathspec: Vec<CString>,$/;"	m	struct:StatusOptions
pathspec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub fn pathspec<T: IntoCString>(&mut self, pathspec: T) -> &mut StatusOptions {$/;"	P	implementation:StatusOptions
pathspec_ptrs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pathspec_ptrs: Vec<*const c_char>,$/;"	m	struct:DiffOptions
patience	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn patience(&mut self, patience: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
patience	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    pub fn patience(&mut self, patience: bool) -> &mut MergeOptions {$/;"	P	implementation:MergeOptions
pattern	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^    pattern: CString,$/;"	m	struct:DescribeOptions
pattern	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^    pub fn pattern(&mut self, pattern: &str) -> &mut Self {$/;"	P	implementation:DescribeOptions
pattern	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    pattern: Arc<str>,$/;"	m	struct:MatchPattern
pb_parallelism	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pb_parallelism: u32,$/;"	m	struct:PushOptions
peek	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs	/^    peek: Option<I::Item>,$/;"	m	struct:IntersperseWith
peek	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs	/^    pub fn peek(&mut self) -> Option<&I::Item> {$/;"	P	implementation:MultiPeek
peek	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs	/^    pub fn peek(&mut self) -> Option<&I::Item> {$/;"	f
peek_nth	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod peek_nth;$/;"	n
peek_nth	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs	/^    pub fn peek_nth(&mut self, n: usize) -> Option<&I::Item> {$/;"	f
peek_nth	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs	/^pub fn peek_nth<I>(iterable: I) -> PeekNth<I::IntoIter>$/;"	f
peekable	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs	/^    peekable: Peekable<Fuse<I>>,$/;"	m	struct:WithPosition
peeking_next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs	/^    fn peeking_next<F>(&mut self, accept: F) -> Option<Self::Item>$/;"	f
peeking_next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs	/^    fn peeking_next<F>(&mut self, accept: F) -> Option<Self::Item>$/;"	f
peeking_next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs	/^    fn peeking_next<F>(&mut self, accept: F) -> Option<Self::Item>$/;"	P	interface:PeekingNext
peeking_next	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs	/^    fn peeking_next<F>(&mut self, accept: F) -> Option<Self::Item>$/;"	f
peeking_next_by_clone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs	/^macro_rules! peeking_next_by_clone {$/;"	M
peeking_take_while	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn peeking_take_while<F>(&mut self, accept: F) -> PeekingTakeWhile<Self, F>$/;"	P	interface:Itertools
peeking_take_while	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod peeking_take_while;$/;"	n
peeking_take_while	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs	/^pub fn peeking_take_while<I, F>(iter: &mut I, f: F) -> PeekingTakeWhile<I, F>$/;"	f
peel	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    pub fn peel(&self, kind: ObjectType) -> Result<Object<'repo>, Error> {$/;"	P	implementation:Object
peel	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    pub fn peel(&self, kind: ObjectType) -> Result<Object<'repo>, Error> {$/;"	P	implementation:Reference
peel	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^    pub fn peel(&self) -> Result<Object<'repo>, Error> {$/;"	P	implementation:Tag
peel_to_blob	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    pub fn peel_to_blob(&self) -> Result<Blob<'repo>, Error> {$/;"	P	implementation:Object
peel_to_blob	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    pub fn peel_to_blob(&self) -> Result<Blob<'repo>, Error> {$/;"	P	implementation:Reference
peel_to_commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    pub fn peel_to_commit(&self) -> Result<Commit<'repo>, Error> {$/;"	P	implementation:Object
peel_to_commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    pub fn peel_to_commit(&self) -> Result<Commit<'repo>, Error> {$/;"	P	implementation:Reference
peel_to_tag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    pub fn peel_to_tag(&self) -> Result<Tag<'repo>, Error> {$/;"	P	implementation:Object
peel_to_tag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    pub fn peel_to_tag(&self) -> Result<Tag<'repo>, Error> {$/;"	P	implementation:Reference
peel_to_tree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    pub fn peel_to_tree(&self) -> Result<Tree<'repo>, Error> {$/;"	P	implementation:Object
peel_to_tree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    pub fn peel_to_tree(&self) -> Result<Tree<'repo>, Error> {$/;"	P	implementation:Reference
permutations	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn permutations(self, k: usize) -> Permutations<Self>$/;"	P	interface:Itertools
permutations	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod permutations;$/;"	n
permutations	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs	/^pub fn permutations<I: Iterator>(iter: I, k: usize) -> Permutations<I> {$/;"	f
persisted	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    fn persisted() {$/;"	f	module:tests
phantom_data	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^    phantom_data: PhantomData<T>$/;"	m	struct:CircularTupleWindows
phase	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    phase: bool, \/\/ false ==> it0, true ==> it1$/;"	m	struct:InterleaveShortest
poisoned	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^    fn poisoned() -> Self {$/;"	P	implementation:Error
poisoned	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/thread.rs	/^    fn poisoned() -> Self {$/;"	P	implementation:Id
poll	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/instrument.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:Instrumented
pool	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs	/^    pool: LazyBuffer<I>,$/;"	m	struct:Combinations
pool	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations_with_replacement.rs	/^    pool: LazyBuffer<I>,$/;"	m	struct:CombinationsWithReplacement
pop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/stack.rs	/^    pub(crate) fn pop(&mut self, expected_id: &Id) -> bool {$/;"	P	implementation:SpanStack
pop_first_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/stack.rs	/^    fn pop_first_span() {$/;"	f	module:tests
pop_last_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/stack.rs	/^    fn pop_last_span() {$/;"	f	module:tests
pos	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/pad_tail.rs	/^    pos: usize,$/;"	m	struct:PadUsing
pos	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/powerset.rs	/^    pos: usize,$/;"	m	struct:Powerset
position_max	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn position_max(self) -> Option<usize>$/;"	P	interface:Itertools
position_max_by	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn position_max_by<F>(self, mut compare: F) -> Option<usize>$/;"	P	interface:Itertools
position_max_by_key	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn position_max_by_key<K, F>(self, mut key: F) -> Option<usize>$/;"	P	interface:Itertools
position_min	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn position_min(self) -> Option<usize>$/;"	P	interface:Itertools
position_min_by	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn position_min_by<F>(self, mut compare: F) -> Option<usize>$/;"	P	interface:Itertools
position_min_by_key	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn position_min_by_key<K, F>(self, mut key: F) -> Option<usize>$/;"	P	interface:Itertools
position_minmax	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn position_minmax(self) -> MinMaxResult<usize>$/;"	P	interface:Itertools
position_minmax_by	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn position_minmax_by<F>(self, mut compare: F) -> MinMaxResult<usize>$/;"	P	interface:Itertools
position_minmax_by_key	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn position_minmax_by_key<K, F>(self, mut key: F) -> MinMaxResult<usize>$/;"	P	interface:Itertools
positions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub fn positions<I, F>(iter: I, f: F) -> Positions<I, F>$/;"	f
positions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn positions<P>(self, predicate: P) -> Positions<Self, P>$/;"	P	interface:Itertools
pow_scalar_base	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/size_hint.rs	/^pub fn pow_scalar_base(base: usize, exp: SizeHint) -> SizeHint {$/;"	f
powerset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn powerset(self) -> Powerset<Self>$/;"	P	interface:Itertools
powerset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod powerset;$/;"	n
powerset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/powerset.rs	/^pub fn powerset<I>(src: I) -> Powerset<I>$/;"	f
precise_time_ns	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn precise_time_ns() -> u64 {$/;"	f
precise_time_s	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn precise_time_s() -> f64 {$/;"	f
pred	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn pred(&self) -> Date<Tz> {$/;"	P	implementation:Date
pred	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn pred(&self) -> Month {$/;"	P	implementation:Month
pred	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn pred(&self) -> Weekday {$/;"	P	implementation:Weekday
pred	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn pred(&self) -> NaiveDate {$/;"	P	implementation:NaiveDate
pred	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn pred(&self) -> Of {$/;"	P	implementation:Of
pred_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn pred_opt(&self) -> Option<Date<Tz>> {$/;"	P	implementation:Date
pred_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn pred_opt(&self) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
prefill	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lazy_buffer.rs	/^    pub fn prefill(&mut self, len: usize) {$/;"	f
prelude	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub mod prelude {$/;"	n
prelude	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/lib.rs	/^pub mod prelude;$/;"	n
prettify	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/message.rs	/^    fn prettify() {$/;"	f	module:tests
pretty	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn pretty(self) -> Layer<S, format::Pretty, format::Format<format::Pretty, T>, W> {$/;"	f
pretty	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    pub fn pretty(self) -> Format<Pretty, T> {$/;"	P	implementation:Format
pretty	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^mod pretty;$/;"	n
pretty	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn pretty($/;"	f
print	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn print<F>(&self, format: DiffFormat, mut cb: F) -> Result<(), Error>$/;"	P	implementation:Diff
print	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/patch.rs	/^    pub fn print(&mut self, mut line_cb: &mut LineCb<'_>) -> Result<(), Error> {$/;"	P	implementation:Patch
print_cb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^pub extern "C" fn print_cb($/;"	f
private	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^pub(crate) mod private {$/;"	n
private	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/lib.rs	/^pub mod private {$/;"	n
process_results	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs	/^pub fn process_results<I, F, T, E, R>(iterable: I, processor: F) -> Result<R, E>$/;"	f
process_results_impl	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod process_results_impl;$/;"	n
product	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs	/^    pub fn product(self) -> HashMap<K, V>$/;"	f
product1	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn product1<P>(mut self) -> Option<P>$/;"	P	interface:Itertools
progress	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    progress: Option<Box<Progress<'cb>>>,$/;"	m	struct:CheckoutBuilder
progress	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn progress<F>(&mut self, cb: F) -> &mut CheckoutBuilder<'cb>$/;"	P	implementation:CheckoutBuilder
progress	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    progress: MaybeUninit<raw::git_indexer_progress>,$/;"	m	struct:OdbPackwriter
progress	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    pub fn progress<F>(&mut self, cb: F) -> &mut OdbPackwriter<'repo>$/;"	P	implementation:OdbPackwriter
progress	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    progress: Option<Box<Box<ProgressCb<'repo>>>>,$/;"	m	struct:PackBuilder
progress	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^    progress: Option<Box<IndexerProgress<'a>>>,$/;"	m	struct:RemoteCallbacks
progress	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/stash.rs	/^    progress: Option<Box<StashApplyProgressCb<'cb>>>,$/;"	m	struct:StashApplyOptions
progress_c	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^extern "C" fn progress_c($/;"	f
progress_callback	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    fn progress_callback() {$/;"	f	module:tests
progress_cb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^extern "C" fn progress_cb($/;"	f
progress_cb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/stash.rs	/^    pub fn progress_cb<C>(&mut self, callback: C) -> &mut StashApplyOptions<'cb>$/;"	P	implementation:StashApplyOptions
progress_payload_ptr	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    progress_payload_ptr: *mut OdbPackwriterCb<'repo>,$/;"	m	struct:OdbPackwriter
protocol	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    protocol: Option<String>,$/;"	m	struct:CredentialHelper
proxy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    proxy: Option<ProxyOptions<'cb>>,$/;"	m	struct:FetchOptions
proxy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    proxy: Option<ProxyOptions<'cb>>,$/;"	m	struct:PushOptions
proxy_kind	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/proxy_options.rs	/^    proxy_kind: raw::git_proxy_t,$/;"	m	struct:ProxyOptions
proxy_options	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod proxy_options;$/;"	n
proxy_options	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn proxy_options(&mut self, opts: ProxyOptions<'cb>) -> &mut Self {$/;"	P	implementation:FetchOptions
proxy_options	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn proxy_options(&mut self, opts: ProxyOptions<'cb>) -> &mut Self {$/;"	P	implementation:PushOptions
prune	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    prune: FetchPrune,$/;"	m	struct:FetchOptions
prune	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn prune(&mut self, prune: FetchPrune) -> &mut Self {$/;"	P	implementation:FetchOptions
prune	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    pub fn prune(&self, opts: Option<&mut WorktreePruneOptions>) -> Result<(), Error> {$/;"	P	implementation:Worktree
ptr	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/lib.rs	/^mod ptr;$/;"	n
ptr	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^    pub ptr: NonNull<T>,$/;"	m	struct:Mut
ptr	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^    pub ptr: NonNull<T>,$/;"	m	struct:Own
ptr	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^    pub ptr: NonNull<T>,$/;"	m	struct:Ref
ptrs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    ptrs: Vec<*const c_char>,$/;"	m	struct:StatusOptions
purple	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn purple(self) -> ColoredString$/;"	P	interface:Colorize
push	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn push<Str: AsRef<str> + crate::IntoCString + Clone>($/;"	P	implementation:Remote
push	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revwalk.rs	/^    pub fn push(&mut self, oid: Oid) -> Result<(), Error> {$/;"	P	implementation:Revwalk
push	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/stack.rs	/^    pub(crate) fn push(&mut self, id: Id) -> bool {$/;"	P	implementation:SpanStack
push_glob	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revwalk.rs	/^    pub fn push_glob(&mut self, glob: &str) -> Result<(), Error> {$/;"	P	implementation:Revwalk
push_head	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revwalk.rs	/^    pub fn push_head(&mut self) -> Result<(), Error> {$/;"	P	implementation:Revwalk
push_next_group	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    fn push_next_group(&mut self, group: Vec<I::Item>) {$/;"	f
push_progress	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^    push_progress: Option<Box<PushTransferProgress<'a>>>,$/;"	m	struct:RemoteCallbacks
push_range	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revwalk.rs	/^    pub fn push_range(&mut self, range: &str) -> Result<(), Error> {$/;"	P	implementation:Revwalk
push_ref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revwalk.rs	/^    pub fn push_ref(&mut self, reference: &str) -> Result<(), Error> {$/;"	P	implementation:Revwalk
push_refspecs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn push_refspecs(&self) -> Result<StringArray, Error> {$/;"	P	implementation:Remote
push_transfer_progress	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^    pub fn push_transfer_progress<F>(&mut self, cb: F) -> &mut RemoteCallbacks<'a>$/;"	P	implementation:RemoteCallbacks
push_transfer_progress_cb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^extern "C" fn push_transfer_progress_cb($/;"	f
push_update_reference	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^    pub fn push_update_reference<F>(&mut self, cb: F) -> &mut RemoteCallbacks<'a>$/;"	P	implementation:RemoteCallbacks
push_update_reference	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^    push_update_reference: Option<Box<PushUpdateReference<'a>>>,$/;"	m	struct:RemoteCallbacks
push_update_reference_cb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^extern "C" fn push_update_reference_cb($/;"	f
pushurl	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn pushurl(&self) -> Option<&str> {$/;"	P	implementation:Remote
pushurl_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn pushurl_bytes(&self) -> Option<&[u8]> {$/;"	P	implementation:Remote
put_back	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    pub fn put_back(&mut self, x: I::Item) {$/;"	f
put_back	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub fn put_back<I>(iterable: I) -> PutBack<I::IntoIter>$/;"	f
put_back	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs	/^    pub fn put_back(&mut self, x: I::Item) {$/;"	P	implementation:PutBackN
put_back_n	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs	/^pub fn put_back_n<I>(iterable: I) -> PutBackN<I::IntoIter>$/;"	f
put_back_n_impl	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod put_back_n_impl;$/;"	n
quiet	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    pub fn quiet(&mut self, quiet: bool) -> &mut RebaseOptions<'cb> {$/;"	P	implementation:RebaseOptions
range	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    range: Range<usize>,$/;"	m	struct:BlameIter
range	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    range: Range<usize>,$/;"	m	struct:ParentIds
range	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    range: Range<usize>,$/;"	m	struct:Parents
range	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    range: Range<usize>,$/;"	m	struct:Deltas
range	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    range: Range<usize>,$/;"	m	struct:IndexEntries
range	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    range: Range<usize>,$/;"	m	struct:PathspecDiffEntries
range	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    range: Range<usize>,$/;"	m	struct:PathspecEntries
range	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    range: Range<usize>,$/;"	m	struct:PathspecFailedEntries
range	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    range: Range<usize>,$/;"	m	struct:ReflogIter
range	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    range: Range<usize>,$/;"	m	struct:Refspecs
range	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    range: Range<usize>,$/;"	m	struct:StatusIter
range	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^    range: Range<usize>,$/;"	m	struct:Iter
range	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^    range: Range<usize>,$/;"	m	struct:IterBytes
range	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    range: Range<usize>,$/;"	m	struct:TreeIter
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/apply.rs	/^    fn raw(&self) -> raw::git_apply_location_t {$/;"	P	implementation:ApplyLocation
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/apply.rs	/^    pub unsafe fn raw(&mut self) -> *const raw::git_apply_options {$/;"	P	implementation:ApplyOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/apply.rs	/^    raw: raw::git_apply_options,$/;"	m	struct:ApplyOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    fn raw(&self) -> *mut raw::git_blame {$/;"	P	implementation:Blame
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    fn raw(&self) -> *mut raw::git_blame_hunk {$/;"	P	implementation:BlameHunk
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    fn raw(&self) -> *mut raw::git_blame_options {$/;"	P	implementation:BlameOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    raw: *mut raw::git_blame,$/;"	m	struct:Blame
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    raw: *mut raw::git_blame_hunk,$/;"	m	struct:BlameHunk
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    raw: raw::git_blame_options,$/;"	m	struct:BlameOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^    fn raw(&self) -> *mut raw::git_blob {$/;"	P	implementation:Blob
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^    fn raw(&self) -> *mut raw::git_writestream {$/;"	P	implementation:BlobWriter
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^    raw: *mut raw::git_blob,$/;"	m	struct:Blob
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^    raw: *mut raw::git_writestream,$/;"	m	struct:BlobWriter
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/branch.rs	/^    raw: *mut raw::git_branch_iterator,$/;"	m	struct:Branches
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/buf.rs	/^    fn raw(&self) -> *mut raw::git_buf {$/;"	P	implementation:Buf
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/buf.rs	/^    raw: raw::git_buf,$/;"	m	struct:Buf
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cert.rs	/^    fn raw(&self) -> *mut raw::git_cert {$/;"	P	implementation:Cert
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cert.rs	/^    raw: *mut raw::git_cert,$/;"	m	struct:Cert
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cert.rs	/^    raw: *mut raw::git_cert_hostkey,$/;"	m	struct:CertHostkey
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cert.rs	/^    raw: *mut raw::git_cert_x509,$/;"	m	struct:CertX509
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cherrypick.rs	/^    pub fn raw(&mut self) -> raw::git_cherrypick_options {$/;"	P	implementation:CherrypickOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    fn raw(&self) -> *mut raw::git_commit {$/;"	P	implementation:Commit
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    pub fn raw(&self) -> *mut raw::git_commit {$/;"	P	implementation:Commit
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    raw: *mut raw::git_commit,$/;"	m	struct:Commit
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    fn raw(&self) -> *mut raw::git_config {$/;"	P	implementation:Config
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    fn raw(&self) -> *mut raw::git_config_entry {$/;"	P	implementation:ConfigEntry
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    fn raw(&self) -> *mut raw::git_config_iterator {$/;"	P	implementation:ConfigEntries
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    raw: *mut raw::git_config,$/;"	m	struct:Config
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    raw: *mut raw::git_config_entry,$/;"	m	struct:ConfigEntry
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    raw: *mut raw::git_config_iterator,$/;"	m	struct:ConfigEntries
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    fn raw(&self) -> *mut raw::git_cred {$/;"	P	implementation:Cred
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    raw: *mut raw::git_cred,$/;"	m	struct:Cred
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^    fn raw(&self) -> *mut raw::git_describe_options {$/;"	P	implementation:DescribeOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^    fn raw(&self) -> *mut raw::git_describe_result {$/;"	P	implementation:Describe
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^    raw: *mut raw::git_describe_result,$/;"	m	struct:Describe
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^    raw: raw::git_describe_format_options,$/;"	m	struct:DescribeFormatOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^    raw: raw::git_describe_options,$/;"	m	struct:DescribeOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn raw(&self) -> *const raw::git_diff_binary {$/;"	P	implementation:DiffBinary
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn raw(&self) -> *const raw::git_diff_binary_file {$/;"	P	implementation:DiffBinaryFile
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn raw(&self) -> *const raw::git_diff_file {$/;"	P	implementation:DiffFile
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn raw(&self) -> *const raw::git_diff_hunk {$/;"	P	implementation:DiffHunk
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn raw(&self) -> *const raw::git_diff_line {$/;"	P	implementation:DiffLine
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn raw(&self) -> *mut raw::git_diff {$/;"	P	implementation:Diff
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn raw(&self) -> *mut raw::git_diff_delta {$/;"	P	implementation:DiffDelta
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn raw(&self) -> *mut raw::git_diff_stats {$/;"	P	implementation:DiffStats
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn raw(&self) -> raw::git_diff_binary_t {$/;"	P	implementation:DiffBinaryKind
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub unsafe fn raw(&mut self) -> *const raw::git_diff_options {$/;"	P	implementation:DiffOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    raw: *const raw::git_diff_binary,$/;"	m	struct:DiffBinary
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    raw: *const raw::git_diff_binary_file,$/;"	m	struct:DiffBinaryFile
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    raw: *const raw::git_diff_file,$/;"	m	struct:DiffFile
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    raw: *const raw::git_diff_hunk,$/;"	m	struct:DiffHunk
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    raw: *const raw::git_diff_line,$/;"	m	struct:DiffLine
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    raw: *mut raw::git_diff,$/;"	m	struct:Diff
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    raw: *mut raw::git_diff_delta,$/;"	m	struct:DiffDelta
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    raw: *mut raw::git_diff_stats,$/;"	m	struct:DiffStats
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    raw: raw::git_diff_find_options,$/;"	m	struct:DiffFindOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    raw: raw::git_diff_format_email_options,$/;"	m	struct:DiffFormatEmailOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    raw: raw::git_diff_options,$/;"	m	struct:DiffOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    fn raw(&self) -> *mut raw::git_index {$/;"	P	implementation:Index
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    fn raw(&self) -> *mut raw::git_index_conflict_iterator {$/;"	P	implementation:IndexConflicts
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    fn raw(&self) -> raw::git_index_entry {$/;"	P	implementation:IndexEntry
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    raw: *mut raw::git_index,$/;"	m	struct:Index
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/indexer.rs	/^    fn raw(&self) -> *const raw::git_indexer_progress {$/;"	P	implementation:Progress
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    pub fn raw(&self) -> raw::git_object_t {$/;"	P	implementation:ObjectType
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/mempack.rs	/^    fn raw(&self) -> *mut raw::git_odb_backend {$/;"	P	implementation:Mempack
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/mempack.rs	/^    raw: *mut raw::git_odb_backend,$/;"	m	struct:Mempack
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    fn raw(&self) -> *mut raw::git_annotated_commit {$/;"	P	implementation:AnnotatedCommit
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    pub unsafe fn raw(&self) -> *const raw::git_merge_options {$/;"	P	implementation:MergeOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    raw: *mut raw::git_annotated_commit,$/;"	m	struct:AnnotatedCommit
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    raw: raw::git_merge_options,$/;"	m	struct:MergeOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^    fn raw(&self) -> *mut raw::git_note {$/;"	P	implementation:Note
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^    fn raw(&self) -> *mut raw::git_note_iterator {$/;"	P	implementation:Notes
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^    raw: *mut raw::git_note,$/;"	m	struct:Note
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^    raw: *mut raw::git_note_iterator,$/;"	m	struct:Notes
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    fn raw(&self) -> *mut raw::git_object {$/;"	P	implementation:Object
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    raw: *mut raw::git_object,$/;"	m	struct:Object
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    fn raw(&self) -> *mut raw::git_odb {$/;"	P	implementation:Odb
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    fn raw(&self) -> *mut raw::git_odb_object {$/;"	P	implementation:OdbObject
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    fn raw(&self) -> *mut raw::git_odb_stream {$/;"	P	implementation:OdbReader
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    fn raw(&self) -> *mut raw::git_odb_stream {$/;"	P	implementation:OdbWriter
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    raw: *mut raw::git_odb,$/;"	m	struct:Odb
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    raw: *mut raw::git_odb_object,$/;"	m	struct:OdbObject
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    raw: *mut raw::git_odb_stream,$/;"	m	struct:OdbReader
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    raw: *mut raw::git_odb_stream,$/;"	m	struct:OdbWriter
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    raw: *mut raw::git_odb_writepack,$/;"	m	struct:OdbPackwriter
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^    fn raw(&self) -> *const raw::git_oid {$/;"	P	implementation:Oid
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^    raw: raw::git_oid,$/;"	m	struct:Oid
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid_array.rs	/^    fn raw(&self) -> raw::git_oidarray {$/;"	P	implementation:OidArray
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid_array.rs	/^    raw: raw::git_oidarray,$/;"	m	struct:OidArray
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    fn raw(&self) -> *mut raw::git_packbuilder {$/;"	P	implementation:PackBuilder
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    fn raw(&self) -> raw::git_packbuilder_stage_t {$/;"	P	implementation:PackBuilderStage
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    raw: *mut raw::git_packbuilder,$/;"	m	struct:PackBuilder
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/patch.rs	/^    fn raw(&self) -> Self::Raw {$/;"	P	implementation:Patch
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/patch.rs	/^    raw: *mut raw::git_patch,$/;"	m	struct:Patch
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    fn raw(&self) -> *mut raw::git_pathspec {$/;"	P	implementation:Pathspec
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    fn raw(&self) -> *mut raw::git_pathspec_match_list {$/;"	P	implementation:PathspecMatchList
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    raw: *mut raw::git_pathspec,$/;"	m	struct:Pathspec
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    raw: *mut raw::git_pathspec_match_list,$/;"	m	struct:PathspecMatchList
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/proxy_options.rs	/^    fn raw(&self) -> raw::git_proxy_options {$/;"	P	implementation:ProxyOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    fn raw(&self) -> *const raw::git_rebase_operation {$/;"	P	implementation:RebaseOperation
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    fn raw(&self) -> *mut raw::git_rebase {$/;"	P	implementation:Rebase
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    pub fn raw(&mut self) -> *const raw::git_rebase_options {$/;"	P	implementation:RebaseOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    raw: *const raw::git_rebase_operation,$/;"	m	struct:RebaseOperation
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    raw: *mut raw::git_rebase,$/;"	m	struct:Rebase
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    raw: raw::git_rebase_options,$/;"	m	struct:RebaseOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    fn raw(&self) -> *mut raw::git_reference {$/;"	P	implementation:Reference
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    fn raw(&self) -> *mut raw::git_reference_iterator {$/;"	P	implementation:References
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    pub fn raw(&self) -> *mut raw::git_reference {$/;"	P	implementation:Reference
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    raw: *mut raw::git_reference,$/;"	m	struct:Reference
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    raw: *mut raw::git_reference_iterator,$/;"	m	struct:References
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    fn raw(&self) -> *const raw::git_reflog_entry {$/;"	P	implementation:ReflogEntry
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    fn raw(&self) -> *mut raw::git_reflog {$/;"	P	implementation:Reflog
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    raw: *const raw::git_reflog_entry,$/;"	m	struct:ReflogEntry
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    raw: *mut raw::git_reflog,$/;"	m	struct:Reflog
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/refspec.rs	/^    fn raw(&self) -> *const raw::git_refspec {$/;"	P	implementation:Refspec
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/refspec.rs	/^    raw: *const raw::git_refspec,$/;"	m	struct:Refspec
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    fn raw(&self) -> *mut raw::git_remote {$/;"	P	implementation:Remote
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    fn raw(&self) -> raw::git_fetch_options {$/;"	P	implementation:FetchOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    fn raw(&self) -> raw::git_push_options {$/;"	P	implementation:PushOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    raw: *const raw::git_remote_head,$/;"	m	struct:RemoteHead
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    raw: *mut raw::git_remote,$/;"	m	struct:Remote
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^    fn raw(&self) -> raw::git_remote_callbacks {$/;"	P	implementation:RemoteCallbacks
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    fn raw(&self) -> *mut raw::git_repository {$/;"	P	implementation:Repository
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub unsafe fn raw(&self) -> raw::git_repository_init_options {$/;"	P	implementation:RepositoryInitOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    raw: *mut raw::git_repository,$/;"	m	struct:Repository
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revert.rs	/^    pub fn raw(&mut self) -> raw::git_revert_options {$/;"	P	implementation:RevertOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revwalk.rs	/^    fn raw(&self) -> *mut raw::git_revwalk {$/;"	P	implementation:Revwalk
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revwalk.rs	/^    raw: *mut raw::git_revwalk,$/;"	m	struct:Revwalk
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/signature.rs	/^    fn raw(&self) -> *mut raw::git_signature {$/;"	P	implementation:Signature
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/signature.rs	/^    raw: *mut raw::git_signature,$/;"	m	struct:Signature
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/stash.rs	/^    pub fn raw(&mut self) -> &raw::git_stash_apply_options {$/;"	P	implementation:StashApplyOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    fn raw(&self) -> *const raw::git_status_entry {$/;"	P	implementation:StatusEntry
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    fn raw(&self) -> *mut raw::git_status_list {$/;"	P	implementation:Statuses
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub unsafe fn raw(&mut self) -> *const raw::git_status_options {$/;"	P	implementation:StatusOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    raw: *const raw::git_status_entry,$/;"	m	struct:StatusEntry
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    raw: *mut raw::git_status_list,$/;"	m	struct:Statuses
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    raw: raw::git_status_options,$/;"	m	struct:StatusOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^    fn raw(&self) -> raw::git_strarray {$/;"	P	implementation:StringArray
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^    raw: raw::git_strarray,$/;"	m	struct:StringArray
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    fn raw(&self) -> *mut raw::git_submodule {$/;"	P	implementation:Submodule
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    raw: *mut raw::git_submodule,$/;"	m	struct:Submodule
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    unsafe fn raw(&mut self) -> raw::git_submodule_update_options {$/;"	P	implementation:SubmoduleUpdateOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^    fn raw(&self) -> *mut raw::git_tag {$/;"	P	implementation:Tag
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^    raw: *mut raw::git_tag,$/;"	m	struct:Tag
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^    fn raw(&self) -> raw::git_index_time {$/;"	P	implementation:IndexTime
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^    fn raw(&self) -> raw::git_time {$/;"	P	implementation:Time
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^    raw: raw::git_index_time,$/;"	m	struct:IndexTime
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^    raw: raw::git_time,$/;"	m	struct:Time
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^    raw: *mut raw::git_transport,$/;"	m	struct:Transport
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^    raw: raw::git_smart_subtransport,$/;"	m	struct:RawSmartSubtransport
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^    raw: raw::git_smart_subtransport_stream,$/;"	m	struct:RawSmartSubtransportStream
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    fn raw(&self) -> *mut raw::git_tree {$/;"	P	implementation:Tree
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    fn raw(&self) -> *mut raw::git_tree_entry {$/;"	P	implementation:TreeEntry
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    raw: *mut raw::git_tree,$/;"	m	struct:Tree
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    raw: *mut raw::git_tree_entry,$/;"	m	struct:TreeEntry
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/treebuilder.rs	/^    fn raw(&self) -> *mut raw::git_treebuilder {$/;"	P	implementation:TreeBuilder
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/treebuilder.rs	/^    raw: *mut raw::git_treebuilder,$/;"	m	struct:TreeBuilder
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^    fn raw(&self) -> Self::Raw;$/;"	P	interface:Binding
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    fn raw(&self) -> *mut raw::git_worktree {$/;"	P	implementation:Worktree
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    pub fn raw(&mut self) -> *mut raw::git_worktree_prune_options {$/;"	P	implementation:WorktreePruneOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    pub fn raw(&self) -> *const raw::git_worktree_add_options {$/;"	P	implementation:WorktreeAddOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    raw: *mut raw::git_worktree,$/;"	m	struct:Worktree
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    raw: raw::git_worktree_add_options,$/;"	m	struct:WorktreeAddOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    raw: raw::git_worktree_prune_options,$/;"	m	struct:WorktreePruneOptions
raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub(crate) fn raw(&self) -> (i64, i32) {$/;"	P	implementation:Duration
raw_class	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/error.rs	/^    pub fn raw_class(&self) -> raw::git_error_t {$/;"	P	implementation:Error
raw_code	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/error.rs	/^    pub fn raw_code(&self) -> raw::git_error_code {$/;"	P	implementation:Error
raw_header	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    pub fn raw_header(&self) -> Option<&str> {$/;"	P	implementation:Commit
raw_header_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    pub fn raw_header_bytes(&self) -> &[u8] {$/;"	P	implementation:Commit
raw_opts	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/stash.rs	/^    raw_opts: raw::git_stash_apply_options,$/;"	m	struct:StashApplyOptions
rcbuffer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tee.rs	/^    rcbuffer: Rc<RefCell<TeeBuffer<I::Item, I>>>,$/;"	m	struct:Tee
rciter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs	/^    pub rciter: Rc<RefCell<I>>,$/;"	m	struct:RcIter
rciter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs	/^pub fn rciter<I>(iterable: I) -> RcIter<I::IntoIter>$/;"	f
rciter_impl	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod rciter_impl;$/;"	n
read	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/ptr.rs	/^    pub unsafe fn read(self) -> T {$/;"	P	implementation:Mut
read	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub fn read(&mut self, force: bool) -> Result<(), Error> {$/;"	P	implementation:Index
read	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:OdbReader
read	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    fn read() {$/;"	f	module:tests
read	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    pub fn read(&self, oid: Oid) -> Result<OdbObject<'_>, Error> {$/;"	P	implementation:Odb
read	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/sync.rs	/^        pub(crate) fn read<'a>(&'a self) -> LockResult<RwLockReadGuard<'a, T>> {$/;"	P	implementation:parking_lot_impl::RwLock
read_header	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    fn read_header() {$/;"	f	module:tests
read_header	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    pub fn read_header(&self, oid: Oid) -> Result<(usize, ObjectType), Error> {$/;"	P	implementation:Odb
read_tree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub fn read_tree(&mut self, tree: &Tree<'_>) -> Result<(), Error> {$/;"	P	implementation:Index
reader	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    pub fn reader(&self, oid: Oid) -> Result<(OdbReader<'_>, usize, ObjectType), Error> {$/;"	P	implementation:Odb
realpath	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/test.rs	/^        fn realpath(name: *const c_char, resolved: *mut c_char) -> *mut c_char;$/;"	f	function:realpath
realpath	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/test.rs	/^pub fn realpath(original: &Path) -> io::Result<PathBuf> {$/;"	f
rebase	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod rebase;$/;"	n
rebase	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn rebase($/;"	P	implementation:Repository
received_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/indexer.rs	/^    pub fn received_bytes(&self) -> usize {$/;"	P	implementation:Progress
received_objects	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/indexer.rs	/^    pub fn received_objects(&self) -> usize {$/;"	P	implementation:Progress
recons	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^                macro_rules! recons {$/;"	M	method:StrftimeItems::next
recons	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^    recons: Fmt<'a>,$/;"	m	struct:StrftimeItems
recons_from_slice	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^                macro_rules! recons_from_slice {$/;"	M	method:StrftimeItems::next
record	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    fn record(&self, values: &Record<'_>) {$/;"	P	implementation:Inner
record	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    pub fn record<Q: ?Sized, V>(&self, field: &Q, value: &V) -> &Self$/;"	P	implementation:Span
record	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    fn record(&self, visitor: &mut dyn Visit) {$/;"	P	implementation:Attributes
record	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    fn record(&self, visitor: &mut dyn Visit) {$/;"	P	implementation:Event
record	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    fn record(&self, visitor: &mut dyn Visit) {$/;"	P	implementation:Record
record	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    fn record(&self, visitor: &mut dyn Visit) {$/;"	f
record	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    fn record(&self, visitor: &mut dyn Visit);$/;"	P	interface:RecordFields
record	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^        fn record(&self, _span: &span::Id, _values: &span::Record<'_>) {}$/;"	P	implementation:tests::NoSubscriber
record	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    fn record(&self, span: &span::Id, values: &span::Record<'_>) {$/;"	f
record	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^        fn record(&self, _: &span::Id, _: &span::Record<'_>) {}$/;"	P	implementation:tests::NopSubscriber
record	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^        fn record(&self, _: &span::Id, _: &span::Record<'_>) {}$/;"	P	implementation:tests::StringSubscriber
record	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn record(&self, span: &span::Id, values: &span::Record<'_>) {$/;"	f
record	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn record(&self, _: &span::Id, _: &span::Record<'_>) {}$/;"	P	implementation:Registry
record_all	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    pub fn record_all(&self, values: &field::ValueSet<'_>) -> &Self {$/;"	P	implementation:Span
record_bool	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/debug.rs	/^    fn record_bool(&mut self, field: &Field, value: bool) {$/;"	f
record_bool	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^    fn record_bool(&mut self, field: &Field, value: bool) {$/;"	f
record_bool	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/display.rs	/^    fn record_bool(&mut self, field: &Field, value: bool) {$/;"	f
record_bool	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    fn record_bool(&mut self, field: &Field, value: bool) {$/;"	P	implementation:MatchVisitor
record_bool	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    fn record_bool(&mut self, field: &Field, value: bool) {$/;"	P	implementation:JsonVisitor
record_debug	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/debug.rs	/^    fn record_debug(&mut self, field: &Field, value: &dyn fmt::Debug) {$/;"	f
record_debug	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^    fn record_debug(&mut self, field: &Field, value: &dyn fmt::Debug) {$/;"	f
record_debug	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/display.rs	/^    fn record_debug(&mut self, field: &Field, value: &dyn fmt::Debug) {$/;"	f
record_debug	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^        fn record_debug(&mut self, field: &Field, value: &dyn fmt::Debug) {$/;"	P	implementation:test_util::DebugVisitor
record_debug	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    fn record_debug(&mut self, field: &Field, value: &dyn fmt::Debug) {$/;"	P	implementation:MatchVisitor
record_debug	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    fn record_debug(&mut self, field: &Field, value: &dyn fmt::Debug) {$/;"	P	implementation:JsonVisitor
record_debug	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn record_debug(&mut self, field: &Field, value: &dyn fmt::Debug) {$/;"	P	implementation:DefaultVisitor
record_debug	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn record_debug(&mut self, field: &Field, value: &dyn fmt::Debug) {$/;"	f
record_debug	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^    fn record_debug(&mut self, field: &Field, value: &dyn fmt::Debug) {$/;"	P	implementation:PrettyVisitor
record_error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn record_error(&mut self, field: &Field, value: &(dyn std::error::Error + 'static)) {$/;"	P	implementation:DefaultVisitor
record_error	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^    fn record_error(&mut self, field: &Field, value: &(dyn std::error::Error + 'static)) {$/;"	P	implementation:PrettyVisitor
record_follows_from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^        fn record_follows_from(&self, _span: &span::Id, _follows: &span::Id) {}$/;"	P	implementation:tests::NoSubscriber
record_follows_from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    fn record_follows_from(&self, span: &span::Id, follows: &span::Id) {$/;"	f
record_follows_from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^        fn record_follows_from(&self, _: &span::Id, _: &span::Id) {}$/;"	P	implementation:tests::NopSubscriber
record_follows_from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^        fn record_follows_from(&self, _: &span::Id, _: &span::Id) {}$/;"	P	implementation:tests::StringSubscriber
record_follows_from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn record_follows_from(&self, span: &span::Id, follows: &span::Id) {$/;"	f
record_follows_from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn record_follows_from(&self, _span: &span::Id, _follows: &span::Id) {}$/;"	P	implementation:Registry
record_i64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/debug.rs	/^    fn record_i64(&mut self, field: &Field, value: i64) {$/;"	f
record_i64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^    fn record_i64(&mut self, field: &Field, value: i64) {$/;"	f
record_i64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/display.rs	/^    fn record_i64(&mut self, field: &Field, value: i64) {$/;"	f
record_i64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    fn record_i64(&mut self, field: &Field, value: i64) {$/;"	P	implementation:MatchVisitor
record_i64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    fn record_i64(&mut self, field: &Field, value: i64) {$/;"	P	implementation:JsonVisitor
record_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/debug.rs	/^    fn record_str(&mut self, field: &Field, value: &str) {$/;"	f
record_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^    fn record_str(&mut self, field: &Field, value: &str) {$/;"	f
record_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/display.rs	/^    fn record_str(&mut self, field: &Field, value: &str) {$/;"	f
record_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    fn record_str(&mut self, field: &Field, value: &str) {$/;"	P	implementation:MatchVisitor
record_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    fn record_str(&mut self, field: &Field, value: &str) {$/;"	P	implementation:JsonVisitor
record_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn record_str(&mut self, field: &Field, value: &str) {$/;"	P	implementation:DefaultVisitor
record_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^    fn record_str(&mut self, field: &Field, value: &str) {$/;"	P	implementation:PrettyVisitor
record_u64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/debug.rs	/^    fn record_u64(&mut self, field: &Field, value: u64) {$/;"	f
record_u64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^    fn record_u64(&mut self, field: &Field, value: u64) {$/;"	f
record_u64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/display.rs	/^    fn record_u64(&mut self, field: &Field, value: u64) {$/;"	f
record_u64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    fn record_u64(&mut self, field: &Field, value: u64) {$/;"	P	implementation:MatchVisitor
record_u64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    fn record_u64(&mut self, field: &Field, value: u64) {$/;"	P	implementation:JsonVisitor
record_update	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    pub(crate) fn record_update(&self, record: &span::Record<'_>) {$/;"	P	implementation:SpanMatcher
record_works	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    fn record_works() {$/;"	f	module:test
recreate_missing	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn recreate_missing(&mut self, allow: bool) -> &mut CheckoutBuilder<'cb> {$/;"	P	implementation:CheckoutBuilder
recurse_ignored_dirs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn recurse_ignored_dirs(&mut self, recurse: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
recurse_ignored_dirs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub fn recurse_ignored_dirs(&mut self, include: bool) -> &mut StatusOptions {$/;"	P	implementation:StatusOptions
recurse_untracked_dirs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn recurse_untracked_dirs(&mut self, recurse: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
recurse_untracked_dirs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub fn recurse_untracked_dirs(&mut self, include: bool) -> &mut StatusOptions {$/;"	P	implementation:StatusOptions
recursion_limit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    pub fn recursion_limit(&mut self, limit: u32) -> &mut MergeOptions {$/;"	P	implementation:MergeOptions
red	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn red(self) -> ColoredString$/;"	P	interface:Colorize
reduce	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs	/^    pub fn reduce<F>(self, f: F) -> T$/;"	P	implementation:EitherOrBoth
ref_count	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    ref_count: AtomicUsize,$/;"	m	struct:DataInner
reference	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod reference;$/;"	n
reference	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn reference($/;"	P	implementation:Repository
reference	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    pub fn reference($/;"	P	implementation:WorktreeAddOptions
reference_ensure_log	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn reference_ensure_log(&self, name: &str) -> Result<(), Error> {$/;"	P	implementation:Repository
reference_has_log	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn reference_has_log(&self, name: &str) -> Result<bool, Error> {$/;"	P	implementation:Repository
reference_matching	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn reference_matching($/;"	P	implementation:Repository
reference_symbolic	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn reference_symbolic($/;"	P	implementation:Repository
reference_symbolic_matching	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn reference_symbolic_matching($/;"	P	implementation:Repository
reference_to_annotated_commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn reference_to_annotated_commit($/;"	P	implementation:Repository
references	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn references(&self) -> Result<References<'_>, Error> {$/;"	P	implementation:Repository
references_glob	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn references_glob(&self, glob: &str) -> Result<References<'_>, Error> {$/;"	P	implementation:Repository
reflog	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod reflog;$/;"	n
reflog	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    reflog: &'reflog Reflog,$/;"	m	struct:ReflogIter
reflog	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn reflog(&self, name: &str) -> Result<Reflog, Error> {$/;"	P	implementation:Repository
reflog_delete	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn reflog_delete(&self, name: &str) -> Result<(), Error> {$/;"	P	implementation:Repository
reflog_rename	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn reflog_rename(&self, old_name: &str, new_name: &str) -> Result<(), Error> {$/;"	P	implementation:Repository
refname	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    pub fn refname(&self) -> Option<&str> {$/;"	P	implementation:AnnotatedCommit
refname_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    pub fn refname_bytes(&self) -> &[u8] {$/;"	P	implementation:AnnotatedCommit
refname_to_id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn refname_to_id(&self, name: &str) -> Result<Oid, Error> {$/;"	P	implementation:Repository
refresh	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn refresh(&mut self, refresh: bool) -> &mut CheckoutBuilder<'cb> {$/;"	P	implementation:CheckoutBuilder
refresh	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    pub fn refresh(&self) -> Result<(), Error> {$/;"	P	implementation:Odb
refspec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod refspec;$/;"	n
refspecs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn refspecs(&self) -> Refspecs<'_> {$/;"	P	implementation:Remote
register	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^pub unsafe fn register<F>(prefix: &str, factory: F) -> Result<(), Error>$/;"	f
register	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/lib.rs	/^        pub fn register(&'static self) -> Interest {$/;"	P	implementation:__macro_support::MacroCallsite
register_callsite	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^        fn register_callsite(&self, _: &'static Metadata<'static>) -> subscriber::Interest {$/;"	P	implementation:tests::NoSubscriber
register_callsite	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    fn register_callsite(&self, metadata: &'static Metadata<'static>) -> Interest {$/;"	P	implementation:EnvFilter
register_callsite	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/level.rs	/^    fn register_callsite(&self, metadata: &'static Metadata<'static>) -> Interest {$/;"	P	implementation:LevelFilter
register_callsite	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    fn register_callsite(&self, meta: &'static Metadata<'static>) -> Interest {$/;"	f
register_callsite	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^        fn register_callsite(&self, _: &'static Metadata<'static>) -> Interest {$/;"	P	implementation:tests::NopSubscriber
register_callsite	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^        fn register_callsite(&self, _: &'static Metadata<'static>) -> Interest {$/;"	P	implementation:tests::StringSubscriber
register_callsite	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn register_callsite(&self, metadata: &'static Metadata<'static>) -> Interest {$/;"	P	interface:Layer
register_callsite	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn register_callsite(&self, metadata: &'static Metadata<'static>) -> Interest {$/;"	f
register_callsite	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn register_callsite(&self, _: &'static Metadata<'static>) -> Interest {$/;"	P	implementation:Registry
register_callsite	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^    fn register_callsite(&self, metadata: &'static Metadata<'static>) -> Interest {$/;"	f
registration	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/lib.rs	/^        registration: Once,$/;"	m	struct:__macro_support::MacroCallsite
registry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/lib.rs	/^pub fn registry() -> Registry {$/;"	f
registry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/lib.rs	/^pub mod registry;$/;"	n
registry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    registry: &'a R,$/;"	m	struct:Parents
registry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    registry: &'a R,$/;"	m	struct:SpanRef
registry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    registry: &'a Registry,$/;"	m	struct:CloseGuard
reinstantiate_index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/stash.rs	/^    pub fn reinstantiate_index(&mut self) -> &mut StashApplyOptions<'cb> {$/;"	P	implementation:StashApplyOptions
reload	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    pub fn reload(&mut self, force: bool) -> Result<(), Error> {$/;"	P	implementation:Submodule
reload	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/lib.rs	/^pub mod reload;$/;"	n
reload	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^    pub fn reload(&self, new_layer: impl Into<L>) -> Result<(), Error> {$/;"	f
reload_handle	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn reload_handle(&self) -> crate::reload::Handle<crate::EnvFilter, Formatter<N, E, W>> {$/;"	f
remainder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^    remainder: &'a str,$/;"	m	struct:StrftimeItems
remaining	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs	/^    fn remaining(&self) -> CompleteStateRemaining {$/;"	P	implementation:CompleteState
remote	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod remote;$/;"	n
remote	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    remote: &'connection mut Remote<'repo>,$/;"	m	struct:RemoteConnection
remote	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    remote: &'remote Remote<'remote>,$/;"	m	struct:Refspecs
remote	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn remote(&self, name: &str, url: &str) -> Result<Remote<'_>, Error> {$/;"	P	implementation:Repository
remote	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^        remote: Option<Remote<'a>>,$/;"	m	struct:transport_factory::Bomb
remote_add_fetch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn remote_add_fetch(&self, name: &str, spec: &str) -> Result<(), Error> {$/;"	P	implementation:Repository
remote_add_push	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn remote_add_push(&self, name: &str, spec: &str) -> Result<(), Error> {$/;"	P	implementation:Repository
remote_anonymous	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn remote_anonymous(&self, url: &str) -> Result<Remote<'_>, Error> {$/;"	P	implementation:Repository
remote_callbacks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod remote_callbacks;$/;"	n
remote_callbacks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn remote_callbacks(&mut self, cbs: RemoteCallbacks<'cb>) -> &mut Self {$/;"	P	implementation:FetchOptions
remote_callbacks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn remote_callbacks(&mut self, cbs: RemoteCallbacks<'cb>) -> &mut Self {$/;"	P	implementation:PushOptions
remote_create	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn remote_create<F>(&mut self, f: F) -> &mut RepoBuilder<'cb>$/;"	P	implementation:RepoBuilder
remote_create	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    remote_create: Option<Box<RemoteCreate<'cb>>>,$/;"	m	struct:RepoBuilder
remote_create_cb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^extern "C" fn remote_create_cb($/;"	f
remote_delete	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn remote_delete(&self, name: &str) -> Result<(), Error> {$/;"	P	implementation:Repository
remote_into_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^pub fn remote_into_raw(remote: Remote<'_>) -> *mut raw::git_remote {$/;"	f
remote_rename	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn remote_rename(&self, name: &str, new_name: &str) -> Result<StringArray, Error> {$/;"	P	implementation:Repository
remote_set_pushurl	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn remote_set_pushurl(&self, name: &str, pushurl: Option<&str>) -> Result<(), Error> {$/;"	P	implementation:Repository
remote_set_url	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn remote_set_url(&self, name: &str, url: &str) -> Result<(), Error> {$/;"	P	implementation:Repository
remote_with_fetch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn remote_with_fetch($/;"	P	implementation:Repository
remotes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn remotes(&self) -> Result<StringArray, Error> {$/;"	P	implementation:Repository
remove	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn remove<T: IntoCString>(&mut self, path: T) -> &mut Self {$/;"	P	implementation:TreeUpdateBuilder
remove	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn remove(&mut self, name: &str) -> Result<(), Error> {$/;"	P	implementation:Config
remove	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub fn remove(&mut self, path: &Path, stage: i32) -> Result<(), Error> {$/;"	P	implementation:Index
remove	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    pub fn remove(&mut self, i: usize, rewrite_previous_entry: bool) -> Result<(), Error> {$/;"	P	implementation:Reflog
remove	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/treebuilder.rs	/^    pub fn remove<P: IntoCString>(&mut self, filename: P) -> Result<(), Error> {$/;"	P	implementation:TreeBuilder
remove	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^    pub fn remove<T: Send + Sync + 'static>(&mut self) -> Option<T> {$/;"	P	implementation:ExtensionsMut
remove	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^    pub(crate) fn remove<T: Send + Sync + 'static>(&mut self) -> Option<T> {$/;"	P	implementation:ExtensionsInner
remove_all	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub fn remove_all<T, I>($/;"	P	implementation:Index
remove_dir	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub fn remove_dir(&mut self, path: &Path, stage: i32) -> Result<(), Error> {$/;"	P	implementation:Index
remove_ignored	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn remove_ignored(&mut self, remove: bool) -> &mut CheckoutBuilder<'cb> {$/;"	P	implementation:CheckoutBuilder
remove_message	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn remove_message(&self) -> Result<(), Error> {$/;"	P	implementation:Repository
remove_multivar	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn remove_multivar(&mut self, name: &str, regexp: &str) -> Result<(), Error> {$/;"	P	implementation:Config
remove_namespace	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn remove_namespace(&self) -> Result<(), Error> {$/;"	P	implementation:Repository
remove_path	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub fn remove_path(&mut self, path: &Path) -> Result<(), Error> {$/;"	P	implementation:Index
remove_unmodified	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn remove_unmodified(&mut self, remove: bool) -> &mut DiffFindOptions {$/;"	P	implementation:DiffFindOptions
remove_untracked	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn remove_untracked(&mut self, remove: bool) -> &mut CheckoutBuilder<'cb> {$/;"	P	implementation:CheckoutBuilder
rename	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/branch.rs	/^    pub fn rename(&mut self, new_branch_name: &str, force: bool) -> Result<Branch<'repo>, Error>/;"	P	implementation:Branch
rename	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    pub fn rename($/;"	P	implementation:Reference
rename_from_rewrite_threshold	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn rename_from_rewrite_threshold(&mut self, thresh: u16) -> &mut DiffFindOptions {$/;"	P	implementation:DiffFindOptions
rename_limit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn rename_limit(&mut self, limit: usize) -> &mut DiffFindOptions {$/;"	P	implementation:DiffFindOptions
rename_threshold	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn rename_threshold(&mut self, thresh: u16) -> &mut DiffFindOptions {$/;"	P	implementation:DiffFindOptions
rename_threshold	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    pub fn rename_threshold(&mut self, thresh: u32) -> &mut MergeOptions {$/;"	P	implementation:MergeOptions
renames	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn renames(&mut self, find: bool) -> &mut DiffFindOptions {$/;"	P	implementation:DiffFindOptions
renames_from_rewrites	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn renames_from_rewrites(&mut self, find: bool) -> &mut DiffFindOptions {$/;"	P	implementation:DiffFindOptions
renames_from_rewrites	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub fn renames_from_rewrites(&mut self, include: bool) -> &mut StatusOptions {$/;"	P	implementation:StatusOptions
renames_head_to_index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub fn renames_head_to_index(&mut self, include: bool) -> &mut StatusOptions {$/;"	P	implementation:StatusOptions
renames_index_to_workdir	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub fn renames_index_to_workdir(&mut self, include: bool) -> &mut StatusOptions {$/;"	P	implementation:StatusOptions
repeat_call	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs	/^pub fn repeat_call<F, A>(function: F) -> RepeatCall<F>$/;"	f
repeat_n	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/repeatn.rs	/^pub fn repeat_n<A>(element: A, n: usize) -> RepeatN<A>$/;"	f
repeatn	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod repeatn;$/;"	n
replace	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^    pub fn replace<T: Send + Sync + 'static>(&mut self, val: T) -> Option<T> {$/;"	P	implementation:ExtensionsMut
repo	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod repo;$/;"	n
repo	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^            repo: &'b Repository,$/;"	m	struct:Repository::submodules::Data
repo	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^        repo: &'a Repository,$/;"	m	struct:tests::TestTreeIter
repo_init	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/test.rs	/^pub fn repo_init() -> (TempDir, Repository) {$/;"	f
reset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/mempack.rs	/^    pub fn reset(&self) -> Result<(), Error> {$/;"	P	implementation:Mempack
reset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn reset($/;"	P	implementation:Repository
reset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revwalk.rs	/^    pub fn reset(&mut self) -> Result<(), Error> {$/;"	P	implementation:Revwalk
reset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs	/^    fn reset(&mut self) {$/;"	f
reset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs	/^    pub(crate) fn reset(&mut self, k: usize) {$/;"	P	implementation:Combinations
reset_default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn reset_default<T, I>(&self, target: Option<&Object<'_>>, paths: I) -> Result<(), Error/;"	P	implementation:Repository
reset_peek	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs	/^    pub fn reset_peek(&mut self) {$/;"	f
resolve	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    pub fn resolve(&self) -> Result<Reference<'repo>, Error> {$/;"	P	implementation:Reference
resolve_clicolor_force	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^    fn resolve_clicolor_force($/;"	P	implementation:ShouldColorize
resolve_reference_from_short_name	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn resolve_reference_from_short_name(&self, refname: &str) -> Result<Reference<'_>, Erro/;"	P	implementation:Repository
resolve_year	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^        fn resolve_year($/;"	f	method:Parsed::to_naive_date
result	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    result: fmt::Result,$/;"	m	struct:DefaultVisitor
result	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    result: fmt::Result,$/;"	m	struct:FieldFnVisitor
result	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^    result: fmt::Result,$/;"	m	struct:PrettyVisitor
ret	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^            ret: &'a mut Vec<Submodule<'b>>,$/;"	m	struct:Repository::submodules::Data
rev	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs	/^pub fn rev<I>(iterable: I) -> iter::Rev<I::IntoIter>$/;"	f
rev_for_each_ident	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^macro_rules! rev_for_each_ident{$/;"	M
reverse	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn reverse(self) -> ColoredString {$/;"	P	implementation:ColoredString
reverse	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn reverse(self) -> ColoredString {$/;"	P	implementation:str
reverse	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn reverse(self) -> ColoredString;$/;"	P	interface:Colorize
reverse	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn reverse(&mut self, reverse: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
reversed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn reversed(mut self) -> ColoredString {$/;"	P	implementation:ColoredString
reversed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn reversed(self) -> ColoredString {$/;"	P	implementation:str
reversed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn reversed(self) -> ColoredString;$/;"	P	interface:Colorize
revert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod revert;$/;"	n
revert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn revert($/;"	P	implementation:Repository
revert_commit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn revert_commit($/;"	P	implementation:Repository
revparse	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn revparse(&self, spec: &str) -> Result<Revspec<'_>, Error> {$/;"	P	implementation:Repository
revparse_ext	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn revparse_ext(&self, spec: &str) -> Result<(Object<'_>, Option<Reference<'_>>), Error>/;"	P	implementation:Repository
revparse_single	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn revparse_single(&self, spec: &str) -> Result<Object<'_>, Error> {$/;"	P	implementation:Repository
revspec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod revspec;$/;"	n
revwalk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod revwalk;$/;"	n
revwalk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn revwalk(&self) -> Result<Revwalk<'_>, Error> {$/;"	P	implementation:Repository
rewrite_notes_ref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    pub fn rewrite_notes_ref(&mut self, rewrite_notes_ref: &str) -> &mut RebaseOptions<'cb> {$/;"	P	implementation:RebaseOptions
rewrite_notes_ref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    rewrite_notes_ref: Option<CString>,$/;"	m	struct:RebaseOptions
rewrites	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn rewrites(&mut self, find: bool) -> &mut DiffFindOptions {$/;"	P	implementation:DiffFindOptions
rfc2822_to_datetime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    fn rfc2822_to_datetime(date: &str) -> ParseResult<DateTime<FixedOffset>> {$/;"	f	function:test_rfc2822
rfc3339	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn rfc3339<'a>(&'a self) -> TmFmt {$/;"	P	implementation:Tm
rfc3339	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^    pub fn rfc3339() -> Self {$/;"	P	implementation:ChronoLocal
rfc3339	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^    pub fn rfc3339() -> Self {$/;"	P	implementation:ChronoUtc
rfc3339_to_datetime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    fn rfc3339_to_datetime(date: &str) -> ParseResult<DateTime<FixedOffset>> {$/;"	f	function:test_rfc3339
rfc822	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn rfc822(&self) -> TmFmt {$/;"	P	implementation:Tm
rfc822z	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn rfc822z(&self) -> TmFmt {$/;"	P	implementation:Tm
right	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs	/^    pub fn right(self) -> Option<B> {$/;"	P	implementation:EitherOrBoth
right	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs	/^    right: PutBack<Fuse<J>>,$/;"	m	struct:MergeJoinBy
right_and_then	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs	/^    pub fn right_and_then<F, R>(self, f: F) -> EitherOrBoth<A, R>$/;"	P	implementation:EitherOrBoth
root_cause	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    pub fn root_cause(&self) -> &(dyn StdError + 'static) {$/;"	P	implementation:Error
round	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^mod round;$/;"	n
round_subsecs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn round_subsecs(self, digits: u16) -> Self;$/;"	P	interface:SubsecRound
round_subsecs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn round_subsecs(self, digits: u16) -> T {$/;"	f
roundtrip	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    fn roundtrip() {$/;"	f	module:tests
rtransform	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/refspec.rs	/^    pub fn rtransform(&self, name: &str) -> Result<Buf, Error> {$/;"	P	implementation:Refspec
rust_tm_to_tm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^fn rust_tm_to_tm(rust_tm: &Tm, tm: &mut libc::tm) {$/;"	f
rust_tm_to_tm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn rust_tm_to_tm(rust_tm: &Tm, tm: &mut libc::tm) {$/;"	f	module:inner
rustc_serialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^pub mod rustc_serialize {$/;"	n
rustc_serialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^mod rustc_serialize {$/;"	n
rustc_serialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^pub mod rustc_serialize {$/;"	n
rustc_serialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^mod rustc_serialize {$/;"	n
safe	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn safe(&mut self) -> &mut CheckoutBuilder<'cb> {$/;"	P	implementation:CheckoutBuilder
sanitize_timings	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    fn sanitize_timings(s: String) -> String {$/;"	f	module:test
scan	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^mod scan;$/;"	n
scope	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn scope(&self) -> Scope<'_, S>$/;"	f
scope	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    pub fn scope(&self) -> Scope<'_, S>$/;"	f
sealed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/lib.rs	/^mod sealed {$/;"	n
sealed	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/lib.rs	/^mod sealed {$/;"	n
sec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub sec: i64,$/;"	m	struct:Timespec
sec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub struct Timespec { pub sec: i64, pub nsec: i32 }$/;"	m	struct:Timespec
second	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn second(&self) -> u32 {$/;"	P	implementation:DateTime
second	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub second: Option<u32>,$/;"	m	struct:Parsed
second	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn second(&self) -> u32;$/;"	P	interface:Timelike
second	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn second(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
second	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn second(&self) -> u32 {$/;"	P	implementation:NaiveTime
second	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/datetime.rs	/^    second: u8,$/;"	m	struct:DateTime
seconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn seconds(seconds: i64) -> Duration {$/;"	P	implementation:Duration
seconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^    pub fn seconds(&self) -> i32 {$/;"	P	implementation:IndexTime
seconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^    pub fn seconds(&self) -> i64 {$/;"	P	implementation:Time
seconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn seconds(seconds: i64) -> Duration {$/;"	P	implementation:Duration
secs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    secs: u32,$/;"	m	struct:NaiveTime
secs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    secs: i64,$/;"	m	struct:Duration
secs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    secs: i64,$/;"	m	struct:Duration
seen	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^    seen: bool,$/;"	m	struct:VisitDelimited
sep	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs	/^    sep: &'a str,$/;"	m	struct:Format
sep	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs	/^    sep: &'a str,$/;"	m	struct:FormatWith
serde	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^pub mod serde {$/;"	n
serde	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub mod serde {$/;"	n	module:naive
serde	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub mod serde {$/;"	n
serde	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^mod serde {$/;"	n
serde	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^pub mod serde {$/;"	n
serde	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^mod serde {$/;"	n
serde_from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn serde_from<T, E, V>(me: LocalResult<T>, ts: &V) -> Result<T, E>$/;"	f	module:serde
serialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:serde::DateTime
serialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        pub fn serialize<S>(dt: &DateTime<Utc>, serializer: S) -> Result<S::Ok, S::Error>$/;"	f	module:serde::ts_milliseconds
serialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        pub fn serialize<S>(dt: &DateTime<Utc>, serializer: S) -> Result<S::Ok, S::Error>$/;"	f	module:serde::ts_nanoseconds
serialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        pub fn serialize<S>(dt: &DateTime<Utc>, serializer: S) -> Result<S::Ok, S::Error>$/;"	f	module:serde::ts_seconds
serialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        pub fn serialize<S>(opt: &Option<DateTime<Utc>>, serializer: S) -> Result<S::Ok, S::Erro/;"	f	module:serde::ts_milliseconds_option
serialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        pub fn serialize<S>(opt: &Option<DateTime<Utc>>, serializer: S) -> Result<S::Ok, S::Erro/;"	f	module:serde::ts_nanoseconds_option
serialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        pub fn serialize<S>(opt: &Option<DateTime<Utc>>, serializer: S) -> Result<S::Ok, S::Erro/;"	f	module:serde::ts_seconds_option
serialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:month_serde::Month
serialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:weekday_serde::Weekday
serialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:serde::NaiveDate
serialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:serde::NaiveDateTime
serialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        pub fn serialize<S>(dt: &NaiveDateTime, serializer: S) -> Result<S::Ok, S::Error>$/;"	f	module:serde::ts_milliseconds
serialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        pub fn serialize<S>(dt: &NaiveDateTime, serializer: S) -> Result<S::Ok, S::Error>$/;"	f	module:serde::ts_nanoseconds
serialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        pub fn serialize<S>(dt: &NaiveDateTime, serializer: S) -> Result<S::Ok, S::Error>$/;"	f	module:serde::ts_seconds
serialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:serde::NaiveTime
serialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    fn serialize<Ser>(&self, serializer: Ser) -> Result<Ser::Ok, Ser::Error>$/;"	f
serialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    fn serialize<Ser>(&self, serializer_o: Ser) -> Result<Ser::Ok, Ser::Error>$/;"	f
set_ampm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_ampm(&mut self, value: bool) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_bool	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn set_bool(&mut self, name: &str, value: bool) -> Result<(), Error> {$/;"	P	implementation:Config
set_class	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/error.rs	/^    pub fn set_class(&mut self, class: ErrorClass) {$/;"	P	implementation:Error
set_code	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/error.rs	/^    pub fn set_code(&mut self, code: ErrorCode) {$/;"	P	implementation:Error
set_day	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_day(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/subscriber.rs	/^pub fn set_default<S>(subscriber: S) -> DefaultGuard$/;"	f
set_default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/util.rs	/^    fn set_default(self) -> dispatcher::DefaultGuard {$/;"	P	interface:SubscriberInitExt
set_err	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^unsafe fn set_err(e: &Error) {$/;"	f
set_err_io	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^unsafe fn set_err_io(e: &io::Error) {$/;"	f
set_from	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn set_from<'a, A: 'a, J>(&mut self, from: J) -> usize$/;"	P	interface:Itertools
set_global_default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/subscriber.rs	/^pub fn set_global_default<S>(subscriber: S) -> Result<(), SetGlobalDefaultError>$/;"	f
set_head	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn set_head(&self, refname: &str) -> Result<(), Error> {$/;"	P	implementation:Repository
set_head_detached	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn set_head_detached(&self, commitish: Oid) -> Result<(), Error> {$/;"	P	implementation:Repository
set_head_detached_from_annotated	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn set_head_detached_from_annotated($/;"	P	implementation:Repository
set_hour	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_hour(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_hour12	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_hour12(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_i32	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn set_i32(&mut self, name: &str, value: i32) -> Result<(), Error> {$/;"	P	implementation:Config
set_i64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn set_i64(&mut self, name: &str, value: i64) -> Result<(), Error> {$/;"	P	implementation:Config
set_if_consistent	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^fn set_if_consistent<T: PartialEq>(old: &mut Option<T>, new: T) -> ParseResult<()> {$/;"	f
set_index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn set_index(&self, index: &mut Index) -> Result<(), Error> {$/;"	P	implementation:Repository
set_interest	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/lib.rs	/^        fn set_interest(&self, interest: Interest) {$/;"	P	implementation:__macro_support::MacroCallsite
set_interest	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^        fn set_interest(&self, _: tracing_core::subscriber::Interest) {$/;"	P	implementation:test_util::TestCallsite1
set_interest	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^        fn set_interest(&self, _interest: Interest) {}$/;"	P	implementation:tests::Cs
set_interest	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^            fn set_interest(&self, _: Interest) {$/;"	P	implementation:DataInner::default::NullCallsite
set_isoweek	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_isoweek(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_isoyear	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_isoyear(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_isoyear_div_100	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_isoyear_div_100(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_isoyear_mod_100	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_isoyear_mod_100(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_london_with_dst_time_zone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn set_london_with_dst_time_zone() -> TzReset {$/;"	f	module:inner
set_los_angeles_time_zone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn set_los_angeles_time_zone() -> TzReset {$/;"	f	module:inner
set_minute	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_minute(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_month	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_month(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_multivar	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn set_multivar(&mut self, name: &str, regexp: &str, value: &str) -> Result<(), Error> {$/;"	P	implementation:Config
set_namespace	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn set_namespace(&self, namespace: &str) -> Result<(), Error> {$/;"	P	implementation:Repository
set_namespace_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn set_namespace_bytes(&self, namespace: &[u8]) -> Result<(), Error> {$/;"	P	implementation:Repository
set_nanosecond	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_nanosecond(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_odb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn set_odb(&self, odb: &Odb<'_>) -> Result<(), Error> {$/;"	P	implementation:Repository
set_offset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_offset(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_ordinal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_ordinal(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_override	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^    pub fn set_override(&self, override_colorize: bool) {$/;"	P	implementation:ShouldColorize
set_override	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^pub fn set_override(override_colorize: bool) {$/;"	f
set_progress_callback	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    pub fn set_progress_callback<F>(&mut self, progress: F) -> Result<(), Error>$/;"	P	implementation:PackBuilder
set_second	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_second(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_sorting	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revwalk.rs	/^    pub fn set_sorting(&mut self, sort_mode: Sort) -> Result<(), Error> {$/;"	P	implementation:Revwalk
set_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn set_str(&mut self, name: &str, value: &str) -> Result<(), Error> {$/;"	P	implementation:Config
set_target	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    pub fn set_target(&mut self, id: Oid, reflog_msg: &str) -> Result<Reference<'repo>, Error> {$/;"	P	implementation:Reference
set_threads	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    fn set_threads() {$/;"	f	module:tests
set_threads	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    pub fn set_threads(&mut self, threads: u32) -> u32 {$/;"	P	implementation:PackBuilder
set_time_zone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn set_time_zone() -> TzReset {$/;"	f	module:tests
set_time_zone_la_or_london	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn set_time_zone_la_or_london(london: bool) -> TzReset {$/;"	f	module:tests
set_time_zone_london_dst	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn set_time_zone_london_dst() -> TzReset {$/;"	f	module:tests
set_timestamp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_timestamp(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_upstream	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/branch.rs	/^    pub fn set_upstream(&mut self, upstream_name: Option<&str>) -> Result<(), Error> {$/;"	P	implementation:Branch
set_version	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub fn set_version(&mut self, version: u32) -> Result<(), Error> {$/;"	P	implementation:Index
set_virtual_terminal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^pub fn set_virtual_terminal(use_virtual: bool) -> Result<(), ()> {$/;"	f
set_week_from_mon	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_week_from_mon(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_week_from_sun	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_week_from_sun(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_weekday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_weekday(&mut self, value: Weekday) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_weekday_with_num_days_from_sunday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^fn set_weekday_with_num_days_from_sunday(p: &mut Parsed, v: i64) -> ParseResult<()> {$/;"	f
set_weekday_with_number_from_monday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^fn set_weekday_with_number_from_monday(p: &mut Parsed, v: i64) -> ParseResult<()> {$/;"	f
set_workdir	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn set_workdir(&self, path: &Path, update_gitlink: bool) -> Result<(), Error> {$/;"	P	implementation:Repository
set_year	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_year(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_year_div_100	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_year_div_100(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_year_mod_100	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_year_mod_100(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
setup_repo	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    fn setup_repo(td: &TempDir, repo: &Repository) {$/;"	f	module:tests
sharded	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^mod sharded;$/;"	n
short_id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/object.rs	/^    pub fn short_id(&self) -> Result<Buf, Error> {$/;"	P	implementation:Object
short_month0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn short_month0(s: &str) -> ParseResult<(&str, u8)> {$/;"	f
short_months	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/locales.rs	/^pub(crate) fn short_months(locale: Locale) -> &'static [&'static str] {$/;"	f
short_or_long_month0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn short_or_long_month0(s: &str) -> ParseResult<(&str, u8)> {$/;"	f
short_or_long_weekday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn short_or_long_weekday(s: &str) -> ParseResult<(&str, Weekday)> {$/;"	f
short_weekday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn short_weekday(s: &str) -> ParseResult<(&str, Weekday)> {$/;"	f
short_weekdays	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/locales.rs	/^pub(crate) fn short_weekdays(locale: Locale) -> &'static [&'static str] {$/;"	f
shorthand	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    pub fn shorthand(&self) -> Option<&str> {$/;"	P	implementation:Reference
shorthand_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    pub fn shorthand_bytes(&self) -> &[u8] {$/;"	P	implementation:Reference
should_colorize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^    pub fn should_colorize(&self) -> bool {$/;"	P	implementation:ShouldColorize
show	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub fn show(&mut self, show: StatusShow) -> &mut StatusOptions {$/;"	P	implementation:StatusOptions
show	/home/asayers/projects/orpa/src/main.rs	/^fn show(repo: &Repository, revspec: &str) -> anyhow::Result<()> {$/;"	f
show_binary	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn show_binary(&mut self, show: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
show_commit_oid_as_fallback	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^    pub fn show_commit_oid_as_fallback(&mut self, show: bool) -> &mut Self {$/;"	P	implementation:DescribeOptions
show_commit_oneline	/home/asayers/projects/orpa/src/main.rs	/^fn show_commit_oneline(repo: &Repository, oid: Oid) -> anyhow::Result<()> {$/;"	f
show_commit_with_diffstat	/home/asayers/projects/orpa/src/main.rs	/^fn show_commit_with_diffstat(repo: &Repository, oid: Oid) -> anyhow::Result<()> {$/;"	f
show_unmodified	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn show_unmodified(&mut self, show: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
show_untracked_content	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn show_untracked_content(&mut self, show: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
sideband_progress	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^    pub fn sideband_progress<F>(&mut self, cb: F) -> &mut RemoteCallbacks<'a>$/;"	P	implementation:RemoteCallbacks
sideband_progress	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^    sideband_progress: Option<Box<TransportMessage<'a>>>,$/;"	m	struct:RemoteCallbacks
sideband_progress_cb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^extern "C" fn sideband_progress_cb(str: *const c_char, len: c_int, payload: *mut c_void) -> c_in/;"	f
sift_down	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs	/^fn sift_down<T, S>(heap: &mut [T], index: usize, mut less_than: S)$/;"	f
sign	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^    pub fn sign(&self) -> char {$/;"	P	implementation:Time
signature	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod signature;$/;"	n
signature	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn signature(&self) -> Result<Signature<'static>, Error> {$/;"	P	implementation:Repository
signed_duration_since	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn signed_duration_since<Tz2: TimeZone>(self, rhs: Date<Tz2>) -> OldDuration {$/;"	P	implementation:Date
signed_duration_since	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn signed_duration_since<Tz2: TimeZone>(self, rhs: DateTime<Tz2>) -> OldDuration {$/;"	P	implementation:DateTime
signed_duration_since	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn signed_duration_since(self, rhs: NaiveDate) -> OldDuration {$/;"	P	implementation:NaiveDate
signed_duration_since	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn signed_duration_since(self, rhs: NaiveDateTime) -> OldDuration {$/;"	P	implementation:NaiveDateTime
signed_duration_since	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn signed_duration_since(self, rhs: NaiveTime) -> OldDuration {$/;"	P	implementation:NaiveTime
simplify_alnum	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    pub fn simplify_alnum(&mut self, simplify: bool) -> &mut MergeOptions {$/;"	P	implementation:MergeOptions
simplify_first_parent	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revwalk.rs	/^    pub fn simplify_first_parent(&mut self) -> Result<(), Error> {$/;"	P	implementation:Revwalk
single	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn single(self) -> Option<T> {$/;"	P	implementation:LocalResult
single_layer_can_access_closed_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn single_layer_can_access_closed_span() {$/;"	f	module:tests
six	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        fn six() {$/;"	f	module:tests::styles_combine_complex
size	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^    pub fn size(&self) -> usize {$/;"	P	implementation:Blob
size	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn size(&self) -> u64 {$/;"	P	implementation:DiffFile
size	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/patch.rs	/^    pub fn size($/;"	P	implementation:Patch
size	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    size: usize,$/;"	m	struct:ChunkIndex
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/chain.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Chain
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:NaiveDateDaysIterator
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:NaiveDateWeeksIterator
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:BlameIter
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:ParentIds
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Parents
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Deltas
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:PathspecDiffEntries
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:PathspecEntries
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:PathspecFailedEntries
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:ReflogIter
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Refspecs
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:StatusIter
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Iter
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/string_array.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:IterBytes
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:TreeIter
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod size_hint;$/;"	n
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/pad_tail.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/powerset.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:PutBackN
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/repeatn.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tee.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:WithPosition
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_longest.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
skip	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    skip: usize,$/;"	m	struct:Step
skip_binary_check	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn skip_binary_check(&mut self, skip: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
skip_reuc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    pub fn skip_reuc(&mut self, skip: bool) -> &mut MergeOptions {$/;"	P	implementation:MergeOptions
skip_unmerged	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn skip_unmerged(&mut self, skip: bool) -> &mut CheckoutBuilder<'cb> {$/;"	P	implementation:CheckoutBuilder
slice	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/stdlib.rs	/^    pub(crate) mod slice {$/;"	n	module:no_std
smart	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^    pub fn smart<S>(remote: &Remote<'_>, rpc: bool, subtransport: S) -> Result<Transport, Error>$/;"	P	implementation:Transport
smart_factory	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^        extern "C" fn smart_factory($/;"	f	method:Transport::smart
smoke	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    fn smoke() {$/;"	f	module:tests
smoke	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/branch.rs	/^    fn smoke() {$/;"	f	module:tests
smoke	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    fn smoke() {$/;"	f	module:tests
smoke	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    fn smoke() {$/;"	f	module:tests
smoke	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    fn smoke() {$/;"	f	module:tests
smoke	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    fn smoke() {$/;"	f	module:test
smoke	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^    fn smoke() {$/;"	f	module:tests
smoke	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    fn smoke() {$/;"	f	module:tests
smoke	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/error.rs	/^    fn smoke() {$/;"	f	module:tests
smoke	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    fn smoke() {$/;"	f	module:tests
smoke	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^    fn smoke() {$/;"	f	module:tests
smoke	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/opts.rs	/^    fn smoke() {$/;"	f	module:test
smoke	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    fn smoke() {$/;"	f	module:tests
smoke	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^    fn smoke() {$/;"	f	module:tests
smoke	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^    fn smoke() {$/;"	f	module:tests
smoke	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    fn smoke() {$/;"	f	module:tests
smoke	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    fn smoke() {$/;"	f	module:tests
smoke	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    fn smoke() {$/;"	f	module:tests
smoke	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revwalk.rs	/^    fn smoke() {$/;"	f	module:tests
smoke	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/signature.rs	/^    fn smoke() {$/;"	f	module:tests
smoke	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    fn smoke() {$/;"	f	module:tests
smoke	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    fn smoke() {$/;"	f	module:tests
smoke	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^    fn smoke() {$/;"	f	module:tests
smoke	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tagforeach.rs	/^    fn smoke() {$/;"	f	module:tests
smoke	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^    fn smoke() {$/;"	f	module:tests
smoke	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    fn smoke() {$/;"	f	module:tests
smoke	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/treebuilder.rs	/^    fn smoke() {$/;"	f	module:tests
smoke2	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    fn smoke2() {$/;"	f	module:tests
smoke2	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    fn smoke2() {$/;"	f	module:tests
smoke_add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    fn smoke_add() {$/;"	f	module:tests
smoke_add_from_branch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    fn smoke_add_from_branch() {$/;"	f	module:tests
smoke_add_locked	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    fn smoke_add_locked() {$/;"	f	module:tests
smoke_add_no_ref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    fn smoke_add_no_ref() {$/;"	f	module:tests
smoke_checkout	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    fn smoke_checkout() {$/;"	f	module:tests
smoke_cherrypick	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    fn smoke_cherrypick() {$/;"	f	module:tests
smoke_discover	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    fn smoke_discover() {$/;"	f	module:tests
smoke_foreach	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    fn smoke_foreach() {$/;"	f	module:tests
smoke_from_repo	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    fn smoke_from_repo() {$/;"	f	module:tests
smoke_graph_ahead_behind	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    fn smoke_graph_ahead_behind() {$/;"	f	module:tests
smoke_graph_descendant_of	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    fn smoke_graph_descendant_of() {$/;"	f	module:tests
smoke_init	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    fn smoke_init() {$/;"	f	module:tests
smoke_init_bare	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    fn smoke_init_bare() {$/;"	f	module:tests
smoke_is_path_ignored	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    fn smoke_is_path_ignored() {$/;"	f	module:tests
smoke_merge_base	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    fn smoke_merge_base() {$/;"	f	module:tests
smoke_merge_bases	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    fn smoke_merge_bases() {$/;"	f	module:tests
smoke_open	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    fn smoke_open() {$/;"	f	module:tests
smoke_open_bare	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    fn smoke_open_bare() {$/;"	f	module:tests
smoke_open_ext	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    fn smoke_open_ext() {$/;"	f	module:tests
smoke_reference_has_log_ensure_log	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    fn smoke_reference_has_log_ensure_log() {$/;"	f	module:tests
smoke_revert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    fn smoke_revert() {$/;"	f	module:tests
smoke_revparse	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    fn smoke_revparse() {$/;"	f	module:tests
smoke_revparse_ext	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    fn smoke_revparse_ext() {$/;"	f	module:tests
smoke_set_head	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    fn smoke_set_head() {$/;"	f	module:tests
smoke_set_head_detached	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    fn smoke_set_head_detached() {$/;"	f	module:tests
smoke_stash_save_apply	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/stash.rs	/^    fn smoke_stash_save_apply() {$/;"	f	module:tests
smoke_stash_save_drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/stash.rs	/^    fn smoke_stash_save_drop() {$/;"	f	module:tests
smoke_stash_save_pop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/stash.rs	/^    fn smoke_stash_save_pop() {$/;"	f	module:tests
smoke_test	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/apply.rs	/^    fn smoke_test() {$/;"	f	module:tests
smoke_tree_iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    fn smoke_tree_iter() {$/;"	f	module:tests
smoke_write_buf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    fn smoke_write_buf() {$/;"	f	module:tests
snapshot	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn snapshot(&mut self) -> Result<Config, Error> {$/;"	P	implementation:Config
sort_case_insensitively	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub fn sort_case_insensitively(&mut self, include: bool) -> &mut StatusOptions {$/;"	P	implementation:StatusOptions
sort_case_sensitively	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub fn sort_case_sensitively(&mut self, include: bool) -> &mut StatusOptions {$/;"	P	implementation:StatusOptions
sorted	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs	/^pub fn sorted<I>(iterable: I) -> VecIntoIter<I::Item>$/;"	f
sorted	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn sorted(self) -> VecIntoIter<Self::Item>$/;"	P	interface:Itertools
sorted_by	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn sorted_by<F>(self, cmp: F) -> VecIntoIter<Self::Item>$/;"	P	interface:Itertools
sorted_by_key	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn sorted_by_key<K, F>(self, f: F) -> VecIntoIter<Self::Item>$/;"	P	interface:Itertools
sorted_unstable	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn sorted_unstable(self) -> VecIntoIter<Self::Item>$/;"	P	interface:Itertools
sorted_unstable_by	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn sorted_unstable_by<F>(self, cmp: F) -> VecIntoIter<Self::Item>$/;"	P	interface:Itertools
sorted_unstable_by_key	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn sorted_unstable_by_key<K, F>(self, f: F) -> VecIntoIter<Self::Item>$/;"	P	interface:Itertools
source	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^    fn source(&self) -> Option<&(dyn StdError + 'static)> {$/;"	f
source	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    fn source(&self) -> Option<&(dyn StdError + 'static)> {$/;"	f
source	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/lib.rs	/^    fn source(&self) -> Option<&(dyn StdError + 'static)> {$/;"	P	interface:StdError
source	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/wrapper.rs	/^    fn source(&self) -> Option<&(dyn StdError + 'static)> {$/;"	P	implementation:BoxedError
source	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    fn source(&self) -> Option<&(dyn Error + 'static)> {$/;"	P	implementation:ParseError
source	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    fn source(&self) -> Option<&(dyn Error + 'static)> {$/;"	P	implementation:FromEnvError
source	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/util.rs	/^    fn source(&self) -> Option<&(dyn Error + 'static)> {$/;"	P	implementation:TryInitError
sources	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod sources;$/;"	n
sp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^macro_rules! sp {$/;"	M
space	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn space(s: &str) -> ParseResult<&str> {$/;"	f
span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn span<F>(f: F) -> Duration where F: FnOnce() {$/;"	P	implementation:Duration
span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/instrument.rs	/^    pub fn span(&self) -> &Span {$/;"	P	implementation:Instrumented
span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/lib.rs	/^pub mod span;$/;"	n
span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/macros.rs	/^macro_rules! span {$/;"	M
span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    span: &'a Span,$/;"	m	struct:Entered
span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn span(&self, id: &Id) -> Option<SpanRef<'_, S>>$/;"	f
span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    span: Option<&'a span::Id>,$/;"	m	struct:FmtCtx
span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    span: Option<&'a span::Id>,$/;"	m	struct:FullCtx
span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    pub fn span(&self, id: &span::Id) -> Option<registry::SpanRef<'_, S>>$/;"	f
span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    fn span(&'a self, id: &Id) -> Option<SpanRef<'_, Self>>$/;"	P	interface:LookupSpan
span_data	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    fn span_data(&'a self, id: &span::Id) -> Option<Self::Data> {$/;"	f
span_data	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn span_data(&'a self, id: &span::Id) -> Option<Self::Data> {$/;"	f
span_data	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^    fn span_data(&'a self, id: &Id) -> Option<Self::Data>;$/;"	P	interface:LookupSpan
span_data	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn span_data(&'a self, id: &Id) -> Option<Self::Data> {$/;"	P	implementation:Registry
span_enter_guards_are_dropped_out_of_order	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn span_enter_guards_are_dropped_out_of_order() {$/;"	f	module:tests
span_for_digits	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^fn span_for_digits(digits: u16) -> u32 {$/;"	f
span_mut	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/instrument.rs	/^    pub fn span_mut(&mut self) -> &mut Span {$/;"	P	implementation:Instrumented
spans	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    spans: Pool<DataInner>,$/;"	m	struct:Registry
spans_are_only_closed_when_the_last_ref_drops	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn spans_are_only_closed_when_the_last_ref_drops() {$/;"	f	module:tests
spans_are_removed_from_registry	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn spans_are_removed_from_registry() {$/;"	f	module:tests
specs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^mod specs {$/;"	n
src	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/refspec.rs	/^    pub fn src(&self) -> Option<&str> {$/;"	P	implementation:Refspec
src	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs	/^    pub(crate) fn src(&self) -> &I { &self.pool.it }$/;"	P	implementation:Combinations
src_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/refspec.rs	/^    pub fn src_bytes(&self) -> &[u8] {$/;"	P	implementation:Refspec
src_matches	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/refspec.rs	/^    pub fn src_matches(&self, refname: &str) -> bool {$/;"	P	implementation:Refspec
ssh_key	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    pub fn ssh_key($/;"	P	implementation:Cred
ssh_key_from_agent	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    pub fn ssh_key_from_agent(username: &str) -> Result<Cred, Error> {$/;"	P	implementation:Cred
ssh_key_from_memory	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    fn ssh_key_from_memory() {$/;"	f	module:test
ssh_key_from_memory	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    pub fn ssh_key_from_memory($/;"	P	implementation:Cred
stack	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/mod.rs	/^mod stack;$/;"	n
stack	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/stack.rs	/^    stack: Vec<ContextId>,$/;"	m	struct:SpanStack
standard_style	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    pub fn standard_style(&mut self, standard: bool) -> &mut MergeOptions {$/;"	P	implementation:MergeOptions
start_close	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    pub(crate) fn start_close(&self, id: Id) -> CloseGuard<'_> {$/;"	P	implementation:Registry
started	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/fmt.rs	/^    started: bool,$/;"	m	struct:Indented
stash	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod stash;$/;"	n
stash_apply	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn stash_apply($/;"	P	implementation:Repository
stash_apply_progress_cb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/stash.rs	/^extern "C" fn stash_apply_progress_cb($/;"	f
stash_cb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/stash.rs	/^pub extern "C" fn stash_cb($/;"	f
stash_drop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn stash_drop(&mut self, index: usize) -> Result<(), Error> {$/;"	P	implementation:Repository
stash_foreach	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn stash_foreach<C>(&mut self, mut callback: C) -> Result<(), Error>$/;"	P	implementation:Repository
stash_pop	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn stash_pop($/;"	P	implementation:Repository
stash_save	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn stash_save($/;"	P	implementation:Repository
stash_save2	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn stash_save2($/;"	P	implementation:Repository
state	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/chain.rs	/^    state: ChainState<'a>,$/;"	m	struct:Chain
state	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/lib.rs	/^    state: crate::chain::ChainState<'a>,$/;"	m	struct:Chain
state	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn state(&self) -> RepositoryState {$/;"	P	implementation:Repository
state	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs	/^    state: PermutationState,$/;"	m	struct:Permutations
state	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs	/^    pub state: St,$/;"	m	struct:Unfold
state	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs	/^    state: St,$/;"	m	struct:Iterate
state	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^        state: Arc<Mutex<CloseState>>,$/;"	m	struct:tests::CloseHandle
statics	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    statics: directive::Statics,$/;"	m	struct:EnvFilter
stats	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn stats(&self) -> Result<DiffStats, Error> {$/;"	P	implementation:Diff
stats	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn stats(&self) -> Progress<'_> {$/;"	P	implementation:Remote
status	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn status(&self) -> Delta {$/;"	P	implementation:DiffDelta
status	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod status;$/;"	n
status	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub fn status(&self) -> Status {$/;"	P	implementation:StatusEntry
status_file	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn status_file(&self, path: &Path) -> Result<Status, Error> {$/;"	P	implementation:Repository
status_file	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    fn status_file() {$/;"	f	module:tests
status_should_ignore	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn status_should_ignore(&self, path: &Path) -> Result<bool, Error> {$/;"	P	implementation:Repository
statuses	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn statuses(&self, options: Option<&mut StatusOptions>) -> Result<Statuses<'_>, Error> {$/;"	P	implementation:Repository
statuses	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    statuses: &'statuses Statuses<'statuses>,$/;"	m	struct:StatusIter
stdlib	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/lib.rs	/^pub(crate) mod stdlib;$/;"	n
step	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub fn step<I>(iter: I, step: usize) -> Step<I>$/;"	f
step	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    fn step(&mut self, client: usize) -> Option<I::Item> {$/;"	f
step	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    fn step(&self, client: usize) -> Option<I::Item> {$/;"	f
step	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    fn step(&self, client: usize) -> Option<I::Item>$/;"	f
step	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn step(self, n: usize) -> Step<Self>$/;"	P	interface:Itertools
step_buffering	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    fn step_buffering(&mut self, client: usize) -> Option<I::Item> {$/;"	f
step_current	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    fn step_current(&mut self) -> Option<I::Item> {$/;"	f
str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    static RFC850_FMT: &'static str = "%A, %d-%b-%y %T GMT";$/;"	v	function:parse_rfc850
str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^    static LONG_MONTH_SUFFIXES: [&'static str; 12] =$/;"	v	function:short_or_long_month0
str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^    static LONG_WEEKDAY_SUFFIXES: [&'static str; 7] =$/;"	v	function:short_or_long_weekday
str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^const HAVE_ALTERNATES: &'static str = "z";$/;"	v
str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^impl<'a> Colorize for &'a str {$/;"	c
str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    pub fn str(&self) -> &'static str {$/;"	P	implementation:ObjectType
str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^    pub fn str(&self) -> &'static str {$/;"	P	implementation:ReferenceType
str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/refspec.rs	/^    pub fn str(&self) -> Option<&str> {$/;"	P	implementation:Refspec
str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^impl<'a> IntoCString for &'a str {$/;"	c
str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/field.rs	/^impl AsField for str {$/;"	c
str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/field.rs	/^impl crate::sealed::Sealed for str {}$/;"	c
str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/stdlib.rs	/^    pub(crate) mod str {$/;"	n	module:no_std
str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    pub const DEFAULT_ENV: &'static str = "RUST_LOG";$/;"	v	implementation:EnvFilter
str_matches	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    fn str_matches(&self, s: &impl AsRef<str>) -> bool {$/;"	P	implementation:MatchPattern
stream	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^    fn stream() {$/;"	f	module:tests
stream_free	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^extern "C" fn stream_free(stream: *mut raw::git_smart_subtransport_stream) {$/;"	f
stream_read	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^extern "C" fn stream_read($/;"	f
stream_write	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^extern "C" fn stream_write($/;"	f
strftime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub mod strftime;$/;"	n
strftime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn strftime<'a>(&'a self, format: &'a str) -> Result<TmFmt<'a>, ParseError> {$/;"	P	implementation:Tm
strftime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn strftime(format: &str, tm: &Tm) -> Result<String, ParseError> {$/;"	f
strict_hash_verification	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/opts.rs	/^pub fn strict_hash_verification(enabled: bool) {$/;"	f
strict_object_creation	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/opts.rs	/^pub fn strict_object_creation(enabled: bool) {$/;"	f
strikethrough	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn strikethrough(mut self) -> ColoredString {$/;"	P	implementation:ColoredString
strikethrough	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn strikethrough(self) -> ColoredString {$/;"	P	implementation:str
strikethrough	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn strikethrough(self) -> ColoredString;$/;"	P	interface:Colorize
string_array	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^pub mod string_array;$/;"	n
strptime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/parse.rs	/^pub fn strptime(mut s: &str, format: &str) -> Result<Tm, ParseError> {$/;"	f
structs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^pub mod structs {$/;"	n
style	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    pub fn style(&self) -> style::Style {$/;"	P	implementation:ColoredString
style	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    style: style::Style,$/;"	m	struct:ColoredString
style	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^mod style;$/;"	n
style	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^    style: Style,$/;"	m	struct:PrettyVisitor
style_for	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^    fn style_for(level: &Level) -> Style {$/;"	P	implementation:Pretty
style_from_multiples	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        fn style_from_multiples(styles: &[Styles]) -> Style {$/;"	f	module:tests::styles_combine_complex
styles_combine_complex	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^    mod styles_combine_complex {$/;"	n	module:tests
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn sub(self, rhs: Date<Tz>) -> OldDuration {$/;"	P	implementation:Date
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn sub(self, rhs: OldDuration) -> Date<Tz> {$/;"	P	implementation:Date
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn sub(self, rhs: DateTime<Tz>) -> OldDuration {$/;"	P	implementation:DateTime
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn sub(self, rhs: OldDuration) -> DateTime<Tz> {$/;"	P	implementation:DateTime
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn sub(self, rhs: NaiveDate) -> OldDuration {$/;"	P	implementation:NaiveDate
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn sub(self, rhs: OldDuration) -> NaiveDate {$/;"	P	implementation:NaiveDate
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn sub(self, rhs: NaiveDateTime) -> OldDuration {$/;"	P	implementation:NaiveDateTime
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn sub(self, rhs: OldDuration) -> NaiveDateTime {$/;"	P	implementation:NaiveDateTime
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn sub(self, rhs: NaiveTime) -> OldDuration {$/;"	P	implementation:NaiveTime
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn sub(self, rhs: OldDuration) -> NaiveTime {$/;"	P	implementation:NaiveTime
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn sub(self, rhs: FixedOffset) -> DateTime<Tz> {$/;"	P	implementation:DateTime
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn sub(self, rhs: FixedOffset) -> NaiveDateTime {$/;"	P	implementation:NaiveDateTime
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn sub(self, rhs: FixedOffset) -> NaiveTime {$/;"	P	implementation:NaiveTime
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn sub(self, rhs: Duration) -> Duration {$/;"	P	implementation:Duration
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn sub(self, rhs: Duration) -> Duration {$/;"	P	implementation:Duration
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn sub(self, other: Duration) -> SteadyTime {$/;"	P	implementation:SteadyTime
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn sub(self, other: Duration) -> Timespec {$/;"	P	implementation:Timespec
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn sub(self, other: Duration) -> Tm {$/;"	P	implementation:Tm
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn sub(self, other: SteadyTime) -> Duration {$/;"	P	implementation:SteadyTime
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn sub(self, other: Timespec) -> Duration {$/;"	P	implementation:Timespec
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn sub(self, other: Tm) -> Duration {$/;"	P	implementation:Tm
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn sub(self, other: Duration) -> SteadyTime {$/;"	P	implementation:inner::mac::SteadyTime
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn sub(self, other: Duration) -> SteadyTime {$/;"	P	implementation:inner::unix::SteadyTime
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn sub(self, other: SteadyTime) -> Duration {$/;"	P	implementation:inner::mac::SteadyTime
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn sub(self, other: SteadyTime) -> Duration {$/;"	P	implementation:inner::unix::SteadyTime
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn sub(self, _other: Duration) -> SteadyTime {$/;"	P	implementation:inner::SteadyTime
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn sub(self, _other: SteadyTime) -> Duration {$/;"	P	implementation:inner::SteadyTime
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn sub(self, other: Duration) -> SteadyTime {$/;"	P	implementation:inner::SteadyTime
sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn sub(self, other: SteadyTime) -> Duration {$/;"	P	implementation:inner::SteadyTime
sub_assign	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn sub_assign(&mut self, rhs: OldDuration) {$/;"	P	implementation:NaiveDate
sub_assign	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn sub_assign(&mut self, rhs: OldDuration) {$/;"	P	implementation:NaiveDateTime
sub_assign	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn sub_assign(&mut self, rhs: OldDuration) {$/;"	P	implementation:NaiveTime
sub_scalar	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/size_hint.rs	/^pub fn sub_scalar(sh: SizeHint, x: usize) -> SizeHint {$/;"	f
submodule	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod submodule;$/;"	n
submodule	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn submodule($/;"	P	implementation:Repository
submodule_status	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn submodule_status($/;"	P	implementation:Repository
submodules	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn submodules(&self) -> Result<Vec<Submodule<'_>>, Error> {$/;"	P	implementation:Repository
subscriber	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/lib.rs	/^pub mod subscriber;$/;"	n
subscriber	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    subscriber: Dispatch,$/;"	m	struct:Inner
subscriber	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    subscriber: Option<&'a S>,$/;"	m	struct:Context
subscriber_downcasts	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    fn subscriber_downcasts() {$/;"	f	module:test
subscriber_downcasts_to_parts	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    fn subscriber_downcasts_to_parts() {$/;"	f	module:test
subtransport_action	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^extern "C" fn subtransport_action($/;"	f
subtransport_close	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^extern "C" fn subtransport_close(transport: *mut raw::git_smart_subtransport) -> c_int {$/;"	f
subtransport_free	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^extern "C" fn subtransport_free(transport: *mut raw::git_smart_subtransport) {$/;"	f
succ	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn succ(&self) -> Date<Tz> {$/;"	P	implementation:Date
succ	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn succ(&self) -> Month {$/;"	P	implementation:Month
succ	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn succ(&self) -> Weekday {$/;"	P	implementation:Weekday
succ	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn succ(&self) -> NaiveDate {$/;"	P	implementation:NaiveDate
succ	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn succ(&self) -> Of {$/;"	P	implementation:Of
succ_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn succ_opt(&self) -> Option<Date<Tz>> {$/;"	P	implementation:Date
succ_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn succ_opt(&self) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
sum	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs	/^    pub fn sum(self) -> HashMap<K, V>$/;"	f
sum1	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn sum1<S>(mut self) -> Option<S>$/;"	P	interface:Itertools
summary	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    pub fn summary(&self) -> Option<&str> {$/;"	P	implementation:Commit
summary	/home/asayers/projects/orpa/src/main.rs	/^fn summary(repo: &Repository) -> anyhow::Result<()> {$/;"	f
summary_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    pub fn summary_bytes(&self) -> Option<&[u8]> {$/;"	P	implementation:Commit
symbolic_target	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    pub fn symbolic_target(&self) -> Option<&str> {$/;"	P	implementation:Reference
symbolic_target_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    pub fn symbolic_target_bytes(&self) -> Option<&[u8]> {$/;"	P	implementation:Reference
symref_target	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn symref_target(&self) -> Option<&str> {$/;"	P	implementation:RemoteHead
sync	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    pub fn sync(&mut self) -> Result<(), Error> {$/;"	P	implementation:Submodule
sync	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/stdlib.rs	/^    pub(crate) mod sync {$/;"	n	module:no_std
sync	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/lib.rs	/^pub(crate) mod sync;$/;"	n
synthesize_span_active	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    fn synthesize_span_active() {$/;"	f	module:test
synthesize_span_close	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    fn synthesize_span_close() {$/;"	f	module:test
synthesize_span_close_no_timing	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    fn synthesize_span_close_no_timing() {$/;"	f	module:test
synthesize_span_full	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    fn synthesize_span_full() {$/;"	f	module:test
synthesize_span_none	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    fn synthesize_span_none() {$/;"	f	module:test
sys	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^mod sys;$/;"	n
sys	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^mod sys;$/;"	n
system_time_to_file_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^fn system_time_to_file_time(sys: &SYSTEMTIME) -> FILETIME {$/;"	f
system_time_to_file_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn system_time_to_file_time(sys: &SYSTEMTIME) -> FILETIME {$/;"	f	module:inner
system_time_to_tm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^fn system_time_to_tm(sys: &SYSTEMTIME, tm: &mut Tm) {$/;"	f
system_time_to_tm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn system_time_to_tm(sys: &SYSTEMTIME, tm: &mut Tm) {$/;"	f	module:inner
t	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/test.rs	/^macro_rules! t {$/;"	M
t	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs	/^    t: T,$/;"	m	struct:Zip
t	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            t: libc::timespec,$/;"	m	struct:inner::unix::SteadyTime
t	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        pub struct SteadyTime { t: u64 }$/;"	m	struct:inner::mac::SteadyTime
t	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        t: Duration$/;"	m	struct:inner::SteadyTime
t	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        t: i64,$/;"	m	struct:inner::SteadyTime
t	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        t: u64$/;"	m	struct:inner::SteadyTime
t_fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/locales.rs	/^pub(crate) fn t_fmt(locale: Locale) -> &'static str {$/;"	f
t_fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^    t_fmt: Fmt<'a>,$/;"	m	struct:StrftimeItems
tag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod tag;$/;"	n
tag	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn tag($/;"	P	implementation:Repository
tag_delete	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn tag_delete(&self, name: &str) -> Result<(), Error> {$/;"	P	implementation:Repository
tag_foreach	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn tag_foreach<T>(&self, cb: T) -> Result<(), Error>$/;"	P	implementation:Repository
tag_foreach_cb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tagforeach.rs	/^pub(crate) extern "C" fn tag_foreach_cb($/;"	f
tag_lightweight	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn tag_lightweight($/;"	P	implementation:Repository
tag_names	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn tag_names(&self, pattern: Option<&str>) -> Result<StringArray, Error> {$/;"	P	implementation:Repository
tagforeach	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod tagforeach;$/;"	n
tagger	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^    pub fn tagger(&self) -> Option<Signature<'_>> {$/;"	P	implementation:Tag
tail	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs	/^    tail: I,$/;"	m	struct:HeadTail
take_while_ref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub fn take_while_ref<I, F>(iter: &mut I, f: F) -> TakeWhileRef<I, F>$/;"	f
take_while_ref	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn take_while_ref<F>(&mut self, accept: F) -> TakeWhileRef<Self, F>$/;"	P	interface:Itertools
target	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    pub fn target(&self) -> Option<Oid> {$/;"	P	implementation:Reference
target	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^    pub fn target(&self) -> Result<Object<'repo>, Error> {$/;"	P	implementation:Tag
target	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    target: Option<String>,$/;"	m	struct:StaticDirective
target_dir	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn target_dir(&mut self, dst: &Path) -> &mut CheckoutBuilder<'cb> {$/;"	P	implementation:CheckoutBuilder
target_dir	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    target_dir: Option<CString>,$/;"	m	struct:CheckoutBuilder
target_id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^    pub fn target_id(&self) -> Oid {$/;"	P	implementation:Tag
target_limit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/merge.rs	/^    pub fn target_limit(&mut self, limit: u32) -> &mut MergeOptions {$/;"	P	implementation:MergeOptions
target_peel	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^    pub fn target_peel(&self) -> Option<Oid> {$/;"	P	implementation:Reference
target_type	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^    pub fn target_type(&self) -> Option<ObjectType> {$/;"	P	implementation:Tag
tee	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn tee(self) -> (Tee<Self>, Tee<Self>)$/;"	P	interface:Itertools
tee	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod tee;$/;"	n
template_path	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn template_path(&mut self, path: &Path) -> &mut RepositoryInitOptions {$/;"	P	implementation:RepositoryInitOptions
template_path	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    template_path: Option<CString>,$/;"	m	struct:RepositoryInitOptions
test	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^mod test {$/;"	n
test	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^mod test {$/;"	n
test	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod test;$/;"	n
test	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/opts.rs	/^mod test {$/;"	n
test	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^        fn test(s: &str, format: &str) -> bool {$/;"	f	function:tests::test_strptime
test	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^mod test {$/;"	n
test	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^mod test {$/;"	n
test	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^mod test {$/;"	n
test	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^mod test {$/;"	n
test	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^mod test {$/;"	n
test	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^pub(super) mod test {$/;"	n
test	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^mod test {$/;"	n
test	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^mod test {$/;"	n
test_aggreg	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        macro_rules! test_aggreg {$/;"	M	module:tests::styles_combine_complex
test_ansi	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn test_ansi<T>(make_writer: T, expected: &str, is_ansi: bool, buf: &Mutex<Vec<u8>>)$/;"	f	module:test
test_asctime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_asctime() {$/;"	f	module:tests
test_at	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_at() {$/;"	f	module:tests
test_at_utc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_at_utc() {$/;"	f	module:tests
test_auto_conversion	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^fn test_auto_conversion() {$/;"	f
test_cfg	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    macro_rules! test_cfg( ($($k:expr => $v:expr),*) => ({$/;"	M	module:test
test_combine	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        macro_rules! test_combine {$/;"	M	module:tests::styles_combine_complex
test_conversions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_conversions() {$/;"	f	module:tests
test_ctime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_ctime() {$/;"	f	module:tests
test_date_add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_add() {$/;"	f	module:tests
test_date_addassignment	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_addassignment() {$/;"	f	module:tests
test_date_before_1970	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_date_before_1970() {$/;"	f	module:tests
test_date_bounds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^fn test_date_bounds() {$/;"	f
test_date_extreme_offset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn test_date_extreme_offset() {$/;"	f	module:tests
test_date_fields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_fields() {$/;"	f	module:tests
test_date_fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_fmt() {$/;"	f	module:tests
test_date_format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_format() {$/;"	f	module:tests
test_date_from_isoywd	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_from_isoywd() {$/;"	f	module:tests
test_date_from_isoywd_and_iso_week	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_from_isoywd_and_iso_week() {$/;"	f	module:tests
test_date_from_num_days_from_ce	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_from_num_days_from_ce() {$/;"	f	module:tests
test_date_from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_from_str() {$/;"	f	module:tests
test_date_from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_date_from_str() {$/;"	f	module:tests
test_date_from_weekday_of_month_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_from_weekday_of_month_opt() {$/;"	f	module:tests
test_date_from_ymd	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_from_ymd() {$/;"	f	module:tests
test_date_from_yo	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_from_yo() {$/;"	f	module:tests
test_date_num_days_from_ce	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_num_days_from_ce() {$/;"	f	module:tests
test_date_parse_from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_parse_from_str() {$/;"	f	module:tests
test_date_pred	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_pred() {$/;"	f	module:tests
test_date_sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_sub() {$/;"	f	module:tests
test_date_subassignment	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_subassignment() {$/;"	f	module:tests
test_date_succ	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_succ() {$/;"	f	module:tests
test_date_weekday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_weekday() {$/;"	f	module:tests
test_date_with_fields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_with_fields() {$/;"	f	module:tests
test_datetime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/datetime.rs	/^    fn test_datetime() {$/;"	f	module:tests
test_datetime_add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_add() {$/;"	f	module:tests
test_datetime_add_sub_invariant	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_add_sub_invariant() {$/;"	f	module:tests
test_datetime_addassignment	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_addassignment() {$/;"	f	module:tests
test_datetime_date_and_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_date_and_time() {$/;"	f	module:tests
test_datetime_format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_format() {$/;"	f	module:tests
test_datetime_format_alignment	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_format_alignment() {$/;"	f	module:tests
test_datetime_format_with_local	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_format_with_local() {$/;"	f	module:tests
test_datetime_from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_from_str() {$/;"	f	module:tests
test_datetime_from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_from_str() {$/;"	f	module:tests
test_datetime_from_timestamp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_from_timestamp() {$/;"	f	module:tests
test_datetime_is_copy	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_is_copy() {$/;"	f	module:tests
test_datetime_is_send	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_is_send() {$/;"	f	module:tests
test_datetime_offset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_offset() {$/;"	f	module:tests
test_datetime_parse_from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_parse_from_str() {$/;"	f	module:tests
test_datetime_parse_from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_parse_from_str() {$/;"	f	module:tests
test_datetime_rfc2822_and_rfc3339	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_rfc2822_and_rfc3339() {$/;"	f	module:tests
test_datetime_sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_sub() {$/;"	f	module:tests
test_datetime_subassignment	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_subassignment() {$/;"	f	module:tests
test_datetime_timestamp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_timestamp() {$/;"	f	module:tests
test_datetime_with_timezone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_with_timezone() {$/;"	f	module:tests
test_day_iterator_limit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_day_iterator_limit() {$/;"	f	module:tests
test_decodable	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_decodable() {$/;"	f	module:rustc_serialize
test_decodable	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_decodable() {$/;"	f	module:rustc_serialize
test_decodable	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_decodable() {$/;"	f	module:rustc_serialize
test_decodable	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_decodable() {$/;"	f	module:rustc_serialize
test_decodable_json	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^fn test_decodable_json<FUtc, FFixed, FLocal, E>($/;"	f
test_decodable_json	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^fn test_decodable_json<F, E>(from_str: F)$/;"	f
test_decodable_json	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^fn test_decodable_json<F, E>(from_str: F)$/;"	f
test_decodable_json	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^fn test_decodable_json<F, E>(from_str: F)$/;"	f
test_decodable_json_timestamp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^fn test_decodable_json_timestamp<F, E>(from_str: F)$/;"	f
test_decodable_json_timestamps	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^fn test_decodable_json_timestamps<FUtc, FFixed, FLocal, E>($/;"	f
test_decodable_timestamps	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_decodable_timestamps() {$/;"	f	module:rustc_serialize
test_decodable_timestamps	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_decodable_timestamps() {$/;"	f	module:rustc_serialize
test_div_mod_floor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/div.rs	/^    fn test_div_mod_floor() {$/;"	f	module:tests
test_dst	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_dst() {$/;"	f	module:tests
test_duration	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration() {$/;"	f	module:tests
test_duration	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration() {$/;"	f	module:tests
test_duration_checked_ops	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration_checked_ops() {$/;"	f	module:tests
test_duration_checked_ops	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration_checked_ops() {$/;"	f	module:tests
test_duration_div	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration_div() {$/;"	f	module:tests
test_duration_div	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration_div() {$/;"	f	module:tests
test_duration_fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration_fmt() {$/;"	f	module:tests
test_duration_fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration_fmt() {$/;"	f	module:tests
test_duration_mul	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration_mul() {$/;"	f	module:tests
test_duration_mul	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration_mul() {$/;"	f	module:tests
test_duration_num_days	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration_num_days() {$/;"	f	module:tests
test_duration_num_days	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration_num_days() {$/;"	f	module:tests
test_duration_num_microseconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration_num_microseconds() {$/;"	f	module:tests
test_duration_num_microseconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration_num_microseconds() {$/;"	f	module:tests
test_duration_num_milliseconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration_num_milliseconds() {$/;"	f	module:tests
test_duration_num_milliseconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration_num_milliseconds() {$/;"	f	module:tests
test_duration_num_nanoseconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration_num_nanoseconds() {$/;"	f	module:tests
test_duration_num_nanoseconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration_num_nanoseconds() {$/;"	f	module:tests
test_duration_num_seconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration_num_seconds() {$/;"	f	module:tests
test_duration_num_seconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration_num_seconds() {$/;"	f	module:tests
test_duration_round	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn test_duration_round() {$/;"	f	module:tests
test_duration_round_pre_epoch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn test_duration_round_pre_epoch() {$/;"	f	module:tests
test_duration_trunc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn test_duration_trunc() {$/;"	f	module:tests
test_duration_trunc_pre_epoch	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn test_duration_trunc_pre_epoch() {$/;"	f	module:tests
test_encodable	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_encodable() {$/;"	f	module:rustc_serialize
test_encodable	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_encodable() {$/;"	f	module:rustc_serialize
test_encodable	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_encodable() {$/;"	f	module:rustc_serialize
test_encodable	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_encodable() {$/;"	f	module:rustc_serialize
test_encodable_json	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^fn test_encodable_json<FUtc, FFixed, E>(to_string_utc: FUtc, to_string_fixed: FFixed)$/;"	f
test_encodable_json	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^fn test_encodable_json<F, E>(to_string: F)$/;"	f
test_encodable_json	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^fn test_encodable_json<F, E>(to_string: F)$/;"	f
test_encodable_json	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^fn test_encodable_json<F, E>(to_string: F)$/;"	f
test_extensions	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^    fn test_extensions() {$/;"	f	module:tests
test_from_std	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_from_std() {$/;"	f	module:tests
test_from_std	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_from_std() {$/;"	f	module:tests
test_from_system_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_from_system_time() {$/;"	f	module:tests
test_get_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_get_time() {$/;"	f	module:tests
test_iso_week_extremes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^    fn test_iso_week_extremes() {$/;"	f	module:tests
test_json	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    fn test_json<T, U>($/;"	f	module:test
test_leap_second	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn test_leap_second() {$/;"	f	module:tests
test_local_date_sanity_check	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn test_local_date_sanity_check() {$/;"	f	module:tests
test_mdf_fields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_mdf_fields() {$/;"	f	module:tests
test_mdf_to_of	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_mdf_to_of() {$/;"	f	module:tests
test_mdf_to_of_to_mdf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_mdf_to_of_to_mdf() {$/;"	f	module:tests
test_mdf_valid	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_mdf_valid() {$/;"	f	module:tests
test_mdf_with_fields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_mdf_with_fields() {$/;"	f	module:tests
test_mod_floor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/div.rs	/^    fn test_mod_floor() {$/;"	f	module:tests
test_month_enum_primitive_parse	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn test_month_enum_primitive_parse() {$/;"	f	module:test
test_month_enum_succ_pred	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^fn test_month_enum_succ_pred() {$/;"	f
test_muldiv	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn test_muldiv() {$/;"	f	module:inner
test_nanos_never_panics	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn test_nanos_never_panics() {$/;"	f	module:tests
test_nanosecond_range	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_nanosecond_range() {$/;"	f	module:tests
test_negative_millis	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn test_negative_millis() {$/;"	f	module:tests
test_negative_nanos	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn test_negative_nanos() {$/;"	f	module:tests
test_num_days_from_ce_against_alternative_impl	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^fn test_num_days_from_ce_against_alternative_impl() {$/;"	f
test_of	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_of() {$/;"	f	module:tests
test_of_fields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_of_fields() {$/;"	f	module:tests
test_of_isoweekdate_raw	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_of_isoweekdate_raw() {$/;"	f	module:tests
test_of_to_mdf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_of_to_mdf() {$/;"	f	module:tests
test_of_to_mdf_to_of	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_of_to_mdf_to_of() {$/;"	f	module:tests
test_of_weekday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_of_weekday() {$/;"	f	module:tests
test_of_with_fields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_of_with_fields() {$/;"	f	module:tests
test_oneway	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^        fn test_oneway(s : &str, format : &str) -> bool {$/;"	f	function:tests::test_strptime
test_parse	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^fn test_parse() {$/;"	f
test_parsed_set_fields	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    fn test_parsed_set_fields() {$/;"	f	module:tests
test_parsed_to_datetime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    fn test_parsed_to_datetime() {$/;"	f	module:tests
test_parsed_to_datetime_with_timezone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    fn test_parsed_to_datetime_with_timezone() {$/;"	f	module:tests
test_parsed_to_naive_date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    fn test_parsed_to_naive_date() {$/;"	f	module:tests
test_parsed_to_naive_datetime_with_offset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    fn test_parsed_to_naive_datetime_with_offset() {$/;"	f	module:tests
test_parsed_to_naive_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    fn test_parsed_to_naive_time() {$/;"	f	module:tests
test_precise_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_precise_time() {$/;"	f	module:tests
test_precise_time_to	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_precise_time_to() {$/;"	f	module:tests
test_readme_doomsday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn test_readme_doomsday() {$/;"	f	module:test
test_rfc2822	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^fn test_rfc2822() {$/;"	f
test_rfc3339	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^fn test_rfc3339() {$/;"	f
test_rfc3339_opts	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_rfc3339_opts() {$/;"	f	module:tests
test_rfc3339_opts_nonexhaustive	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_rfc3339_opts_nonexhaustive() {$/;"	f	module:tests
test_round_leap_nanos	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn test_round_leap_nanos() {$/;"	f	module:tests
test_round_subsecs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn test_round_subsecs() {$/;"	f	module:tests
test_serde_bincode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_serde_bincode() {$/;"	f	module:serde
test_serde_bincode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_serde_bincode() {$/;"	f	module:serde
test_serde_bincode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_serde_bincode() {$/;"	f	module:serde
test_serde_bincode	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_serde_bincode() {$/;"	f	module:serde
test_serde_bincode_optional	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_serde_bincode_optional() {$/;"	f	module:serde
test_serde_deserialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_serde_deserialize() {$/;"	f	module:serde
test_serde_deserialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn test_serde_deserialize() {$/;"	f	module:month_serde
test_serde_deserialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn test_serde_deserialize() {$/;"	f	module:weekday_serde
test_serde_deserialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_serde_deserialize() {$/;"	f	module:serde
test_serde_deserialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_serde_deserialize() {$/;"	f	module:serde
test_serde_deserialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_serde_deserialize() {$/;"	f	module:serde
test_serde_serialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_serde_serialize() {$/;"	f	module:serde
test_serde_serialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn test_serde_serialize() {$/;"	f	module:month_serde
test_serde_serialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn test_serde_serialize() {$/;"	f	module:weekday_serde
test_serde_serialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_serde_serialize() {$/;"	f	module:serde
test_serde_serialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_serde_serialize() {$/;"	f	module:serde
test_serde_serialize	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_serde_serialize() {$/;"	f	module:serde
test_stash_save2_msg_none	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/stash.rs	/^    fn test_stash_save2_msg_none() {$/;"	f	module:tests
test_steadytime_sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_steadytime_sub() {$/;"	f	module:tests
test_strftime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_strftime() {$/;"	f	module:tests
test_strftime_docs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^fn test_strftime_docs() {$/;"	f
test_strftime_docs_localized	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^fn test_strftime_docs_localized() {$/;"	f
test_strftime_items	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^fn test_strftime_items() {$/;"	f
test_strptime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_strptime() {$/;"	f	module:tests
test_style_contains	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^    fn test_style_contains() {$/;"	f	module:tests
test_subsecond_part	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_subsecond_part() {$/;"	f	module:tests
test_time_add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_add() {$/;"	f	module:tests
test_time_addassignment	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_addassignment() {$/;"	f	module:tests
test_time_fmt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_fmt() {$/;"	f	module:tests
test_time_format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_format() {$/;"	f	module:tests
test_time_from_hms_micro	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_from_hms_micro() {$/;"	f	module:tests
test_time_from_hms_milli	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_from_hms_milli() {$/;"	f	module:tests
test_time_hms	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_hms() {$/;"	f	module:tests
test_time_overflowing_add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_overflowing_add() {$/;"	f	module:tests
test_time_parse_from_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_parse_from_str() {$/;"	f	module:tests
test_time_sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_sub() {$/;"	f	module:tests
test_time_sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_time_sub() {$/;"	f	module:tests
test_time_subassignment	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_subassignment() {$/;"	f	module:tests
test_timespec_add	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_timespec_add() {$/;"	f	module:tests
test_timespec_eq_ord	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_timespec_eq_ord() {$/;"	f	module:tests
test_timespec_hash	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_timespec_hash() {$/;"	f	module:tests
test_timespec_sub	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_timespec_sub() {$/;"	f	module:tests
test_to_std	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_to_std() {$/;"	f	module:tests
test_to_std	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_to_std() {$/;"	f	module:tests
test_to_string_round_trip	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_to_string_round_trip() {$/;"	f	module:tests
test_to_string_round_trip_with_local	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_to_string_round_trip_with_local() {$/;"	f	module:tests
test_to_timespec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_to_timespec() {$/;"	f	module:tests
test_trunc_leap_nanos	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn test_trunc_leap_nanos() {$/;"	f	module:tests
test_trunc_subsecs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn test_trunc_subsecs() {$/;"	f	module:tests
test_util	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^pub(in crate::field) mod test_util {$/;"	n
test_week_iterator_limit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_week_iterator_limit() {$/;"	f	module:tests
test_writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^    fn test_writer<T>(make_writer: T, msg: &str, buf: &Mutex<Vec<u8>>)$/;"	f	module:test
test_year_flags_ndays_from_year	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_year_flags_ndays_from_year() {$/;"	f	module:tests
test_year_flags_nisoweeks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_year_flags_nisoweeks() {$/;"	f	module:tests
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/fmt.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/div.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/apply.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/branch.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/describe.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/error.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/message.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/note.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/pathspec.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/rebase.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reference.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revwalk.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/signature.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/stash.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tag.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tagforeach.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/time.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/treebuilder.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/datetime.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^pub(crate) mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^mod tests {$/;"	n
tests	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/stack.rs	/^mod tests {$/;"	n
their	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub their: Option<IndexEntry>,$/;"	m	struct:IndexConflict
their_label	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn their_label(&mut self, label: &str) -> &mut CheckoutBuilder<'cb> {$/;"	P	implementation:CheckoutBuilder
their_label	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    their_label: Option<CString>,$/;"	m	struct:CheckoutBuilder
thread	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/lib.rs	/^pub(crate) mod thread;$/;"	n
three1	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        fn three1() {$/;"	f	module:tests::styles_combine_complex
three2	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        fn three2() {$/;"	f	module:tests::styles_combine_complex
three_layers_are_subscriber	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn three_layers_are_subscriber() {$/;"	f	module:tests
time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn time(&self) -> NaiveTime {$/;"	P	implementation:DateTime
time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    time: Option<NaiveTime>,$/;"	m	struct:DelayedFormat
time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    mod time;$/;"	n	module:naive
time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn time(&self) -> NaiveTime {$/;"	P	implementation:NaiveDateTime
time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    time: NaiveTime,$/;"	m	struct:NaiveDateTime
time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    pub fn time(&self) -> Time {$/;"	P	implementation:Commit
time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod time;$/;"	n
time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^pub mod time;$/;"	n
time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^pub fn time() -> SystemTime {$/;"	f
time_to_chrono	/home/asayers/projects/orpa/src/main.rs	/^fn time_to_chrono(time: Time) -> chrono::NaiveDateTime {$/;"	f
time_to_file_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^fn time_to_file_time(sec: i64) -> FILETIME {$/;"	f
time_to_file_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn time_to_file_time(sec: i64) -> FILETIME {$/;"	f	module:inner
time_to_local_tm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/stub.rs	/^pub fn time_to_local_tm(sec: i64, tm: &mut Tm) {$/;"	f
time_to_local_tm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^pub fn time_to_local_tm(sec: i64, tm: &mut Tm) {$/;"	f
time_to_local_tm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^pub fn time_to_local_tm(sec: i64, tm: &mut Tm) {$/;"	f
time_to_local_tm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn time_to_local_tm(sec: i64, tm: &mut Tm) {$/;"	f	module:inner
time_to_tm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/stub.rs	/^fn time_to_tm(ts: i64, tm: &mut Tm) {$/;"	f
time_to_tm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn time_to_tm(ts: i64, tm: &mut Tm) {$/;"	f	module:common
time_to_utc_tm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn time_to_utc_tm(sec: i64, tm: &mut Tm) {$/;"	f	module:inner
timegm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^unsafe fn timegm(tm: *mut libc::tm) -> time_t {$/;"	f
timegm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    unsafe fn timegm(tm: *mut libc::tm) -> time_t {$/;"	f	module:inner
timestamp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn timestamp(&self) -> i64 {$/;"	P	implementation:DateTime
timestamp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub timestamp: Option<i64>,$/;"	m	struct:Parsed
timestamp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn timestamp(&self) -> i64 {$/;"	P	implementation:NaiveDateTime
timestamp	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn timestamp(&self, secs: i64, nsecs: u32) -> DateTime<Self> {$/;"	P	interface:TimeZone
timestamp_millis	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn timestamp_millis(&self) -> i64 {$/;"	P	implementation:DateTime
timestamp_millis	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn timestamp_millis(&self) -> i64 {$/;"	P	implementation:NaiveDateTime
timestamp_millis	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn timestamp_millis(&self, millis: i64) -> DateTime<Self> {$/;"	P	interface:TimeZone
timestamp_millis_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn timestamp_millis_opt(&self, millis: i64) -> LocalResult<DateTime<Self>> {$/;"	P	interface:TimeZone
timestamp_nanos	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn timestamp_nanos(&self) -> i64 {$/;"	P	implementation:DateTime
timestamp_nanos	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn timestamp_nanos(&self) -> i64 {$/;"	P	implementation:NaiveDateTime
timestamp_nanos	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn timestamp_nanos(&self, nanos: i64) -> DateTime<Self> {$/;"	P	interface:TimeZone
timestamp_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn timestamp_opt(&self, secs: i64, nsecs: u32) -> LocalResult<DateTime<Self>> {$/;"	P	interface:TimeZone
timestamp_subsec_micros	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn timestamp_subsec_micros(&self) -> u32 {$/;"	P	implementation:DateTime
timestamp_subsec_micros	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn timestamp_subsec_micros(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
timestamp_subsec_millis	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn timestamp_subsec_millis(&self) -> u32 {$/;"	P	implementation:DateTime
timestamp_subsec_millis	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn timestamp_subsec_millis(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
timestamp_subsec_nanos	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn timestamp_subsec_nanos(&self) -> u32 {$/;"	P	implementation:DateTime
timestamp_subsec_nanos	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn timestamp_subsec_nanos(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
timezone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn timezone(&self) -> Tz {$/;"	P	implementation:Date
timezone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn timezone(&self) -> Tz {$/;"	P	implementation:DateTime
timezone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^    static timezone: time_t;$/;"	v
timezone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        static timezone: time_t;$/;"	v	module:inner
timezone_name_skip	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn timezone_name_skip(s: &str) -> ParseResult<(&str, ())> {$/;"	f
timezone_offset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn timezone_offset<F>(s: &str, consume_colon: F) -> ParseResult<(&str, i32)>$/;"	f
timezone_offset_2822	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn timezone_offset_2822(s: &str) -> ParseResult<(&str, Option<i32>)> {$/;"	f
timezone_offset_internal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^fn timezone_offset_internal<F>($/;"	f
timezone_offset_permissive	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn timezone_offset_permissive<F>(s: &str, colon: F) -> ParseResult<(&str, i32)>$/;"	f
timezone_offset_zulu	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn timezone_offset_zulu<F>(s: &str, colon: F) -> ParseResult<(&str, i32)>$/;"	f
tm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    tm: &'a Tm,$/;"	m	struct:TmFmt
tm_hour	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub tm_hour: i32,$/;"	m	struct:Tm
tm_hour	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub tm_hour: i32,$/;"	m	struct:Tm
tm_isdst	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub tm_isdst: i32,$/;"	m	struct:Tm
tm_isdst	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub tm_isdst: i32,$/;"	m	struct:Tm
tm_mday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub tm_mday: i32,$/;"	m	struct:Tm
tm_mday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub tm_mday: i32,$/;"	m	struct:Tm
tm_min	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub tm_min: i32,$/;"	m	struct:Tm
tm_min	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub tm_min: i32,$/;"	m	struct:Tm
tm_mon	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub tm_mon: i32,$/;"	m	struct:Tm
tm_mon	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub tm_mon: i32,$/;"	m	struct:Tm
tm_nsec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub tm_nsec: i32,$/;"	m	struct:Tm
tm_nsec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub tm_nsec: i32,$/;"	m	struct:Tm
tm_sec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub tm_sec: i32,$/;"	m	struct:Tm
tm_sec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub tm_sec: i32,$/;"	m	struct:Tm
tm_to_datetime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^fn tm_to_datetime(mut tm: sys::Tm) -> DateTime<Local> {$/;"	f
tm_to_naive_date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn tm_to_naive_date(tm: &sys::Tm) -> NaiveDate {$/;"	f	function:tm_to_datetime
tm_to_rust_tm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^fn tm_to_rust_tm(tm: &libc::tm, utcoff: i32, rust_tm: &mut Tm) {$/;"	f
tm_to_rust_tm	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn tm_to_rust_tm(tm: &libc::tm, utcoff: i32, rust_tm: &mut Tm) {$/;"	f	module:inner
tm_to_system_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^fn tm_to_system_time(tm: &Tm) -> SYSTEMTIME {$/;"	f
tm_to_system_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn tm_to_system_time(tm: &Tm) -> SYSTEMTIME {$/;"	f	module:inner
tm_to_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/stub.rs	/^fn tm_to_time(tm: &Tm) -> i64 {$/;"	f
tm_to_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn tm_to_time(tm: &Tm) -> i64 {$/;"	f	module:common
tm_utcoff	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub tm_utcoff: i32,$/;"	m	struct:Tm
tm_utcoff	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub tm_utcoff: i32,$/;"	m	struct:Tm
tm_wday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub tm_wday: i32,$/;"	m	struct:Tm
tm_wday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub tm_wday: i32,$/;"	m	struct:Tm
tm_yday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub tm_yday: i32,$/;"	m	struct:Tm
tm_yday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub tm_yday: i32,$/;"	m	struct:Tm
tm_year	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub tm_year: i32,$/;"	m	struct:Tm
tm_year	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub tm_year: i32,$/;"	m	struct:Tm
to	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revspec.rs	/^    pub fn to(&self) -> Option<&Object<'repo>> {$/;"	P	implementation:Revspec
to	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/revspec.rs	/^    to: Option<Object<'repo>>,$/;"	m	struct:Revspec
to	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn to(&self, later: PreciseTime) -> Duration {$/;"	P	implementation:PreciseTime
to_bg_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    pub fn to_bg_str(&self) -> Cow<'static, str> {$/;"	P	implementation:Color
to_buf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn to_buf(&self, format: DiffStatsFormat, width: usize) -> Result<Buf, Error> {$/;"	P	implementation:DiffStats
to_buf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/patch.rs	/^    pub fn to_buf(&mut self) -> Result<Buf, Error> {$/;"	P	implementation:Patch
to_datetime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn to_datetime(&self) -> ParseResult<DateTime<FixedOffset>> {$/;"	P	implementation:Parsed
to_datetime_with_timezone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn to_datetime_with_timezone<Tz: TimeZone>(&self, tz: &Tz) -> ParseResult<DateTime<Tz>> /;"	P	implementation:Parsed
to_fg_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/color.rs	/^    pub fn to_fg_str(&self) -> Cow<'static, str> {$/;"	P	implementation:Color
to_fixed_offset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn to_fixed_offset(&self) -> ParseResult<FixedOffset> {$/;"	P	implementation:Parsed
to_local	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn to_local(&self) -> Tm {$/;"	P	implementation:Tm
to_mdf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn to_mdf(&self) -> Mdf {$/;"	P	implementation:Of
to_naive_date	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn to_naive_date(&self) -> ParseResult<NaiveDate> {$/;"	P	implementation:Parsed
to_naive_datetime_with_offset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn to_naive_datetime_with_offset(&self, offset: i32) -> ParseResult<NaiveDateTime> {$/;"	P	implementation:Parsed
to_naive_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn to_naive_time(&self) -> ParseResult<NaiveTime> {$/;"	P	implementation:Parsed
to_object	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    pub fn to_object<'a>(&self, repo: &'a Repository) -> Result<Object<'a>, Error> {$/;"	P	implementation:TreeEntry
to_of	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn to_of(&self) -> Of {$/;"	P	implementation:Mdf
to_owned	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/indexer.rs	/^    pub fn to_owned(&self) -> Progress<'static> {$/;"	P	implementation:Progress
to_owned	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/signature.rs	/^    pub fn to_owned(&self) -> Signature<'static> {$/;"	P	implementation:Signature
to_owned	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    pub fn to_owned(&self) -> TreeEntry<'static> {$/;"	P	implementation:TreeEntry
to_rfc2822	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn to_rfc2822(&self) -> String {$/;"	f
to_rfc3339	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn to_rfc3339(&self) -> String {$/;"	f
to_rfc3339_opts	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn to_rfc3339_opts(&self, secform: SecondsFormat, use_z: bool) -> String {$/;"	f
to_span_match	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    pub(crate) fn to_span_match(&self, attrs: &span::Attributes<'_>) -> SpanMatcher {$/;"	P	implementation:CallsiteMatcher
to_span_match	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    pub(crate) fn to_span_match(&self) -> SpanMatch {$/;"	P	implementation:CallsiteMatch
to_static	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/directive.rs	/^    pub(super) fn to_static(&self) -> Option<StaticDirective> {$/;"	P	implementation:Directive
to_std	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn to_std(&self) -> Result<StdDuration, OutOfRangeError> {$/;"	P	implementation:Duration
to_std	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn to_std(&self) -> Result<StdDuration, OutOfRangeError> {$/;"	P	implementation:Duration
to_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^    fn to_str<'a>(self) -> &'a str {$/;"	P	implementation:Styles
to_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^    pub(crate) fn to_str(self) -> String {$/;"	P	implementation:Style
to_timespec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub fn to_timespec(&self) -> Timespec {$/;"	P	implementation:Tm
to_timespec	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn to_timespec(&self) -> Timespec {$/;"	P	implementation:Tm
to_u8	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^    fn to_u8(self) -> u8 {$/;"	P	implementation:Styles
to_utc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn to_utc(&self) -> Tm {$/;"	P	implementation:Tm
today	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    pub fn today() -> Date<Local> {$/;"	P	implementation:Local
today	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    pub fn today() -> Date<Utc> {$/;"	P	implementation:Utc
top	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    top: Option<I::Item>,$/;"	m	struct:PutBack
top	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs	/^    top: Vec<I::Item>,$/;"	m	struct:PutBackN
top_group	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs	/^    top_group: usize,$/;"	m	struct:GroupInner
total_deltas	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/indexer.rs	/^    pub fn total_deltas(&self) -> usize {$/;"	P	implementation:Progress
total_objects	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/indexer.rs	/^    pub fn total_objects(&self) -> usize {$/;"	P	implementation:Progress
trace	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/macros.rs	/^macro_rules! trace {$/;"	M
trace_active	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    pub(super) fn trace_active(&self) -> bool {$/;"	P	implementation:FmtSpanConfig
trace_close	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    pub(super) fn trace_close(&self) -> bool {$/;"	P	implementation:FmtSpanConfig
trace_new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    pub(super) fn trace_new(&self) -> bool {$/;"	P	implementation:FmtSpanConfig
trace_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/macros.rs	/^macro_rules! trace_span {$/;"	M
track_copies_any_commit_copies	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    pub fn track_copies_any_commit_copies(&mut self, opt: bool) -> &mut BlameOptions {$/;"	P	implementation:BlameOptions
track_copies_same_commit_copies	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    pub fn track_copies_same_commit_copies(&mut self, opt: bool) -> &mut BlameOptions {$/;"	P	implementation:BlameOptions
track_copies_same_commit_moves	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    pub fn track_copies_same_commit_moves(&mut self, opt: bool) -> &mut BlameOptions {$/;"	P	implementation:BlameOptions
track_copies_same_file	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    pub fn track_copies_same_file(&mut self, opt: bool) -> &mut BlameOptions {$/;"	P	implementation:BlameOptions
traits	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^pub mod traits {$/;"	n
transfer_progress	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^    pub fn transfer_progress<F>(&mut self, cb: F) -> &mut RemoteCallbacks<'a>$/;"	P	implementation:RemoteCallbacks
transfer_progress_cb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^extern "C" fn transfer_progress_cb($/;"	f
transform	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/refspec.rs	/^    pub fn transform(&self, name: &str) -> Result<Buf, Error> {$/;"	P	implementation:Refspec
transport	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^pub mod transport;$/;"	n
transport_error_propagates	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^    fn transport_error_propagates() {$/;"	f	module:tests
transport_factory	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/transport.rs	/^extern "C" fn transport_factory($/;"	f
transpose_result	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^fn transpose_result<T, E>(result: Result<Option<T>, E>) -> Option<Result<T, E>> {$/;"	f
tree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    pub fn tree(&self) -> Result<Tree<'repo>, Error> {$/;"	P	implementation:Commit
tree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod tree;$/;"	n
tree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    tree: &'tree Tree<'tree>,$/;"	m	struct:TreeIter
tree_fold1	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn tree_fold1<F>(mut self, mut f: F) -> Option<Self::Item>$/;"	P	interface:Itertools
tree_id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/commit.rs	/^    pub fn tree_id(&self) -> Oid {$/;"	P	implementation:Commit
tree_iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    fn tree_iter<'repo>(tree: &Tree<'repo>, repo: &'repo Repository) -> TestTreeIter<'repo> {$/;"	f	module:tests
tree_walk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    fn tree_walk() {$/;"	f	module:tests
treebuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod treebuilder;$/;"	n
treebuilder	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn treebuilder(&self, tree: Option<&Tree<'_>>) -> Result<TreeBuilder<'_>, Error> {$/;"	P	implementation:Repository
treewalk_cb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^extern "C" fn treewalk_cb<T: Into<i32>>($/;"	f
triage	/home/asayers/projects/orpa/src/main.rs	/^fn triage(repo: &Repository) -> anyhow::Result<()> {$/;"	f
truecolor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn truecolor(self, r: u8, g: u8, b: u8) -> ColoredString$/;"	P	interface:Colorize
trunc_subsecs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn trunc_subsecs(self, digits: u16) -> Self;$/;"	P	interface:SubsecRound
trunc_subsecs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn trunc_subsecs(self, digits: u16) -> T {$/;"	f
try_call	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^macro_rules! try_call {$/;"	M
try_call_iter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/call.rs	/^macro_rules! try_call_iter {$/;"	M
try_close	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    fn try_close(&self, id: span::Id) -> bool {$/;"	f
try_close	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn try_close(&self, id: span::Id) -> bool {$/;"	f
try_close	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/sharded.rs	/^    fn try_close(&self, id: span::Id) -> bool {$/;"	P	implementation:Registry
try_collect	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn try_collect<T, U, E>(self) -> Result<U, E>$/;"	P	interface:Itertools
try_consume	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    macro_rules! try_consume {$/;"	M	function:parse_internal
try_consume	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    macro_rules! try_consume {$/;"	M	function:parse_rfc2822
try_consume	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    macro_rules! try_consume {$/;"	M	function:parse_rfc3339
try_from_default_env	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    pub fn try_from_default_env() -> Result<Self, FromEnvError> {$/;"	P	implementation:EnvFilter
try_from_env	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    pub fn try_from_env<A: AsRef<str>>(env: A) -> Result<Self, FromEnvError> {$/;"	P	implementation:EnvFilter
try_init	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn try_init(self) -> Result<(), Box<dyn Error + Send + Sync + 'static>> {$/;"	f
try_init	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^pub fn try_init() -> Result<(), Box<dyn Error + Send + Sync + 'static>> {$/;"	f
try_init	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/util.rs	/^    fn try_init(self) -> Result<(), TryInitError> {$/;"	P	interface:SubscriberInitExt
try_lock	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/lib.rs	/^macro_rules! try_lock {$/;"	M
try_new	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/mod.rs	/^    pub fn try_new<S: AsRef<str>>(dirs: S) -> Result<Self, ParseError> {$/;"	P	implementation:EnvFilter
try_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^macro_rules! try_opt {$/;"	M
try_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^macro_rules! try_opt {$/;"	M
try_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^macro_rules! try_opt {$/;"	M
try_read	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/sync.rs	/^        pub(crate) fn try_read<'a>(&'a self) -> TryLockResult<RwLockReadGuard<'a, T>> {$/;"	P	implementation:parking_lot_impl::RwLock
try_with_index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/thread.rs	/^    fn try_with_index<O>(&self, i: usize, f: impl FnOnce(&mut T) -> O) -> Option<O> {$/;"	P	implementation:Local
ts_milliseconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub mod ts_milliseconds {$/;"	n	module:serde
ts_milliseconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub mod ts_milliseconds {$/;"	n	module:serde
ts_milliseconds_option	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub mod ts_milliseconds_option {$/;"	n	module:serde
ts_nanoseconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub mod ts_nanoseconds {$/;"	n	module:serde
ts_nanoseconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub mod ts_nanoseconds {$/;"	n	module:serde
ts_nanoseconds_option	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub mod ts_nanoseconds_option {$/;"	n	module:serde
ts_seconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub mod ts_seconds {$/;"	n	module:serde
ts_seconds	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub mod ts_seconds {$/;"	n	module:serde
ts_seconds_option	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub mod ts_seconds_option {$/;"	n	module:serde
tuple_combinations	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub fn tuple_combinations<T, I>(iter: I) -> TupleCombinations<I, T>$/;"	f
tuple_combinations	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn tuple_combinations<T>(self) -> TupleCombinations<Self, T>$/;"	P	interface:Itertools
tuple_impl	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod tuple_impl;$/;"	n
tuple_windows	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn tuple_windows<T>(self) -> TupleWindows<Self, T>$/;"	P	interface:Itertools
tuple_windows	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^pub fn tuple_windows<I, T>(mut iter: I) -> TupleWindows<I, T>$/;"	f
tuples	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn tuples<T>(self) -> Tuples<Self, T>$/;"	P	interface:Itertools
tuples	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs	/^pub fn tuples<I, T>(iter: I) -> Tuples<I, T>$/;"	f
two	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            two: Option<DateTime<Utc>>,$/;"	m	struct:serde::test_serde_bincode_optional::Test
two1	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        fn two1() {$/;"	f	module:tests::styles_combine_complex
two2	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        fn two2() {$/;"	f	module:tests::styles_combine_complex
two3	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        fn two3() {$/;"	f	module:tests::styles_combine_complex
two_digits	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/fmt.rs	/^    fn two_digits() {$/;"	f	module:tests
two_layers_are_subscriber	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn two_layers_are_subscriber() {$/;"	f	module:tests
tzset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^        fn tzset();$/;"	f	function:timegm
tzset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^        fn tzset();$/;"	f	function:tzset
tzset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^fn tzset() {$/;"	f
tzset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    extern { fn tzset(); }$/;"	f	function:tzset
tzset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn tzset() {$/;"	f
tzset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn tzset() {}$/;"	f
tzset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn tzset();$/;"	f	function:inner::timegm
u32	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^impl From<FileMode> for u32 {$/;"	c
u8	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/util.rs	/^impl<'a> IntoCString for &'a [u8] {$/;"	c
u8_to_styles_invalid_is_none	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^    mod u8_to_styles_invalid_is_none {$/;"	n	module:tests
u8_to_styles_isomorphism	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^    mod u8_to_styles_isomorphism {$/;"	n	module:tests
uid	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub uid: u32,$/;"	m	struct:IndexEntry
underline	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn underline(mut self) -> ColoredString {$/;"	P	implementation:ColoredString
underline	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn underline(self) -> ColoredString {$/;"	P	implementation:str
underline	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn underline(self) -> ColoredString;$/;"	P	interface:Colorize
unfold	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs	/^pub fn unfold<A, St, F>(initial_state: St, f: F) -> Unfold<St, F>$/;"	f
unique	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn unique(self) -> Unique<Self>$/;"	P	interface:Itertools
unique	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs	/^pub fn unique<I>(iter: I) -> Unique<I>$/;"	f
unique_by	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn unique_by<V, F>(self, f: F) -> UniqueBy<Self, V, F>$/;"	P	interface:Itertools
unique_by	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs	/^pub fn unique_by<I, V, F>(iter: I, f: F) -> UniqueBy<I, V, F>$/;"	f
unique_impl	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod unique_impl;$/;"	n
unix	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    mod unix {$/;"	n	module:inner
unlock	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    pub fn unlock(&self) -> Result<(), Error> {$/;"	P	implementation:Worktree
unset_override	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^    pub fn unset_override(&self) {$/;"	P	implementation:ShouldColorize
unset_override	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/control.rs	/^pub fn unset_override() {$/;"	f
unset_progress_callback	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    pub fn unset_progress_callback(&mut self) -> Result<(), Error> {$/;"	P	implementation:PackBuilder
unwrap	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn unwrap(self) -> T {$/;"	P	implementation:LocalResult
unwrap	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    pub unsafe fn unwrap(mut self) -> *mut raw::git_cred {$/;"	P	implementation:Cred
update	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    pub fn update($/;"	P	implementation:Submodule
update	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub fn update<I, F>(iter: I, f: F) -> Update<I, F>$/;"	f
update	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn update<F>(self, updater: F) -> Update<Self, F>$/;"	P	interface:Itertools
update_all	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub fn update_all<T, I>($/;"	P	implementation:Index
update_fetchhead	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn update_fetchhead(&mut self, update: bool) -> &mut Self {$/;"	P	implementation:FetchOptions
update_fetchhead	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    update_fetchhead: bool,$/;"	m	struct:FetchOptions
update_index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn update_index(&mut self, update: bool) -> &mut CheckoutBuilder<'cb> {$/;"	P	implementation:CheckoutBuilder
update_index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/diff.rs	/^    pub fn update_index(&mut self, update: bool) -> &mut DiffOptions {$/;"	P	implementation:DiffOptions
update_index	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/status.rs	/^    pub fn update_index(&mut self, include: bool) -> &mut StatusOptions {$/;"	P	implementation:StatusOptions
update_only	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn update_only(&mut self, update: bool) -> &mut CheckoutBuilder<'cb> {$/;"	P	implementation:CheckoutBuilder
update_submodule	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    fn update_submodule() {$/;"	f	module:tests
update_submodules	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    fn update_submodules(&self) -> Result<(), Error> {$/;"	P	implementation:Repository
update_tips	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn update_tips($/;"	P	implementation:Remote
update_tips	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^    pub fn update_tips<F>(&mut self, cb: F) -> &mut RemoteCallbacks<'a>$/;"	P	implementation:RemoteCallbacks
update_tips	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^    update_tips: Option<Box<UpdateTips<'a>>>,$/;"	m	struct:RemoteCallbacks
update_tips_cb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote_callbacks.rs	/^extern "C" fn update_tips_cb($/;"	f
updates	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    updates: Vec<raw::git_tree_update>,$/;"	m	struct:TreeUpdateBuilder
upsert	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn upsert<T: IntoCString>(&mut self, path: T, id: Oid, filemode: FileMode) -> &mut Self /;"	P	implementation:TreeUpdateBuilder
upstream	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/branch.rs	/^    pub fn upstream(&self) -> Result<Branch<'repo>, Error> {$/;"	P	implementation:Branch
uptime	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^pub fn uptime() -> Uptime {$/;"	f
url	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    url: String,$/;"	m	struct:CredentialHelper
url	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/proxy_options.rs	/^    pub fn url(&mut self, url: &str) -> &mut Self {$/;"	P	implementation:ProxyOptions
url	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/proxy_options.rs	/^    url: Option<CString>,$/;"	m	struct:ProxyOptions
url	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn url(&self) -> Option<&str> {$/;"	P	implementation:Remote
url	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    pub fn url(&self) -> Option<&str> {$/;"	P	implementation:Submodule
url_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/remote.rs	/^    pub fn url_bytes(&self) -> &[u8] {$/;"	P	implementation:Remote
url_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    pub fn url_bytes(&self) -> &[u8] {$/;"	P	implementation:Submodule
use_mailmap	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blame.rs	/^    pub fn use_mailmap(&mut self, opt: bool) -> &mut BlameOptions {$/;"	P	implementation:BlameOptions
use_ours	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn use_ours(&mut self, ours: bool) -> &mut CheckoutBuilder<'cb> {$/;"	P	implementation:CheckoutBuilder
use_theirs	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn use_theirs(&mut self, theirs: bool) -> &mut CheckoutBuilder<'cb> {$/;"	P	implementation:CheckoutBuilder
used	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs	/^    used: HashMap<V, ()>,$/;"	m	struct:UniqueBy
username	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    pub fn username(&mut self, username: Option<&str>) -> &mut CredentialHelper {$/;"	P	implementation:CredentialHelper
username	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    pub fn username(username: &str) -> Result<Cred, Error> {$/;"	P	implementation:Cred
username	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    pub username: Option<String>,$/;"	m	struct:CredentialHelper
userpass_plaintext	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/cred.rs	/^    pub fn userpass_plaintext(username: &str, password: &str) -> Result<Cred, Error> {$/;"	P	implementation:Cred
utc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^mod utc;$/;"	n
utc_minus_local	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    pub fn utc_minus_local(&self) -> i32 {$/;"	P	implementation:FixedOffset
utc_tm_to_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/stub.rs	/^pub fn utc_tm_to_time(tm: &Tm) -> i64 {$/;"	f
utc_tm_to_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^pub fn utc_tm_to_time(rust_tm: &Tm) -> i64 {$/;"	f
utc_tm_to_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^pub fn utc_tm_to_time(tm: &Tm) -> i64 {$/;"	f
utc_tm_to_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn utc_tm_to_time(rust_tm: &Tm) -> i64 {$/;"	f	module:inner
utc_tm_to_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn utc_tm_to_time(tm: &Tm) -> i64 {$/;"	f	module:inner
util	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod util;$/;"	n
util	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/lib.rs	/^pub mod util;$/;"	n
val	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    val: InternalInternal,$/;"	m	struct:InternalFixed
valid	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn valid(&self) -> bool {$/;"	P	implementation:Mdf
valid	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn valid(&self) -> bool {$/;"	P	implementation:Of
valid	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    pub fn valid(&mut self, valid: bool) -> &mut WorktreePruneOptions {$/;"	P	implementation:WorktreePruneOptions
validate	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    pub fn validate(&self) -> Result<(), Error> {$/;"	P	implementation:Worktree
validate_format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^fn validate_format<'a>(fmt: TmFmt<'a>) -> Result<TmFmt<'a>, ParseError> {$/;"	f
vals	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs	/^    vals: LazyBuffer<I>,$/;"	m	struct:Permutations
value	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    value: NaiveDate,$/;"	m	struct:NaiveDateDaysIterator
value	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    value: NaiveDate,$/;"	m	struct:NaiveDateWeeksIterator
value	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn value(&self) -> Option<&str> {$/;"	P	implementation:ConfigEntry
value_bytes	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/config.rs	/^    pub fn value_bytes(&self) -> &[u8] {$/;"	P	implementation:ConfigEntry
value_isomorph	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/style.rs	/^        macro_rules! value_isomorph {$/;"	M	module:tests::u8_to_styles_isomorphism
values	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    values: BTreeMap<&'a str, serde_json::Value>,$/;"	m	struct:JsonVisitor
valueset	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/macros.rs	/^macro_rules! valueset {$/;"	M
version	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub fn version(&self) -> u32 {$/;"	P	implementation:Index
visit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    fn visit<R>(mut self, fields: &R) -> Out$/;"	P	interface:VisitOutput
visit_i64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<DateTime<Utc>, E>$/;"	P	implementation:serde::ts_milliseconds::MilliSecondsTimestampVisitor
visit_i64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<DateTime<Utc>, E>$/;"	P	implementation:serde::ts_nanoseconds::NanoSecondsTimestampVisitor
visit_i64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<DateTime<Utc>, E>$/;"	P	implementation:serde::ts_seconds::SecondsTimestampVisitor
visit_i64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<NaiveDateTime, E>$/;"	P	implementation:serde::ts_milliseconds::NaiveDateTimeFromMilliSecondsVisitor
visit_i64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<NaiveDateTime, E>$/;"	P	implementation:serde::ts_nanoseconds::NaiveDateTimeFromNanoSecondsVisitor
visit_i64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<NaiveDateTime, E>$/;"	P	implementation:serde::ts_seconds::NaiveDateTimeFromSecondsVisitor
visit_none	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_none<E>(self) -> Result<Option<DateTime<Utc>>, E>$/;"	P	implementation:serde::ts_milliseconds_option::OptionMilliSecondsTimestampVisitor
visit_none	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_none<E>(self) -> Result<Option<DateTime<Utc>>, E>$/;"	P	implementation:serde::ts_nanoseconds_option::OptionNanoSecondsTimestampVisitor
visit_none	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_none<E>(self) -> Result<Option<DateTime<Utc>>, E>$/;"	P	implementation:serde::ts_seconds_option::OptionSecondsTimestampVisitor
visit_some	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_some<D>(self, d: D) -> Result<Option<DateTime<Utc>>, D::Error>$/;"	P	implementation:serde::ts_milliseconds_option::OptionMilliSecondsTimestampVisitor
visit_some	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_some<D>(self, d: D) -> Result<Option<DateTime<Utc>>, D::Error>$/;"	P	implementation:serde::ts_nanoseconds_option::OptionNanoSecondsTimestampVisitor
visit_some	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_some<D>(self, d: D) -> Result<Option<DateTime<Utc>>, D::Error>$/;"	P	implementation:serde::ts_seconds_option::OptionSecondsTimestampVisitor
visit_spans	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn visit_spans<E, F>(&self, mut f: F) -> Result<(), E>$/;"	f
visit_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn visit_str<E>(self, value: &str) -> Result<DateTime<FixedOffset>, E>$/;"	P	implementation:serde::DateTimeVisitor
visit_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^        fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	P	implementation:month_serde::MonthVisitor
visit_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^        fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	P	implementation:weekday_serde::WeekdayVisitor
visit_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        fn visit_str<E>(self, value: &str) -> Result<NaiveDate, E>$/;"	P	implementation:serde::NaiveDateVisitor
visit_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn visit_str<E>(self, value: &str) -> Result<NaiveDateTime, E>$/;"	P	implementation:serde::NaiveDateTimeVisitor
visit_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^        fn visit_str<E>(self, value: &str) -> Result<NaiveTime, E>$/;"	P	implementation:serde::NaiveTimeVisitor
visit_u64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<DateTime<Utc>, E>$/;"	P	implementation:serde::ts_milliseconds::MilliSecondsTimestampVisitor
visit_u64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<DateTime<Utc>, E>$/;"	P	implementation:serde::ts_nanoseconds::NanoSecondsTimestampVisitor
visit_u64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<DateTime<Utc>, E>$/;"	P	implementation:serde::ts_seconds::SecondsTimestampVisitor
visit_u64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<NaiveDateTime, E>$/;"	P	implementation:serde::ts_milliseconds::NaiveDateTimeFromMilliSecondsVisitor
visit_u64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<NaiveDateTime, E>$/;"	P	implementation:serde::ts_nanoseconds::NaiveDateTimeFromNanoSecondsVisitor
visit_u64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<NaiveDateTime, E>$/;"	P	implementation:serde::ts_seconds::NaiveDateTimeFromSecondsVisitor
visit_unit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_unit<E>(self) -> Result<Option<DateTime<Utc>>, E>$/;"	P	implementation:serde::ts_milliseconds_option::OptionMilliSecondsTimestampVisitor
visit_unit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_unit<E>(self) -> Result<Option<DateTime<Utc>>, E>$/;"	P	implementation:serde::ts_nanoseconds_option::OptionNanoSecondsTimestampVisitor
visit_unit	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_unit<E>(self) -> Result<Option<DateTime<Utc>>, E>$/;"	P	implementation:serde::ts_seconds_option::OptionSecondsTimestampVisitor
visit_with	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    fn visit_with<F>(&self, target: T, fields: &F) -> Out$/;"	P	interface:MakeOutput
visitor	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/filter/env/field.rs	/^    pub(crate) fn visitor(&self) -> MatchVisitor<'_> {$/;"	P	implementation:SpanMatch
vtable	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^    vtable: &'static ErrorVTable,$/;"	m	struct:ErrorImpl
vtable	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/error.rs	/^unsafe fn vtable(p: NonNull<ErrorImpl>) -> &'static ErrorVTable {$/;"	f
walk	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/tree.rs	/^    pub fn walk<C, T>(&self, mode: TreeWalkMode, mut callback: C) -> Result<(), Error>$/;"	P	implementation:Tree
walk_new	/home/asayers/projects/orpa/src/main.rs	/^fn walk_new(repo: &Repository, mut f: impl FnMut(Oid)) -> anyhow::Result<()> {$/;"	f
warn	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/macros.rs	/^macro_rules! warn {$/;"	M
warn_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/macros.rs	/^macro_rules! warn_span {$/;"	M
week	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^    pub fn week(&self) -> u32 {$/;"	P	implementation:IsoWeek
week0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^    pub fn week0(&self) -> u32 {$/;"	P	implementation:IsoWeek
week_from_mon	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub week_from_mon: Option<u32>,$/;"	m	struct:Parsed
week_from_sun	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub week_from_sun: Option<u32>,$/;"	m	struct:Parsed
weekday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn weekday(&self) -> Weekday {$/;"	P	implementation:Date
weekday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn weekday(&self) -> Weekday {$/;"	P	implementation:DateTime
weekday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub weekday: Option<Weekday>,$/;"	m	struct:Parsed
weekday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn weekday(&self) -> Weekday;$/;"	P	interface:Datelike
weekday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn weekday(&self) -> Weekday {$/;"	P	implementation:NaiveDate
weekday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn weekday(&self) -> Weekday {$/;"	P	implementation:NaiveDateTime
weekday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn weekday(&self) -> Weekday {$/;"	P	implementation:Of
weekday_serde	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^mod weekday_serde {$/;"	n
weeks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn weeks(weeks: i64) -> Duration {$/;"	P	implementation:Duration
weeks	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn weeks(weeks: i64) -> Duration {$/;"	P	implementation:Duration
west	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    pub fn west(secs: i32) -> FixedOffset {$/;"	P	implementation:FixedOffset
west_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    pub fn west_opt(secs: i32) -> Option<FixedOffset> {$/;"	P	implementation:FixedOffset
when	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/signature.rs	/^    pub fn when(&self) -> Time {$/;"	P	implementation:Signature
while_some	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^pub fn while_some<I>(iter: I) -> WhileSome<I> {$/;"	f
while_some	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn while_some<A>(self) -> WhileSome<Self>$/;"	P	interface:Itertools
white	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn white(self) -> ColoredString$/;"	P	interface:Colorize
with	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^        pub(crate) fn with<T>(f: impl FnOnce(Attributes<'_>) -> T) -> T {$/;"	P	implementation:test_util::TestAttrs1
with	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^        pub(crate) fn with<T>(f: impl FnOnce(Attributes<'_>) -> T) -> T {$/;"	P	implementation:test_util::TestAttrs2
with	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn with<L>(self, layer: L) -> Layered<L, Self>$/;"	P	interface:SubscriberExt
with	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/thread.rs	/^    pub(crate) fn with<O>(&self, f: impl FnOnce(&mut T) -> O) -> Option<O> {$/;"	P	implementation:Local
with_ansi	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn with_ansi(self, ansi: bool) -> Layer<S, N, format::Format<L, T>, W> {$/;"	f
with_ansi	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    pub fn with_ansi(self, ansi: bool) -> Format<F, T> {$/;"	P	implementation:Format
with_ansi	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn with_ansi(self, ansi: bool) -> SubscriberBuilder<N, format::Format<L, T>, F, W> {$/;"	f
with_ansi_false	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn with_ansi_false() {$/;"	f	module:test
with_ansi_true	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn with_ansi_true() {$/;"	f	module:test
with_checkout	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/build.rs	/^    pub fn with_checkout(&mut self, checkout: CheckoutBuilder<'cb>) -> &mut RepoBuilder<'cb> {$/;"	P	implementation:RepoBuilder
with_context	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^    fn with_context<C, F>(self, context: F) -> Result<T, Error>$/;"	P	implementation:Option
with_context	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^    fn with_context<C, F>(self, context: F) -> Result<T, Error>$/;"	f
with_context	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/lib.rs	/^    fn with_context<C, F>(self, f: F) -> Result<T, Error>$/;"	P	interface:Context
with_current	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/reload.rs	/^    pub fn with_current<T>(&self, f: impl FnOnce(&L) -> T) -> Result<T, Error> {$/;"	f
with_current_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn with_current_span($/;"	P	implementation:Layer
with_current_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    pub fn with_current_span(&mut self, display_current_span: bool) {$/;"	P	implementation:Json
with_current_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    pub fn with_current_span(mut self, display_current_span: bool) -> Format<Json, T> {$/;"	P	implementation:Format
with_current_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn with_current_span($/;"	P	implementation:SubscriberBuilder
with_current_subscriber	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/instrument.rs	/^    fn with_current_subscriber(self) -> WithDispatch<Self> {$/;"	P	interface:WithSubscriber
with_day	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn with_day(&self, day: u32) -> Option<Date<Tz>> {$/;"	P	implementation:Date
with_day	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_day(&self, day: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_day	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_day(&self, day: u32) -> Option<Self>;$/;"	P	interface:Datelike
with_day	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn with_day(&self, day: u32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
with_day	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_day(&self, day: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_day	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn with_day(&self, day: u32) -> Mdf {$/;"	P	implementation:Mdf
with_day0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn with_day0(&self, day0: u32) -> Option<Date<Tz>> {$/;"	P	implementation:Date
with_day0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_day0(&self, day0: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_day0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_day0(&self, day0: u32) -> Option<Self>;$/;"	P	interface:Datelike
with_day0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn with_day0(&self, day0: u32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
with_day0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_day0(&self, day0: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_default	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/subscriber.rs	/^pub fn with_default<T, S>(subscriber: S, f: impl FnOnce() -> T) -> T$/;"	f
with_env_filter	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn with_env_filter($/;"	P	implementation:SubscriberBuilder
with_event_from_span	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^macro_rules! with_event_from_span {$/;"	M
with_filter_reloading	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn with_filter_reloading($/;"	f
with_flags	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn with_flags(&self, YearFlags(flags): YearFlags) -> Mdf {$/;"	P	implementation:Mdf
with_flags	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn with_flags(&self, YearFlags(flags): YearFlags) -> Of {$/;"	P	implementation:Of
with_format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^    pub fn with_format(format_string: String) -> Self {$/;"	P	implementation:ChronoLocal
with_format	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^    pub fn with_format(format_string: String) -> Self {$/;"	P	implementation:ChronoUtc
with_hour	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_hour(&self, hour: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_hour	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_hour(&self, hour: u32) -> Option<Self>;$/;"	P	interface:Timelike
with_hour	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_hour(&self, hour: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_hour	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn with_hour(&self, hour: u32) -> Option<NaiveTime> {$/;"	P	implementation:NaiveTime
with_kind	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    pub(super) fn with_kind(self, kind: FmtSpan) -> Self {$/;"	P	implementation:FmtSpanConfig
with_level	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn with_level(self, display_level: bool) -> Layer<S, N, format::Format<L, T>, W> {$/;"	f
with_level	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    pub fn with_level(self, display_level: bool) -> Format<F, T> {$/;"	P	implementation:Format
with_level	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn with_level($/;"	f
with_max_level	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn with_max_level($/;"	P	implementation:SubscriberBuilder
with_mdf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn with_mdf(&self, mdf: Mdf) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
with_minute	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_minute(&self, min: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_minute	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_minute(&self, min: u32) -> Option<Self>;$/;"	P	interface:Timelike
with_minute	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_minute(&self, min: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_minute	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn with_minute(&self, min: u32) -> Option<NaiveTime> {$/;"	P	implementation:NaiveTime
with_month	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn with_month(&self, month: u32) -> Option<Date<Tz>> {$/;"	P	implementation:Date
with_month	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_month(&self, month: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_month	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_month(&self, month: u32) -> Option<Self>;$/;"	P	interface:Datelike
with_month	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn with_month(&self, month: u32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
with_month	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_month(&self, month: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_month	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn with_month(&self, month: u32) -> Mdf {$/;"	P	implementation:Mdf
with_month0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn with_month0(&self, month0: u32) -> Option<Date<Tz>> {$/;"	P	implementation:Date
with_month0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_month0(&self, month0: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_month0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_month0(&self, month0: u32) -> Option<Self>;$/;"	P	interface:Datelike
with_month0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn with_month0(&self, month0: u32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
with_month0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_month0(&self, month0: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_nanosecond	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_nanosecond(&self, nano: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_nanosecond	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_nanosecond(&self, nano: u32) -> Option<Self>;$/;"	P	interface:Timelike
with_nanosecond	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_nanosecond(&self, nano: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_nanosecond	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn with_nanosecond(&self, nano: u32) -> Option<NaiveTime> {$/;"	P	implementation:NaiveTime
with_of	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn with_of(&self, of: Of) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
with_or_else	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/thread.rs	/^    pub(crate) fn with_or_else<O>($/;"	P	implementation:Local
with_ordinal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn with_ordinal(&self, ordinal: u32) -> Option<Date<Tz>> {$/;"	P	implementation:Date
with_ordinal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_ordinal(&self, ordinal: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_ordinal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_ordinal(&self, ordinal: u32) -> Option<Self>;$/;"	P	interface:Datelike
with_ordinal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn with_ordinal(&self, ordinal: u32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
with_ordinal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_ordinal(&self, ordinal: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_ordinal	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn with_ordinal(&self, ordinal: u32) -> Of {$/;"	P	implementation:Of
with_ordinal0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn with_ordinal0(&self, ordinal0: u32) -> Option<Date<Tz>> {$/;"	P	implementation:Date
with_ordinal0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_ordinal0(&self, ordinal0: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_ordinal0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_ordinal0(&self, ordinal0: u32) -> Option<Self>;$/;"	P	interface:Datelike
with_ordinal0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn with_ordinal0(&self, ordinal0: u32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
with_ordinal0	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_ordinal0(&self, ordinal0: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_position	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn with_position(self) -> WithPosition<Self>$/;"	P	interface:Itertools
with_position	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod with_position;$/;"	n
with_position	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs	/^pub fn with_position<I>(iter: I) -> WithPosition<I>$/;"	f
with_remainer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^    fn with_remainer(s: &'a str) -> StrftimeItems<'a> {$/;"	P	implementation:StrftimeItems
with_second	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_second(&self, sec: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_second	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_second(&self, sec: u32) -> Option<Self>;$/;"	P	interface:Timelike
with_second	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_second(&self, sec: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_second	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn with_second(&self, sec: u32) -> Option<NaiveTime> {$/;"	P	implementation:NaiveTime
with_source_location	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^    pub fn with_source_location(mut self, display_location: bool) -> Self {$/;"	P	implementation:Format
with_source_location	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^    pub fn with_source_location(self, display_location: bool) -> Self {$/;"	P	implementation:Pretty
with_span_events	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn with_span_events(self, kind: FmtSpan) -> Self {$/;"	f
with_span_events	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn with_span_events(self, kind: format::FmtSpan) -> Self {$/;"	f
with_span_list	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn with_span_list($/;"	P	implementation:Layer
with_span_list	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    pub fn with_span_list(&mut self, display_span_list: bool) {$/;"	P	implementation:Json
with_span_list	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    pub fn with_span_list(mut self, display_span_list: bool) -> Format<Json, T> {$/;"	P	implementation:Format
with_span_list	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn with_span_list($/;"	P	implementation:SubscriberBuilder
with_style	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^    pub(crate) fn with_style(self, style: Style) -> Self {$/;"	P	implementation:PrettyVisitor
with_subscriber	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/instrument.rs	/^    fn with_subscriber<S>(self, subscriber: S) -> WithDispatch<Self>$/;"	P	interface:WithSubscriber
with_subscriber	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.22/src/span.rs	/^    pub fn with_subscriber<T>(&self, f: impl FnOnce((&Id, &Dispatch)) -> T) -> Option<T> {$/;"	P	implementation:Span
with_subscriber	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/layer.rs	/^    fn with_subscriber(self, inner: S) -> Layered<Self, S>$/;"	P	interface:Layer
with_target	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn with_target(self, display_target: bool) -> Layer<S, N, format::Format<L, T>, W> {$/;"	f
with_target	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    pub fn with_target(self, display_target: bool) -> Format<F, T> {$/;"	P	implementation:Format
with_target	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn with_target($/;"	f
with_test_writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn with_test_writer(self) -> Layer<S, N, E, TestWriter> {$/;"	P	implementation:Layer
with_test_writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn with_test_writer(self) -> SubscriberBuilder<N, E, F, TestWriter> {$/;"	P	implementation:SubscriberBuilder
with_thread_ids	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn with_thread_ids(self, display_thread_ids: bool) -> Layer<S, N, format::Format<L, T>, /;"	f
with_thread_ids	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    pub fn with_thread_ids(self, display_thread_id: bool) -> Format<F, T> {$/;"	P	implementation:Format
with_thread_ids	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn with_thread_ids($/;"	f
with_thread_names	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn with_thread_names($/;"	f
with_thread_names	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    pub fn with_thread_names(self, display_thread_name: bool) -> Format<F, T> {$/;"	P	implementation:Format
with_thread_names	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn with_thread_names($/;"	f
with_timer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn with_timer<T2>(self, timer: T2) -> Layer<S, N, format::Format<L, T2>, W> {$/;"	f
with_timer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    pub fn with_timer<T2>(self, timer: T2) -> Format<F, T2> {$/;"	P	implementation:Format
with_timer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn with_timer<T2>(self, timer: T2) -> SubscriberBuilder<N, format::Format<L, T2>, F, W> /;"	f
with_timezone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn with_timezone<Tz2: TimeZone>(&self, tz: &Tz2) -> Date<Tz2> {$/;"	P	implementation:Date
with_timezone	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn with_timezone<Tz2: TimeZone>(&self, tz: &Tz2) -> DateTime<Tz2> {$/;"	P	implementation:DateTime
with_value	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs	/^    pub fn with_value(mut self, value: I::Item) -> Self {$/;"	f
with_writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn with_writer<W2>(self, make_writer: W2) -> Layer<S, N, E, W2>$/;"	P	implementation:Layer
with_writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn with_writer<W2>(self, make_writer: W2) -> SubscriberBuilder<N, E, F, W2>$/;"	P	implementation:SubscriberBuilder
with_year	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn with_year(&self, year: i32) -> Option<Date<Tz>> {$/;"	P	implementation:Date
with_year	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_year(&self, year: i32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_year	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_year(&self, year: i32) -> Option<Self>;$/;"	P	interface:Datelike
with_year	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn with_year(&self, year: i32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
with_year	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_year(&self, year: i32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
without_ansi	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn without_ansi() {$/;"	f	module:test
without_level	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn without_level() {$/;"	f	module:test
without_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/fmt_layer.rs	/^    pub fn without_time(self) -> Layer<S, N, format::Format<L, ()>, W> {$/;"	f
without_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    pub fn without_time(self) -> Format<F, ()> {$/;"	P	implementation:Format
without_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    pub(super) fn without_time(self) -> Self {$/;"	P	implementation:FmtSpanConfig
without_time	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^    pub fn without_time(self) -> SubscriberBuilder<N, format::Format<L, ()>, F, W> {$/;"	f
workdir	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn workdir(&self) -> Option<&Path> {$/;"	P	implementation:Repository
workdir_id	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/submodule.rs	/^    pub fn workdir_id(&self) -> Option<Oid> {$/;"	P	implementation:Submodule
workdir_path	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn workdir_path(&mut self, path: &Path) -> &mut RepositoryInitOptions {$/;"	P	implementation:RepositoryInitOptions
workdir_path	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    workdir_path: Option<CString>,$/;"	m	struct:RepositoryInitOptions
working_tree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/worktree.rs	/^    pub fn working_tree(&mut self, working_tree: bool) -> &mut WorktreePruneOptions {$/;"	P	implementation:WorktreePruneOptions
worktree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/lib.rs	/^mod worktree;$/;"	n
worktree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn worktree<'a>($/;"	P	implementation:Repository
worktrees	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/repo.rs	/^    pub fn worktrees(&self) -> Result<StringArray, Error> {$/;"	P	implementation:Repository
worktrees_env_init	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/test.rs	/^pub fn worktrees_env_init(repo: &Repository) -> (TempDir, Branch<'_>) {$/;"	f
wrap	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/branch.rs	/^    pub fn wrap(reference: Reference<'_>) -> Branch<'_> {$/;"	P	implementation:Branch
wrap	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/panic.rs	/^pub fn wrap<T, F: FnOnce() -> T + std::panic::UnwindSafe>(f: F) -> Option<T> {$/;"	f
wrapper	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/lib.rs	/^mod wrapper;$/;"	n
write	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/blob.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:BlobWriter
write	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub fn write(&mut self) -> Result<(), Error> {$/;"	P	implementation:Index
write	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:OdbPackwriter
write	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:OdbWriter
write	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    fn write() {$/;"	f	module:tests
write	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    pub fn write(&self, kind: ObjectType, data: &[u8]) -> Result<Oid, Error> {$/;"	P	implementation:Odb
write	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/reflog.rs	/^    pub fn write(&mut self) -> Result<(), Error> {$/;"	P	implementation:Reflog
write	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/treebuilder.rs	/^    fn write() {$/;"	f	module:tests
write	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/treebuilder.rs	/^    pub fn write(&self) -> Result<Oid, Error> {$/;"	P	implementation:TreeBuilder
write	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:WriteAdaptor
write	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^        fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:test::MockWriter
write	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^pub(crate) fn write<T>(timer: T, writer: &mut dyn fmt::Write) -> fmt::Result$/;"	f
write	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/mod.rs	/^pub(crate) fn write<T>(timer: T, writer: &mut dyn fmt::Write, with_ansi: bool) -> fmt::Result$/;"	f
write	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/writer.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:TestWriter
write	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^    fn write(&mut self, _: &[u8]) {$/;"	P	implementation:IdHasher
write	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/sync.rs	/^        pub(crate) fn write<'a>(&'a self) -> LockResult<RwLockWriteGuard<'a, T>> {$/;"	P	implementation:parking_lot_impl::RwLock
write_buf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    pub fn write_buf(&mut self, buf: &mut Buf) -> Result<(), Error> {$/;"	P	implementation:PackBuilder
write_local_minus_utc	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^            fn write_local_minus_utc($/;"	f	function:format_inner
write_pack_progress_cb	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^extern "C" fn write_pack_progress_cb($/;"	f
write_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/context.rs	/^    fn write_str(&mut self, s: &str) -> fmt::Result {$/;"	P	implementation:Quoted
write_str	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.38/src/fmt.rs	/^    fn write_str(&mut self, s: &str) -> fmt::Result {$/;"	f
write_tree	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub fn write_tree(&mut self) -> Result<Oid, Error> {$/;"	P	implementation:Index
write_tree_to	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/index.rs	/^    pub fn write_tree_to(&mut self, repo: &Repository) -> Result<Oid, Error> {$/;"	P	implementation:Index
write_u64	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/registry/extensions.rs	/^    fn write_u64(&mut self, id: u64) {$/;"	P	implementation:IdHasher
write_with_mempack	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    fn write_with_mempack() {$/;"	f	module:tests
writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    fn writer() {$/;"	f	module:tests
writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/odb.rs	/^    pub fn writer(&self, size: usize, obj_type: ObjectType) -> Result<OdbWriter<'_>, Error> {$/;"	P	implementation:Odb
writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/debug.rs	/^    fn writer(&mut self) -> &mut dyn fmt::Write {$/;"	f
writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/debug.rs	/^    fn writer(&mut self) -> &mut dyn io::Write {$/;"	f
writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/delimited.rs	/^    fn writer(&mut self) -> &mut dyn fmt::Write {$/;"	f
writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/display.rs	/^    fn writer(&mut self) -> &mut dyn fmt::Write {$/;"	f
writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/display.rs	/^    fn writer(&mut self) -> &mut dyn io::Write {$/;"	f
writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^        fn writer(&mut self) -> &mut dyn fmt::Write {$/;"	P	implementation:test_util::DebugVisitor
writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^        writer: &'a mut dyn fmt::Write,$/;"	m	struct:test_util::DebugVisitor
writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    fn writer(&mut self) -> &mut dyn fmt::Write;$/;"	P	interface:VisitFmt
writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/field/mod.rs	/^    fn writer(&mut self) -> &mut dyn io::Write;$/;"	P	interface:VisitWrite
writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    fn writer(&mut self) -> &mut dyn fmt::Write {$/;"	P	implementation:JsonVisitor
writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/json.rs	/^    writer: &'a mut dyn Write,$/;"	m	struct:JsonVisitor
writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn writer(&mut self) -> &mut dyn fmt::Write {$/;"	P	implementation:DefaultVisitor
writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    fn writer(&mut self) -> &mut dyn fmt::Write {$/;"	f
writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    writer: &'a mut dyn Write,$/;"	m	struct:DefaultVisitor
writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/mod.rs	/^    writer: &'a mut dyn fmt::Write,$/;"	m	struct:FieldFnVisitor
writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^    fn writer(&mut self) -> &mut dyn fmt::Write {$/;"	P	implementation:PrettyVisitor
writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/format/pretty.rs	/^    writer: &'a mut dyn Write,$/;"	m	struct:PrettyVisitor
writer	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/mod.rs	/^pub mod writer;$/;"	n
written	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/packbuilder.rs	/^    pub fn written(&self) -> usize {$/;"	P	implementation:PackBuilder
yday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^    fn yday(year: i32, month: i32, day: i32) -> i32 {$/;"	f	function:system_time_to_tm
yday	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn yday(year: i32, month: i32, day: i32) -> i32 {$/;"	f	function:inner::system_time_to_tm
year	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn year(&self) -> i32 {$/;"	P	implementation:Date
year	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn year(&self) -> i32 {$/;"	P	implementation:DateTime
year	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub year: Option<i32>,$/;"	m	struct:Parsed
year	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn year(&self) -> i32;$/;"	P	interface:Datelike
year	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn year(&self) -> i32 {$/;"	P	implementation:NaiveDate
year	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn year(&self) -> i32 {$/;"	P	implementation:NaiveDateTime
year	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^    pub fn year(&self) -> i32 {$/;"	P	implementation:IsoWeek
year	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.2.15/src/fmt/time/datetime.rs	/^    year: i64,$/;"	m	struct:DateTime
year_ce	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn year_ce(&self) -> (bool, u32) {$/;"	P	interface:Datelike
year_div_100	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub year_div_100: Option<i32>,$/;"	m	struct:Parsed
year_mod_100	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub year_mod_100: Option<i32>,$/;"	m	struct:Parsed
yellow	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/colored-2.0.0/src/lib.rs	/^    fn yellow(self) -> ColoredString$/;"	P	interface:Colorize
ymd	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn ymd(&self, year: i32, month: u32, day: u32) -> Date<Self> {$/;"	P	interface:TimeZone
ymd_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn ymd_opt(&self, year: i32, month: u32, day: u32) -> LocalResult<Date<Self>> {$/;"	P	interface:TimeZone
ymdf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    ymdf: DateImpl, \/\/ (year << 13) | of$/;"	m	struct:NaiveDate
yo	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn yo(&self, year: i32, ordinal: u32) -> Date<Self> {$/;"	P	interface:TimeZone
yo_opt	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn yo_opt(&self, year: i32, ordinal: u32) -> LocalResult<Date<Self>> {$/;"	P	interface:TimeZone
yo_to_cycle	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub fn yo_to_cycle(year_mod_400: u32, ordinal: u32) -> u32 {$/;"	f
ywf	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^    ywf: DateImpl, \/\/ (year << 10) | (week << 4) | flag$/;"	m	struct:IsoWeek
zero	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn zero() -> Duration {$/;"	P	implementation:Duration
zero	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^    pub fn zero() -> Oid {$/;"	P	implementation:Oid
zero	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn zero() -> Duration {$/;"	P	implementation:Duration
zero_is_zero	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/git2-0.13.15/src/oid.rs	/^    fn zero_is_zero() {$/;"	f	module:tests
zip	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs	/^pub fn zip<I, J>(i: I, j: J) -> Zip<I::IntoIter, J::IntoIter>$/;"	f
zip_eq	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn zip_eq<J>(self, other: J) -> ZipEq<Self, J::IntoIter>$/;"	P	interface:Itertools
zip_eq	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs	/^pub fn zip_eq<I, J>(i: I, j: J) -> ZipEq<I::IntoIter, J::IntoIter>$/;"	f
zip_eq_impl	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod zip_eq_impl;$/;"	n
zip_longest	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^    fn zip_longest<J>(self, other: J) -> ZipLongest<Self, J::IntoIter>$/;"	P	interface:Itertools
zip_longest	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod zip_longest;$/;"	n
zip_longest	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_longest.rs	/^pub fn zip_longest<T, U>(a: T, b: U) -> ZipLongest<T, U> $/;"	f
ziptuple	/home/asayers/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs	/^mod ziptuple;$/;"	n
